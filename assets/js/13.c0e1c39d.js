(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{372:function(s,a,t){s.exports=t.p+"assets/img/thread-status.9dc96c5f.jpg"},373:function(s,a,t){s.exports=t.p+"assets/img/thread-local.46bcd94c.png"},374:function(s,a,t){s.exports=t.p+"assets/img/threadlocal-example.08147671.png"},596:function(s,a,t){"use strict";t.r(a);var n=t(48),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"java-多线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java-多线程"}},[s._v("#")]),s._v(" Java 多线程")]),s._v(" "),n("h2",{attrs:{id:"参考文档"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[s._v("#")]),s._v(" 参考文档")]),s._v(" "),n("h2",{attrs:{id:"多线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#多线程"}},[s._v("#")]),s._v(" 多线程")]),s._v(" "),n("h3",{attrs:{id:"多进程和多线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#多进程和多线程"}},[s._v("#")]),s._v(" 多进程和多线程")]),s._v(" "),n("p",[s._v("多进程缺点：")]),s._v(" "),n("ul",[n("li",[s._v("创建进程比创建线程开销大，尤其是在 Windows 系统上；")]),s._v(" "),n("li",[s._v("进程间通信比线程间通信要慢，因为线程间通信就是读写同一个变量，速度很快。")])]),s._v(" "),n("p",[s._v("多线程优点：")]),s._v(" "),n("ul",[n("li",[s._v("多进程稳定性比多线程高\n"),n("ul",[n("li",[s._v("多进程的情况下，一个进程崩溃不会影响其他进程。")]),s._v(" "),n("li",[s._v("多线程的情况下，任何一个线程崩溃会直接导致整个进程崩溃。")])])])]),s._v(" "),n("h3",{attrs:{id:"创建多线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建多线程"}},[s._v("#")]),s._v(" 创建多线程")]),s._v(" "),n("blockquote",[n("p",[s._v("Java 创建多线程主要有 2 类，第一类是没有返回值的，也是最常见的方式。还有一种是有返回值的创建方式。")])]),s._v(" "),n("p",[s._v("没有返回值的有 2 种方法：")]),s._v(" "),n("ol",[n("li",[s._v("继承 "),n("code",[s._v("Tread")]),s._v(" 类，然后覆写 "),n("code",[s._v("run")]),s._v(" 方法，最后使用 "),n("code",[s._v("start")]),s._v(" 方法执行。")]),s._v(" "),n("li",[s._v("实现 "),n("code",[s._v("Runable")]),s._v(" 接口，然后使用 "),n("code",[s._v("start")]),s._v(" 方法进行执行。")])]),s._v(" "),n("p",[s._v("建议使用第二种方法，因为类的继承为单继承，第 2 种可以避免不能继承其他的类。")]),s._v(" "),n("p",[s._v("示例：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第一种,继承 Tread 类")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Main")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 启动新线程")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start new thread!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第二种,实现 Runable 接口")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Main")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyRunnable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 启动新线程")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyRunnable")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start new thread!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("需要返回值的创建方式：通过创建 "),n("code",[s._v("Callable")]),s._v(" 接口和 "),n("code",[s._v("Future")]),s._v(" 接口的方式来创建线程。")]),s._v(" "),n("p",[s._v("从上面两个例子我们可以看到，"),n("code",[s._v("Runable")]),s._v(" 的方式执行的代码逻辑是没有返回值的，这样我们不能获取多线程方法的返回值。如果我们想要获取多线程执行结果就需要使用 "),n("code",[s._v("Callable")]),s._v(" 结合 "),n("code",[s._v("Future")]),s._v(" 的方式实现。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Callable 和 Runable 是没有区别的，只是一个有返回值，一个不支持返回值")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExecutionException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// myCallable 是要执行的任务")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyCallable")]),s._v(" myCallable "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyCallable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// futureTask 是用来管理多线程运行的结果的")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FutureTask")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" futureTask "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FutureTask")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myCallable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("futureTask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    t1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("futureTask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyCallable")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Callable")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("h3",{attrs:{id:"线程常用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程常用方法"}},[s._v("#")]),s._v(" 线程常用方法")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("setDeamon")])]),s._v(" "),n("li",[n("code",[s._v("yield")])]),s._v(" "),n("li",[n("code",[s._v("join")])])]),s._v(" "),n("h3",{attrs:{id:"线程优先级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程优先级"}},[s._v("#")]),s._v(" 线程优先级")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("Thread.setPriority(int n)")]),s._v("，1 ~ 10, 默认值 5，1 为最低。")]),s._v(" "),n("li",[s._v("优先级高的只意味着更频繁的 CPU 调度，而不是说优先级高的就要比优先级低的早执行。")])]),s._v(" "),n("h3",{attrs:{id:"线程状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程状态"}},[s._v("#")]),s._v(" 线程状态")]),s._v(" "),n("blockquote",[n("p",[s._v("下图中，运行状态不属于 Java 定义的线程状态中的一种。运行状态表示已经在 CPU 中运行，这时候的状态并不是 Java 本身关注的。")])]),s._v(" "),n("p",[n("img",{attrs:{src:t(372),alt:"线程状态"}})]),s._v(" "),n("p",[s._v("在 Java 程序中，一个线程对象只能调用一次 "),n("code",[s._v("start()")]),s._v(" 方法启动新线程，并在新线程中执行 "),n("code",[s._v("run()")]),s._v(" 方法。一旦 "),n("code",[s._v("run()")]),s._v(" 方法执行完毕，线程就结束了。因此，Java 线程的状态有以下几种：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("New")]),s._v("，新创建的线程，尚未执行；")]),s._v(" "),n("li",[n("code",[s._v("Runnable")]),s._v("，运行中的线程，正在抢占 CPU 中，然后去执行 "),n("code",[s._v("run()")]),s._v(" 方法的 Java 代码；")]),s._v(" "),n("li",[n("code",[s._v("Blocked")]),s._v("，运行中的线程，因为某些操作被阻塞而挂起；")]),s._v(" "),n("li",[n("code",[s._v("Waiting")]),s._v("，运行中的线程，因为某些操作在等待中；")]),s._v(" "),n("li",[n("code",[s._v("Timed Waiting")]),s._v("，运行中的线程，因为执行 "),n("code",[s._v("sleep()")]),s._v(" 方法正在计时等待；")]),s._v(" "),n("li",[n("code",[s._v("Terminated")]),s._v("，线程已终止，因为 "),n("code",[s._v("run()")]),s._v(" 方法执行完毕。")])]),s._v(" "),n("p",[s._v("线程终止的原因有：")]),s._v(" "),n("ul",[n("li",[s._v("线程正常终止："),n("code",[s._v("run()")]),s._v(" 方法执行到 "),n("code",[s._v("return")]),s._v(" 语句返回；")]),s._v(" "),n("li",[s._v("线程意外终止："),n("code",[s._v("run()")]),s._v(" 方法因为未捕获的异常导致线程终止；")]),s._v(" "),n("li",[s._v("对某个线程的 "),n("code",[s._v("Thread")]),s._v(" 实例调用 "),n("code",[s._v("stop()")]),s._v(" 方法强制终止（强烈不推荐使用）。")]),s._v(" "),n("li",[n("code",[s._v("join()")]),s._v(" 可以使得当前线程的方法优先执行。")])]),s._v(" "),n("h3",{attrs:{id:"中断线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中断线程"}},[s._v("#")]),s._v(" 中断线程")]),s._v(" "),n("ul",[n("li",[s._v("使用 "),n("code",[s._v("interrupt()")]),s._v(" 中断线程，使用 "),n("code",[s._v("isInterrupted()")]),s._v(" 检测是否中断;")])]),s._v(" "),n("p",[n("code",[s._v("volatile")]),s._v(" 关键字的目的是告诉虚拟机：")]),s._v(" "),n("ul",[n("li",[s._v("每次访问变量时，总是获取主内存的最新值；")]),s._v(" "),n("li",[s._v("每次修改变量后，立刻回写到主内存。")])]),s._v(" "),n("h3",{attrs:{id:"守护线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#守护线程"}},[s._v("#")]),s._v(" 守护线程")]),s._v(" "),n("blockquote",[n("p",[s._v("直白讲就是，在线程 A 里创建一个守护线程 B，如果线程 A 结束了，无论线程 B 当前状态如何，B 都会结束。因为 B 是 A 的守护线程，当失去了被守护者 A 的时候，线程 B 也就没有存在的必要了。")])]),s._v(" "),n("p",[n("code",[s._v("Daemon Thread")]),s._v("，守护线程是指为其他线程服务的线程。在 JVM 中，所有非守护线程都执行完毕后，无论有没有守护线程，虚拟机都会自动退出。因此，JVM 退出时，不必关心守护线程是否已结束。")]),s._v(" "),n("p",[s._v("创建方式: 在调用 "),n("code",[s._v("start()")]),s._v(" 方法前，调用 "),n("code",[s._v("setDaemon(true)")]),s._v(" 把该线程标记为守护线程。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setDaemon")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("注意：")]),s._v(" "),n("ul",[n("li",[s._v("在 Daemon 线程中产生的新线程也是 Daemon 的。")]),s._v(" "),n("li",[s._v("守护线程不能持有任何需要关闭的资源，例如打开文件等，因为虚拟机退出时，守护线程没有任何机会来关闭文件，这会导致数据丢失。")])]),s._v(" "),n("h3",{attrs:{id:"线程同步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程同步"}},[s._v("#")]),s._v(" 线程同步")]),s._v(" "),n("p",[s._v("加锁与解锁之间的代码块--临界区")]),s._v(" "),n("h4",{attrs:{id:"加锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#加锁"}},[s._v("#")]),s._v(" 加锁")]),s._v(" "),n("p",[n("code",[s._v("synchronized")]),s._v(" 锁是可重入锁；")]),s._v(" "),n("p",[s._v("我们来概括一下如何使用 "),n("code",[s._v("synchronized")]),s._v("：")]),s._v(" "),n("ul",[n("li",[s._v("找出修改共享变量的线程代码块；")]),s._v(" "),n("li",[s._v("选择一个共享实例作为锁；")]),s._v(" "),n("li",[s._v("使用 "),n("code",[s._v("synchronized(lockObject) { ... }")]),s._v("。")])]),s._v(" "),n("p",[s._v("不需要 "),n("code",[s._v("synchronized")]),s._v(" 的操作\nJVM 规范定义了几种原子操作：")]),s._v(" "),n("ul",[n("li",[s._v("基本类型（"),n("code",[s._v("long")]),s._v(" 和 "),n("code",[s._v("double")]),s._v(" 除外）赋值，例如："),n("code",[s._v("int n = m；")])]),s._v(" "),n("li",[s._v("引用类型赋值，例如："),n("code",[s._v("List<String> list = anotherList")]),s._v("。")])]),s._v(" "),n("h3",{attrs:{id:"死锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#死锁"}},[s._v("#")]),s._v(" 死锁")]),s._v(" "),n("p",[s._v("如何避免死锁呢？")]),s._v(" "),n("ul",[n("li",[s._v("线程获取锁的顺序要一致。")])]),s._v(" "),n("h3",{attrs:{id:"wait-和-notify"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#wait-和-notify"}},[s._v("#")]),s._v(" wait 和 notify")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("wait()")]),s._v(" 方法必须在当前获取的锁对象上调用，这里获取的是 "),n("code",[s._v("this")]),s._v(" 锁，因此调用 "),n("code",[s._v("this.wait()")]),s._v("。")]),s._v(" "),n("li",[n("code",[s._v("wait()")]),s._v(" 方法调用时，会释放线程获得的锁，"),n("code",[s._v("wait()")]),s._v(" 方法返回后，线程又会重新试图获得锁。")]),s._v(" "),n("li",[s._v("如何让等待的线程被重新唤醒，然后从 "),n("code",[s._v("wait()")]),s._v(" 方法返回？\n"),n("ul",[n("li",[s._v("答案是在相同的锁对象上调用 "),n("code",[s._v("notify()")]),s._v(" 方法。")])])])]),s._v(" "),n("h3",{attrs:{id:"线程池"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程池"}},[s._v("#")]),s._v(" 线程池")]),s._v(" "),n("p",[n("code",[s._v("ExecutorService")]),s._v(" 接口表示线程池")]),s._v(" "),n("p",[s._v("线程池的初始化")]),s._v(" "),n("p",[n("code",[s._v("ExecutorService")]),s._v(" 只是接口，Java 标准库提供的几个常用实现类有：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("FixedThreadPool")]),s._v("：线程数固定的线程池；")]),s._v(" "),n("li",[n("code",[s._v("CachedThreadPool")]),s._v("：线程数根据任务动态调整的线程池；")]),s._v(" "),n("li",[n("code",[s._v("SingleThreadExecutor")]),s._v("：仅单线程执行的线程池。")])]),s._v(" "),n("p",[s._v("创建这些线程池的方法都被封装到 "),n("code",[s._v("Executors")]),s._v(" 这个类中。")]),s._v(" "),n("p",[s._v("线程池的使用")]),s._v(" "),n("ul",[n("li",[s._v("使用 "),n("code",[s._v("submit()")]),s._v(" 方法提交任务，提交的任务是已经实现了 Runnable 接口的类。")])]),s._v(" "),n("p",[s._v("线程池的关闭")]),s._v(" "),n("ul",[n("li",[s._v("使用 "),n("code",[s._v("shutdown()")]),s._v("方法关闭线程池\n"),n("ul",[n("li",[s._v("它会等待正在执行的任务先完成，然后再关闭。")])])]),s._v(" "),n("li",[n("code",[s._v("shutdownNow()")]),s._v(" 会立刻停止正在执行的任务")]),s._v(" "),n("li",[n("code",[s._v("awaitTermination()")]),s._v(" 则会等待指定的时间让线程池关闭。")])]),s._v(" "),n("p",[s._v("示例：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExecutorService")]),s._v(" es "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Executors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("newFixedThreadPool")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    es"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("submit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"个任务"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Task")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"启动了"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"结束"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h3",{attrs:{id:"threadlocal"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal"}},[s._v("#")]),s._v(" ThreadLocal")]),s._v(" "),n("p",[s._v("ThreadLocal 类型变量实现变量为线程私有，原理是使用了 ThreadLocalMap。")]),s._v(" "),n("p",[s._v("使用时，将 ThreadLocal 对象作为 Map 的 key，将要存储的值作为 value 存起来，这样每个线程访问的都是当前线程的值了，也就不再存在线程安全问题。")]),s._v(" "),n("p",[n("img",{attrs:{src:t(373),alt:"ThreadLocal 原理"}})]),s._v(" "),n("h4",{attrs:{id:"java-四种引用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java-四种引用"}},[s._v("#")]),s._v(" Java 四种引用")]),s._v(" "),n("ul",[n("li",[s._v("强引用\n"),n("ul",[n("li",[s._v("只要有指针指向了这个对象，那么这个对象永远都不会被回收。例如 "),n("code",[s._v("User user = new User();")])])])]),s._v(" "),n("li",[s._v("软引用\n"),n("ul",[n("li",[s._v("还有用处，JVM 会在内存溢出时清理这部分。例如：缓存")])])]),s._v(" "),n("li",[s._v("弱引用\n"),n("ul",[n("li",[s._v("引用关系弱于软引用，不管内存是否够用，下次 GC 一定会回收")])])]),s._v(" "),n("li",[s._v("虚引用\n"),n("ul",[n("li",[s._v("不会影响对象的回收，唯一作用是对象被回收时会受到一个系统通知")])])])]),s._v(" "),n("h4",{attrs:{id:"内存泄漏问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏问题"}},[s._v("#")]),s._v(" 内存泄漏问题")]),s._v(" "),n("p",[s._v("首先说一个名词 OOM，即 Out Of Memory，内存泄露、内存溢出。")]),s._v(" "),n("p",[s._v("ThreadLocal 中的 key 是弱引用，value 是强引用。key 是每个 Thread 中的 TreadLocal 对象本身（如果没有强引用指向它，它就会被 GC 回收）：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Entry")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("WeakReference")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadLocal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** The value associated with this ThreadLocal. */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Entry")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadLocal")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 看这里的 super()，表示 key 是一个弱引用。")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        value "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("而 value 被 Entry 强引用不会被回收，具体应该是 "),n("code",[s._v("thread ref -> thread -> threadLocals -> entry -> value")]),s._v("，这时导致 value 成为了一个无法访问也不能被回收的对象，这就造成了内存泄露。")]),s._v(" "),n("p",[s._v("如果当前线程很快结束的话，最终 value 也会被回收，但是由于线程频繁的创建和销毁会占用大量资源，所以一般会使用线程池，那么线程就可能会很长时间不被销毁，那么 value 也就一直不会被回收。")]),s._v(" "),n("h5",{attrs:{id:"解决方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[s._v("#")]),s._v(" 解决方法")]),s._v(" "),n("ul",[n("li",[s._v("使用 static final，避免重复创建销毁 ThreadLocal 对象。")]),s._v(" "),n("li",[s._v("使用 remove() 方法，手动清除 ThreadLocal 对象。")])]),s._v(" "),n("p",[s._v("其实 ThreadLocal 对象的 "),n("code",[s._v("get() / set() / remove()")]),s._v(" 方法的具体实现中，都做了进一步的处理，进一步的避免了 OOM 的情况。")]),s._v(" "),n("h4",{attrs:{id:"示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),n("p",[n("img",{attrs:{src:t(374),alt:"示例"}})]),s._v(" "),n("p",[s._v("ThreadLocal 可以理解为是一个可以操作 Thread 上的那个 map 的工具类而已，因为每个线程拿到的 map 都是当前线程私有的。不要去想那个线程变量（"),n("code",[s._v("REQUEST_ID")]),s._v("）就一个，它的确就一个，它的作用是指定要拿哪个值，通过它操作的值（值所在的 map）存在于 Thread 上，这个线程变量只是个媒介而已。")]),s._v(" "),n("h2",{attrs:{id:"讨论区"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#讨论区"}},[s._v("#")]),s._v(" 讨论区")]),s._v(" "),n("blockquote",[n("p",[s._v("由于评论过多会影响页面最下方的导航，故将评论区做默认折叠处理。")])]),s._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[s._v("点击查看评论区内容，渴望您的宝贵建议~")]),s._v(" "),n("Vssue",{attrs:{title:s.$title,options:{locale:"zh"}}})],1)])}),[],!1,null,null,null);a.default=e.exports}}]);