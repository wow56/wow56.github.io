(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{453:function(s,t,a){s.exports=a.p+"assets/img/linux-boot.839c0722.png"},454:function(s,t,a){s.exports=a.p+"assets/img/ps-systemd.c83ed590.png"},455:function(s,t,a){s.exports=a.p+"assets/img/linux-system-hierarchy.760b17ab.png"},456:function(s,t,a){s.exports=a.p+"assets/img/fdisk-mbr.f9cdaf82.png"},457:function(s,t,a){s.exports=a.p+"assets/img/proc-fd.1f433e75.png"},458:function(s,t,a){s.exports=a.p+"assets/img/ssh-password.76e37c1d.png"},459:function(s,t,a){s.exports=a.p+"assets/img/ssh-public-key.0262e157.png"},460:function(s,t,a){s.exports=a.p+"assets/img/ssh-know-hosts.11684075.png"},461:function(s,t,a){s.exports=a.p+"assets/img/ftp-port.8275f18b.png"},462:function(s,t,a){s.exports=a.p+"assets/img/ftp-passive.b9056db7.png"},463:function(s,t,a){s.exports=a.p+"assets/img/ifconfig.8caa30c2.png"},464:function(s,t,a){s.exports=a.p+"assets/img/firewall-netfilter.0aec9970.png"},548:function(s,t,a){"use strict";a.r(t);var e=a(48),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"linux-系统的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-系统的使用"}},[s._v("#")]),s._v(" Linux 系统的使用")]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("这里以 Ubuntu 20.04 系统为基础，其他系统的操作可能会有不同。")])]),s._v(" "),e("blockquote",[e("p",[s._v("webmin -- web 服务器管理工具")])]),s._v(" "),e("h2",{attrs:{id:"linux-启动流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-启动流程"}},[s._v("#")]),s._v(" Linux 启动流程")]),s._v(" "),e("p",[e("img",{attrs:{src:a(453),alt:"Linux 启动流程"}})]),s._v(" "),e("h2",{attrs:{id:"系统初始化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#系统初始化"}},[s._v("#")]),s._v(" 系统初始化")]),s._v(" "),e("p",[s._v("init 进程运行以后将陆续执行系统中的其他程序，不断生成新的进程，这些进程称为 init 进程的子进程，反过来说，init 进程是这些进程的父进程，当然，这些子进程也可以进一步生成各自的子进程，依次不断繁衍下去，最终构成一棵枝繁叶茂的进程树，共同为用户提供服务。")]),s._v(" "),e("p",[s._v("init 进程正是维持整个 Linux 操作系统运行的所有进程的“始祖”，因此 init 进程是不允许被轻易终止的，需要切换不同的系统运行状态时，可以向 init 进程发送正确的执行参数，由 init 自身来完成相关操作。")]),s._v(" "),e("h2",{attrs:{id:"systemd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#systemd"}},[s._v("#")]),s._v(" Systemd")]),s._v(" "),e("p",[s._v("Systemd，即 system daemon，是 Linux 操作系统的一种 init 软件（最新的），作用是提高系统的启动速度，尽可能启动较少的进程，尽可能更多进程并发启动。")]),s._v(" "),e("blockquote",[e("p",[s._v("作为 init 进程，Systemd 进程自然永远是 1 号进程")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(454),alt:"初始化进程"}})]),s._v(" "),e("p",[s._v("Systemd 对应的进程管理命令有：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("systemctl")]),s._v("，主命令，用于管理系统和服务单元。")]),s._v(" "),e("li",[e("code",[s._v("journalctl")]),s._v("，用于访问 Systemd 日志。")]),s._v(" "),e("li",[e("code",[s._v("systemd-analyze")]),s._v("，用于查看启动耗时。")]),s._v(" "),e("li",[e("code",[s._v("hostnamectl")]),s._v("，于查看当前主机的信息。")]),s._v(" "),e("li",[e("code",[s._v("localectl")]),s._v("，用于查看本地化设置。")]),s._v(" "),e("li",[e("code",[s._v("timedatectl")]),s._v("，用于查看当前时区设置。")]),s._v(" "),e("li",[e("code",[s._v("loginctl")]),s._v("，用于查看当前登录的用户。")]),s._v(" "),e("li",[e("code",[s._v("localectl")]),s._v("，用于查看本地化设置。")]),s._v(" "),e("li",[s._v("...")])]),s._v(" "),e("h3",{attrs:{id:"添加-unit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加-unit"}},[s._v("#")]),s._v(" 添加 Unit")]),s._v(" "),e("blockquote",[e("p",[s._v("使用包管理器（如 apt）安装某些软件的时候，包管理器会帮我们将这些软件服务添加到 Systemd（即创建 xxx.service 文件），但如果是源码安装的软件，就不会有人帮我们去添加服务单元，这时候就需要我们手动添加服务单元到 Systemd 进行管理。")])]),s._v(" "),e("p",[s._v("以 "),e("code",[s._v(".service")]),s._v(" 为后缀的单元文件，封装了一个被 Systemd 监视与控制的进程。")]),s._v(" "),e("p",[e("strong",[s._v("添加步骤：")])]),s._v(" "),e("ol",[e("li",[s._v("在 "),e("code",[s._v("/etc/lib/systemd/[username]/")]),s._v(" 中添加 xxx.service 文件。\n"),e("ul",[e("li",[e("em",[s._v("这里可以把 .service 文件放在自定义位置，然后软链到 Systemd 扫描目录。")])])])]),s._v(" "),e("li",[s._v("执行 "),e("code",[s._v("systemctl enable xxx.service")]),s._v(" ("),e("em",[s._v("设置开机启动：下次开机时，该服务会被启动")]),s._v(")")])]),s._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[s._v(".service 服务文件")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 文件主要有 3 部分： Unit、Service、Install")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 控制单元，主要包括服务描述、启动顺序、依赖关系")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Unit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Description")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("description about service"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 描述服务")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Before")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("unit files"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在什么服务之前启动")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("After")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("unit files"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在什么服务之后启动")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# After 和 Before 字段只涉及启动顺序，不涉及依赖关系")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Requires")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("unit files"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表示“强依赖”关系。列在其中的Uint模块会在这个服务启动的同时被启动，如果其中任意一个启动失败，这个服务会被终止。某服务停止运行或退出，该服务也必须停止运行。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Wants")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("unit files"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表示“弱依赖”关系。某服务停止运行或退出不影响该服务继续运行；")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Conflicts")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("unit files"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PartOf")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("unit files"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该参数仅用于单元的停止或重启。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Documentation")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 文档位置")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务定义")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Service"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Type")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("simple, exec, forking, oneshot, dbus, notify, idle"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStart")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path to executable file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动程序时执行的命令。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecReload")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path to executable file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启服务执行的命令。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStop")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path to executable file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止服务时执行的命令。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStartPre")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path to executable file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动服务之前执行的命令。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStartPost")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path to executable file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动服务之后执行的命令。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStopPost")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path to executable file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止服务之后执行的命令。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("User")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("user"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定运行服务的用户")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Restart")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("condition"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Restart，定义 sshd 退出后，systemd 的重启方式。默认值：no")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RestartSec")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启服务之前需要等待的秒数。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Environment")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<>")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("EnvironmentFile")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<>")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装部分，用来定义如何启动以及是否开机启动")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Install"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("WantedBy")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("multi-user.target \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# WantedBy 表示该服务所在的Target。Target的含义是服务组，表示一组服务。“WantedBy=multi-user.target”指的是服务所在的Target是multi-user.target")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# multi-user.target是systemd默认启动的Target，表示在这个组里的所有服务，都开机启动。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Target 就是一个 Unit 组，包含许多相关的 Unit 。启动某个 Target 的时候，Systemd 就会启动里面所有的 Unit。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Alias")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("alias"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前 Unit 可用于启动的别名。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Also")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前 Unit 被 enable/disable 时，会被同时操作的其他 Unit")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br")])])]),s._v(" "),e("p",[s._v("Systemd 有系统和用户级别：")]),s._v(" "),e("ul",[e("li",[s._v("系统，"),e("code",[s._v("/usr/lib/systemd/system/")])]),s._v(" "),e("li",[s._v("用户，"),e("code",[s._v("/etc/lib/systemd/[username]/")])])]),s._v(" "),e("p",[e("em",[s._v("一般系统管理员手动创建的单元文件建议存放在 "),e("code",[s._v("/etc/systemd/system/")]),s._v(" 目录下面。")])]),s._v(" "),e("h3",{attrs:{id:"systemctl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#systemctl"}},[s._v("#")]),s._v(" systemctl")]),s._v(" "),e("p",[s._v("系统服务控制，systemd control，它提供了一组子命令来管理单个的 unit，其命令格式为：")]),s._v(" "),e("p",[e("code",[s._v("systemctl [command] [unit]")])]),s._v(" "),e("p",[s._v("command 主要有：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("start")]),s._v("：立刻启动后面接的 unit。")]),s._v(" "),e("li",[e("code",[s._v("stop")]),s._v("：立刻关闭后面接的 unit。")]),s._v(" "),e("li",[e("code",[s._v("restart")]),s._v("：立刻关闭后启动后面接的 unit，亦即执行 stop 再 start 的意思。")]),s._v(" "),e("li",[e("code",[s._v("reload")]),s._v("：不关闭 unit 的情况下，重新载入配置文件，让设置生效。")]),s._v(" "),e("li",[e("code",[s._v("enable")]),s._v("：设置下次开机时，后面接的 unit 会被启动。")]),s._v(" "),e("li",[e("code",[s._v("disable")]),s._v("：设置下次开机时，后面接的 unit 不会被启动。")]),s._v(" "),e("li",[e("code",[s._v("status")]),s._v("：目前后面接的这个 unit 的状态，会列出有没有正在执行、开机时是否启动等信息。")]),s._v(" "),e("li",[e("code",[s._v("is-active")]),s._v("：目前有没有正在运行中。")]),s._v(" "),e("li",[e("code",[s._v("is-enable")]),s._v("：开机时有没有默认要启用这个 unit。")]),s._v(" "),e("li",[e("code",[s._v("kill")]),s._v("：不要被 kill 这个名字吓着了，它其实是向运行 unit 的进程发送信号。")]),s._v(" "),e("li",[e("code",[s._v("show")]),s._v("：列出 unit 的配置。")]),s._v(" "),e("li",[e("code",[s._v("mask")]),s._v("：注销 unit，注销后你就无法启动这个 unit 了。")]),s._v(" "),e("li",[e("code",[s._v("unmask")]),s._v("：取消对 unit 的注销。")])]),s._v(" "),e("h2",{attrs:{id:"目录结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[s._v("#")]),s._v(" 目录结构")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://www.runoob.com/linux/linux-system-contents.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Linux 目录结构"),e("OutboundLink")],1)]),s._v(" "),e("p",[e("img",{attrs:{src:a(455),alt:"Linux 目录结构"}})]),s._v(" "),e("h2",{attrs:{id:"挂载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#挂载"}},[s._v("#")]),s._v(" 挂载")]),s._v(" "),e("blockquote",[e("p",[e("code",[s._v("hda1")]),s._v("、"),e("code",[s._v("sda1")])]),s._v(" "),e("ul",[e("li",[s._v("hd(IDE 即 ATA 并行接口)/sd(scsi、SATA 串行接口)，表示是硬盘")]),s._v(" "),e("li",[s._v("a 磁盘序号 a-z，表示第一块硬盘")]),s._v(" "),e("li",[s._v("1 分区序号，表示第一个分区")])])]),s._v(" "),e("h3",{attrs:{id:"理论先行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#理论先行"}},[s._v("#")]),s._v(" 理论先行")]),s._v(" "),e("p",[s._v("因为外存中的数据是不能直接和 CPU 进行交互的，所以需要将外存中的数据加载到内存中，Linux 内核在内存中预留了一个空目录，将块设备的根目录 "),e("code",[s._v("/")]),s._v(" 与这个空目录绑定，这样根目录与内存就有了关联，发生在根目录以及在根目录下的操作，都会实际发生在块设备上。")]),s._v(" "),e("p",[s._v("每个块设备都有自己的文件系统，比如根目录下有一个简易系统组成："),e("code",[s._v("/")]),s._v(" 下包含 "),e("code",[s._v("/home")]),s._v("、"),e("code",[s._v("/usr")]),s._v("、"),e("code",[s._v("/proc")]),s._v("、"),e("code",[s._v("/dev")]),s._v("、"),e("code",[s._v("/etc")]),s._v(" 等等。")]),s._v(" "),e("p",[s._v("如果你还有第二块硬盘（第一块硬盘已经绑定基本的文件系统），这时，你感觉你的 "),e("code",[s._v("/home")]),s._v(" 需要扩大一下容量，那么你就可以将你的第二块硬盘挂载到第一块硬盘的文件系统中的 "),e("code",[s._v("/home")]),s._v(" 目录，当你挂载上之后，后面你对 "),e("code",[s._v("/home")]),s._v(" 目录的操作实际就会发生在第二块硬盘上。")]),s._v(" "),e("p",[s._v("当你在 "),e("code",[s._v("/home")]),s._v(" 挂载了第二块硬盘，那么后面你对 "),e("code",[s._v("/home")]),s._v(" 目录的操作实际就会发生在第二块硬盘上，挂载之前 "),e("code",[s._v("/home")]),s._v(" 下的数据还在，只不过你使用不了了，如果你将第二块硬盘 umount，那么 "),e("code",[s._v("/home")]),s._v(" 又重新关联到了第一块盘（之前的数据）。")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://www.zhihu.com/question/512414198",target:"_blank",rel:"noopener noreferrer"}},[s._v("极佳的讲解"),e("OutboundLink")],1)]),s._v(" "),e("h3",{attrs:{id:"磁盘挂载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#磁盘挂载"}},[s._v("#")]),s._v(" 磁盘挂载")]),s._v(" "),e("blockquote",[e("p",[e("strong",[s._v("磁盘分区：")]),s._v(" 在 Linux 中，磁盘是通过分区来使用的。分区是将一个硬盘划分成几个逻辑部分来使用，在每个分区中可以存储不同的文件系统。因此，挂载磁盘前，需要先对磁盘进行分区，磁盘分区的过程可以通过命令行工具或图形界面工具来完成。这里使用 "),e("code",[s._v("fdisk")]),s._v(" 分区工具操作。")])]),s._v(" "),e("p",[s._v("主要步骤为：")]),s._v(" "),e("ol",[e("li",[e("strong",[s._v("添加磁盘")]),s._v(" "),e("ul",[e("li",[s._v("添加后使用 "),e("code",[s._v("fdisk -l")]),s._v(" 查看")])])]),s._v(" "),e("li",[e("strong",[s._v("创建分区")]),s._v(" "),e("ul",[e("li",[s._v("使用 "),e("code",[s._v("fdisk /dev/sdxxx")]),s._v(" 对指定的磁盘执行分区操作，进入交互式操作（按"),e("code",[s._v("m")]),s._v("打印所有菜单）")]),s._v(" "),e("li",[s._v("创建步骤 -> n -> p -> "),e("code",[s._v("开始扇区大小")]),s._v(" 直接回车表示使用默认 -> "),e("code",[s._v("结束扇区大小")]),s._v(" 直接回车 -> wq 保存并退出")])])]),s._v(" "),e("li",[e("strong",[s._v("格式化分区，建立文件系统")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("mkfd.xxx [分区]")])]),s._v(" "),e("li",[e("code",[s._v("mkfs.ext4 /dev/sda1")]),s._v(" 或者 "),e("code",[s._v("mkfs -t ext4 /dev/sda1")]),s._v(" 将分区格式化为 ext4 文件系统 "),e("strong",[s._v("用这个！")])]),s._v(" "),e("li",[e("code",[s._v("mkfs.xfs /dev/sdb1")]),s._v(" 将分区格式化为 XFS 文件系统。")]),s._v(" "),e("li",[e("em",[s._v("调用 "),e("code",[s._v("mkfs -t ext4 /dev/sda1")]),s._v(" 会调用 "),e("code",[s._v("mkfs.ext4")]),s._v(" 命令，等同于直接执行 "),e("code",[s._v("mkfs.ext4 /dev/sda1")]),s._v("。")])])])]),s._v(" "),e("li",[e("strong",[s._v("创建挂载点并挂载")]),s._v(" "),e("ul",[e("li",[s._v("自定义一个挂载点然后挂载，"),e("code",[s._v("mount /dev/sdb1 /mydir")])])])]),s._v(" "),e("li",[e("strong",[s._v("自动挂载")]),s._v(" "),e("ul",[e("li",[s._v("新增内容到 "),e("code",[s._v("/etc/fstab")])])])])]),s._v(" "),e("h3",{attrs:{id:"挂载相关命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#挂载相关命令"}},[s._v("#")]),s._v(" 挂载相关命令")]),s._v(" "),e("h4",{attrs:{id:"fdisk-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fdisk-命令"}},[s._v("#")]),s._v(" fdisk 命令")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://www.runoob.com/linux/linux-comm-fdisk.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("fdisk"),e("OutboundLink")],1),s._v("，固定磁盘(Fixed Disk) 或 格式化磁盘(Format Disk)，它是命令行下允许用户对分区进行查看、创建、调整大小、删除、移动和复制的工具。它支持 MBR、Sun、SGI、BSD 分区表，但是它不支持 GUID 分区表（GPT）。它不是为操作大分区设计的。")]),s._v(" "),e("p",[e("code",[s._v("fdisk")]),s._v(" 允许我们在每块硬盘上创建最多四个主分区。它们中的其中一个可以作为扩展分区，并下设多个逻辑分区。1-4 扇区作为主分区被保留，逻辑分区从扇区 5 开始。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(456),alt:"MBR 分区"}})]),s._v(" "),e("ul",[e("li",[e("code",[s._v("-l")]),s._v(" list all 分区信息。")]),s._v(" "),e("li",[e("code",[s._v("fdisk /dev/sdb")]),s._v(" 对指定的磁盘进行分区\n"),e("ul",[e("li",[e("code",[s._v("m")]),s._v(" 查看菜单")]),s._v(" "),e("li",[e("code",[s._v("n")]),s._v(" 新建分区")]),s._v(" "),e("li",[e("code",[s._v("d")]),s._v(" 删除分区")])])])]),s._v(" "),e("h4",{attrs:{id:"lsblk-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lsblk-命令"}},[s._v("#")]),s._v(" lsblk 命令")]),s._v(" "),e("p",[e("code",[s._v("lsblk")]),s._v("，list block devices，展示所有块设备信息、分区情况、挂载点等。")]),s._v(" "),e("p",[e("code",[s._v("blkid")]),s._v("，查看块设备的 UUID、名称、文件系统等。")]),s._v(" "),e("h4",{attrs:{id:"mount"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mount"}},[s._v("#")]),s._v(" mount")]),s._v(" "),e("p",[e("code",[s._v("mount /dev/sdb1 /mydir")]),s._v("，将分区挂载到指定挂载点上。")]),s._v(" "),e("p",[e("code",[s._v("umount")]),s._v(" 是卸载，可以通过挂载点或者设备参数进行卸载 "),e("code",[s._v("umount /mydir")]),s._v(" or "),e("code",[s._v("umount /dev/sda1")])]),s._v(" "),e("h4",{attrs:{id:"etc-fstab"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#etc-fstab"}},[s._v("#")]),s._v(" /etc/fstab")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("dev/sdb1 /mnt/sdb ext4 defaults "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 参数解释：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第1列: 挂载设备")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     (1) /dev/sda5  ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     (2) UUID=设备的uuid   rhel6/7的默认写法   同一台机器内唯一的一个设备标识")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第2列: 挂载点")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第3列: 文件系统类型")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第4列: 文件系统属性\t")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第5列: 是否对文件系统进行磁带备份：0 不备份")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第6列: 是否检查文件系统：0 不检查")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h2",{attrs:{id:"配置-jdk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置-jdk"}},[s._v("#")]),s._v(" 配置 JDK")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("安装")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" add-apt-repository ppa:openjdk-r/ppa\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 有的系统这一句即可。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" openjdk-8-jdk\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("配置环境变量")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打开配置文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/profile\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在文件最末尾追加以下内容：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JAVA_HOME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/lib/jvm/java-8-openjdk-amd64\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JRE_HOME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${JAVA_HOME}")]),s._v("/jre\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CLASSPATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(".:"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${JAVA_HOME}")]),s._v("/lib:"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${JRE_HOME}")]),s._v("/lib\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(".:"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${JAVA_HOME}")]),s._v("/bin:"),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])])])]),s._v(" "),e("h2",{attrs:{id:"环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[s._v("#")]),s._v(" 环境变量")]),s._v(" "),e("p",[s._v("执行 "),e("code",[s._v("export")]),s._v(" 返回系统中所有的环境变量。")]),s._v(" "),e("h3",{attrs:{id:"path"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#path"}},[s._v("#")]),s._v(" PATH")]),s._v(" "),e("blockquote",[e("p",[s._v("为什么使用 rm、rmdir、ls 等命令时，无论当前位于哪个目录，都可以直接使用，\n而无需指明命令的执行文件所在的位置（绝对路径）呢？其实，这是 PATH 环境变量在起作用。")])]),s._v(" "),e("p",[s._v("首先，执行 "),e("code",[s._v("echo $PATH")]),s._v("，会返回 PATH 环境变量的所有值。")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("➜  ~ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n/usr/java/jdk8/bin:/home/user/.gvm/pkgsets/go1.16.5/global/bin:/home/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("PATH 环境变量的内容是由一堆目录组成的，各目录之间用冒号 "),e("code",[s._v(":")]),s._v(" 隔开。\n当执行某个命令时，Linux 会依照 PATH 中包含的目录依次搜寻该命令的可执行文件，\n一旦找到，即正常执行；反之，则提示无法找到该命令。")]),s._v(" "),e("p",[s._v("如果在 PATH 包含的目录中，有多个目录都包含某命令的可执行文件，那么会 "),e("strong",[s._v("执行先搜索到的")]),s._v(" 可执行文件。")]),s._v(" "),e("blockquote",[e("p",[s._v("换言之：你的 "),e("code",[s._v("rm")]),s._v(" 命令实际上是在 "),e("code",[s._v("/usr/bin/rm")]),s._v(" 这个位置，但是你可以在任何目录下使用它，\n这是因为 "),e("code",[s._v("/usr/bin/")]),s._v(" 目录已经存在于环境变量 PATH 中，当你运行 "),e("code",[s._v("rm")]),s._v(" 命令的时候，系统会去直接去 PATH 中去查找，\n找到就执行，找不到就报错。先找到的就直接执行，不再继续查找了。")])]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("➜  ~ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v("\n/usr/bin/rm\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),e("p",[s._v("只要你的命令（脚本）在 "),e("code",[s._v("PATH")]),s._v(" 声明的路径内，就可以全局使用。这时候，你可能会选择 "),e("code",[s._v("ln -s <your_script> <一个已经声明的 PATH 路径>")]),s._v("，这样就可以不用配置环境变量，从而使得你的脚本全局可用。比如，你可能会将你下载的一个第三方脚本软链到 "),e("code",[s._v("/usr/bin")]),s._v(" 目录，因为该目录已经配置到 "),e("code",[s._v("PATH")]),s._v("，所以你将脚本软链过去，就可以实现命令全局可用。")]),s._v(" "),e("p",[s._v("但是，软链接一定要用 "),e("strong",[s._v("绝对路径")]),s._v(" ！！！")])]),s._v(" "),e("h3",{attrs:{id:"修改-path"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改-path"}},[s._v("#")]),s._v(" 修改 PATH")]),s._v(" "),e("p",[s._v("// TODO")]),s._v(" "),e("h2",{attrs:{id:"crond"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#crond"}},[s._v("#")]),s._v(" crond")]),s._v(" "),e("blockquote",[e("p",[s._v("Linux 中有些服务以 "),e("code",[s._v("d")]),s._v(" 结尾，"),e("code",[s._v("d")]),s._v(" 是 "),e("code",[s._v("daemon")]),s._v(" 的缩写，说明它自己是个守护进程("),e("code",[s._v("daemon")]),s._v(") ，它在后台运行，一般都是用来做服务端程序(服务 service)。\n如 "),e("code",[s._v("mysqld")]),s._v(" 代表是 "),e("code",[s._v("mysql")]),s._v(" 数据库服务的守护进程。")])]),s._v(" "),e("p",[e("code",[s._v("crond")]),s._v(" 是 "),e("code",[s._v("Linux")]),s._v(" 下用来周期性的执行某种任务或等待处理某些事件的一个守护进程，与 Windows 下的计划任务类似，当安装完成操作系统后，默认会安装此服务工具并自动启动"),e("code",[s._v("crond")]),s._v(" 进程，"),e("code",[s._v("crond")]),s._v(" 进程每分钟会定期检查是否有要执行的任务，如果有要执行的任务，则自动执行该任务。")]),s._v(" "),e("p",[e("code",[s._v("crond")]),s._v(" 的最小粒度是分钟，该服务每分钟会去检查一下任务列表文件，然后执行需要执行的脚本。对应的 cron 表达式只有 5 级："),e("code",[s._v("* * * * *")]),s._v("，分别是 "),e("code",[s._v("minute hour day month week command")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"crontab"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#crontab"}},[s._v("#")]),s._v(" crontab")]),s._v(" "),e("p",[e("code",[s._v("crond")]),s._v(" 服务的命令是 "),e("code",[s._v("crontab")]),s._v("，常用参数如下：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("crontab -e")]),s._v("，编辑任务文件。"),e("em",[s._v("常用")])]),s._v(" "),e("li",[e("code",[s._v("crontab -l")]),s._v("，查看任务文件。")]),s._v(" "),e("li",[e("code",[s._v("crontab -r")]),s._v("，删除任务文件。")]),s._v(" "),e("li",[e("code",[s._v("crontab -i")]),s._v("，删除任务文件(交互性的，简单说就是会让确认)。")]),s._v(" "),e("li",[e("code",[s._v("crontab -u")]),s._v("，编辑任务文件，使用 "),e("code",[s._v("-u")]),s._v(" 指定用户，如果不加这个参数，默认操作的是当前用户的文件。")])]),s._v(" "),e("p",[s._v("注意：任务文件中存放了某个用户下配置的所有 cron 任务，如果只是移除某个任务，只需要使用 "),e("code",[s._v("crontab -e")]),s._v(" 移除要删除的任务就行了。")]),s._v(" "),e("h3",{attrs:{id:"执行日志"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行日志"}},[s._v("#")]),s._v(" 执行日志")]),s._v(" "),e("p",[e("code",[s._v("/var/log/cron")])]),s._v(" "),e("h3",{attrs:{id:"crontab-文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#crontab-文件"}},[s._v("#")]),s._v(" crontab 文件")]),s._v(" "),e("blockquote",[e("p",[s._v("系统级别 crontab 文件在 "),e("code",[s._v("/etc/crontab")]),s._v("，用户自定义 crontab 文件在 "),e("code",[s._v("/var/spool/cron/")]),s._v(" 下，名字和用户名一致。")])]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Edit this file to introduce tasks to be run by cron.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Each task to run has to be defined through a single line")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# indicating with different fields when the task will be run")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and what command to run for the task")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# To define the time you can provide concrete values for")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# minute (m), hour (h), day of month (dom), month (mon),")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and day of week (dow) or use '*' in these fields (for 'any').# ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Notice that tasks will be started based on the cron's system")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# daemon's notion of time and timezones.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Output of the crontab jobs (including errors) is sent through")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# email to the user the crontab file belongs to (unless redirected).")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For example, you can run a backup of all your user accounts")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# at 5 a.m every week with:")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For more information see the manual pages of crontab(5) and cron(8)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# m h  dom mon dow   command")]),s._v("\n* * * * * "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" /opt/time.txt　"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每一分钟执行一次")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("h2",{attrs:{id:"用户管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用户管理"}},[s._v("#")]),s._v(" 用户管理")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("添加新用户")]),s._v(" "),e("p",[s._v("格式： "),e("code",[s._v("useradd [选项] [username]")])])]),s._v(" "),e("li",[e("p",[s._v("删除用户")]),s._v(" "),e("p",[s._v("格式： "),e("code",[s._v("userdel [选项] [username]")])])]),s._v(" "),e("li",[e("p",[s._v("修改账号")]),s._v(" "),e("p",[s._v("格式： "),e("code",[s._v("usermod [选项] [username]")])])]),s._v(" "),e("li",[e("p",[s._v("修改密码")]),s._v(" "),e("p",[s._v("格式： "),e("code",[s._v("passwd")])])])]),s._v(" "),e("h2",{attrs:{id:"proc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#proc"}},[s._v("#")]),s._v(" /proc")]),s._v(" "),e("p",[s._v("在 Linux 系统中，"),e("code",[s._v("/proc")]),s._v(" (process，进程) 目录是一个特殊的文件系统，用于存储有关系统内核和进程的信息。在 "),e("code",[s._v("/proc")]),s._v(" 目录下存储了大量的系统信息文件，其中包括表示进程的文件夹、文件以及符号链接等。")]),s._v(" "),e("p",[s._v("另外，在 Linux 系统中，每个进程都会有一个数字标识符，称为进程ID（"),e("code",[s._v("PID")]),s._v("）。而在 "),e("code",[s._v("/proc")]),s._v(" 目录中，每个进程的信息都会被存储在以进程ID命名的文件夹下。")]),s._v(" "),e("h2",{attrs:{id:"fd文件描述符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fd文件描述符"}},[s._v("#")]),s._v(" fd文件描述符")]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("首先，再次明确，"),e("strong",[s._v("Linux 中一切皆文件。")])]),s._v(" "),e("p",[s._v("即使是一个设备，比如键盘、显示器等在 Linux 系统中都只是一个文件。")])]),s._v(" "),e("blockquote",[e("p",[e("code",[s._v("/proc")]),s._v(" 目录下有个子目录叫做 "),e("code",[s._v("fd")]),s._v("，也就是文件描述符，主要用来了解进程使用的文件和网络连接等信息。")])]),s._v(" "),e("p",[s._v("文件描述符，即 "),e("code",[s._v("fd")]),s._v(" -> file descriptor, "),e("code",[s._v("fd")]),s._v("是 Linux 系统中对已打开文件的一个抽象标记，所有 I/0 系统调用对已打开文件的操作都要用到它。这里的“文件”仍然是广义的，即除了普通文件和目录外，还包括管道、FIFO(命名管道)、Socket、终端、设备等。")]),s._v(" "),e("p",[s._v("文件描述符是一个与打开文件或资源相关联的较小的非负整数，"),e("em",[s._v("并且 0、1、2 三个描述符总是默认分配给标准输入、标准输出和标准错误。这就是常用的 "),e("code",[s._v("nohup./my script>my script.log 2>&1 &")]),s._v(" 命令里 2 和 1 的由来")]),s._v("。")]),s._v(" "),e("blockquote",[e("p",[s._v("像 0、1、2 这种文件描述符，也可以理解为"),e("strong",[s._v("句柄")]),s._v("，类似文件的指针的指针，可以简单理解为文件的指针（虽然不太恰当），就是根据这个能找到实际操作的文件。")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(457),alt:"/proc/fd"}})]),s._v(" "),e("p",[s._v("当一个进程打开一个文件或创建一个网络连接时，系统会为这个打开的资源分配一个文件描述符。通过 "),e("code",[s._v("/proc")]),s._v(" 目录中的 "),e("code",[s._v("fd")]),s._v(" 文件夹，可以査看进程当前打开的文件描述符以及与之关联的文件或资源。")]),s._v(" "),e("p",[s._v("在进程的 "),e("code",[s._v("fd")]),s._v(" 文件夹中，每个文件描述符会以"),e("strong",[s._v("符号链接的形式")]),s._v("存在。这些符号链接会指向进程所打开的文件或资源的真实路径。通过查看这些符号链接，可以看到进程当前正在访问的文件或资源的详细信息。")]),s._v(" "),e("h2",{attrs:{id:"重定向"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重定向"}},[s._v("#")]),s._v(" 重定向")]),s._v(" "),e("h3",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),e("blockquote",[e("p",[s._v("例子理解：")])]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test.sh 文件内容:")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" name\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name inputed by you is"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行 test.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" test.sh\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 首先程序会让你输入一个值，保存到变量 name 中，比如输入 xiaoming，然后回车，")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后就会输出 name inputed by you is xiaoming")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("在执行上述脚本的过程中，你可以简单的理解为从你键盘输入的内容到了标准输入(stdin)文件中，然后将标准输入文件的内容复制到了标准输出(stdout)文件中，然后标准输出文件一般对应的是你的显示器文件，所以内容就在显示器中输出了，当然，实际比这复杂得多。")]),s._v(" "),e("p",[s._v("标准错误则是用来输出错误信息用的，比如你输入一个不存在的命令，这时候错误信息就会输出到标准错误(stderr)文件中，它一般对应的也是显示器文件，所以错误信息就输出到显示器了。")]),s._v(" "),e("h3",{attrs:{id:"重定向-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重定向-2"}},[s._v("#")]),s._v(" 重定向")]),s._v(" "),e("blockquote",[e("p",[s._v("重定向就是将本该输出到你的显示器的内容，输出到你指定的位置。")])]),s._v(" "),e("p",[s._v("一般来说，默认标准输入(0)对应你的键盘，标准输出(1)对应你的显示器，标准错误(2)也对应你的显示器。")]),s._v(" "),e("p",[s._v("比如你输入一个命令 "),e("code",[s._v("ls /test")]),s._v("，这种情况下，默认就是将 "),e("code",[s._v("ls /test")]),s._v(" 命令的执行结果输出到了你的显示器（默认的），但是当你使用 "),e("code",[s._v("ls /test > a.txt")]),s._v(" 命令时，这表示你重新定义了命令执行结果的输出位置，即将命令执行结果重定向到 a.txt 文件中，而不是输出到显示器了。")]),s._v(" "),e("ul",[e("li",[e("code",[s._v(">")]),s._v(" "),e("ul",[e("li",[s._v("将命令执行结果的 "),e("strong",[s._v("标准输出")]),s._v(" 重定向到一个位置，如果不存在则创建，如果存在，则直接覆盖之前的内容。")])])]),s._v(" "),e("li",[e("code",[s._v("2>")]),s._v(" "),e("ul",[e("li",[s._v("将命令执行结果的 "),e("strong",[s._v("标准错误")]),s._v(" 重定向到一个位置，如果不存在则创建，如果存在，则直接覆盖之前的内容。")])])]),s._v(" "),e("li",[e("code",[s._v(">>")]),s._v(" "),e("ul",[e("li",[s._v("将命令执行结果的 "),e("strong",[s._v("标准输出")]),s._v(" 重定向到一个位置，如果不存在则创建，如果存在，则追加到原来内容的后面。")])])]),s._v(" "),e("li",[e("code",[s._v("2>>")]),s._v(" "),e("ul",[e("li",[s._v("将命令执行结果的 "),e("strong",[s._v("标准错误")]),s._v(" 重定向到一个位置，如果不存在则创建，如果存在，则追加到原来内容的后面。")])])]),s._v(" "),e("li",[e("code",[s._v("&>")]),s._v(" 或 "),e("code",[s._v("&>>")]),s._v(" "),e("ul",[e("li",[s._v("将命令执行得到的标准输出和标准错误都重定向到一个位置")])])])]),s._v(" "),e("p",[s._v("注意："),e("code",[s._v(">")]),s._v(" 等同于 "),e("code",[s._v("1>")]),s._v("，即将标准输出重定向到指定位置，因为默认操作的是标准输出，所以 "),e("code",[s._v("1>")]),s._v(" 可以简写为 "),e("code",[s._v(">")]),s._v("。"),e("code",[s._v("2>")]),s._v(" 则必须写成 "),e("code",[s._v("2>")]),s._v("，不可以简写为 "),e("code",[s._v(">")]),s._v("，同理，"),e("code",[s._v(">>")]),s._v(" 等于 "),e("code",[s._v("1>>")]),s._v("，"),e("code",[s._v("2>>")]),s._v(" 只能是 "),e("code",[s._v("2>>")]),s._v("。")]),s._v(" "),e("h2",{attrs:{id:"守护进程-daemon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#守护进程-daemon"}},[s._v("#")]),s._v(" 守护进程 daemon")]),s._v(" "),e("ul",[e("li",[s._v("前台任务（foreground job），它会独占命令行窗口，只有运行完了或者手动中止，才能执行其他命令。")]),s._v(" "),e("li",[e("code",[s._v("jobs")]),s._v(" 显示当前暂停的进程")]),s._v(" "),e("li",[s._v("在一个命令后面加上 "),e("code",[s._v("&")]),s._v("，可以将一个前台任务变成后台任务。")]),s._v(" "),e("li",[s._v("如果想将一个正在运行的任务改成后台任务\n"),e("ol",[e("li",[e("code",[s._v("CTRL + Z")]),s._v("，强制当前进程转为后台，并使之挂起(暂停)")]),s._v(" "),e("li",[e("code",[s._v("jobs -l")]),s._v(" 查看所有的后台进程。")]),s._v(" "),e("li",[e("code",[s._v("bg")]),s._v(' 命令（让最近一个暂停的"后台任务"继续执行），'),e("code",[s._v("bg %<job 号>")]),s._v(" 继续执行指定 job。")]),s._v(" "),e("li",[e("code",[s._v("fg")]),s._v(" 可以将命令转到前台执行。")])])])]),s._v(" "),e("h3",{attrs:{id:"使用-nohup-启动后台进程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-nohup-启动后台进程"}},[s._v("#")]),s._v(" 使用 nohup 启动后台进程")]),s._v(" "),e("p",[e("code",[s._v("nohup <command>")]),s._v("，no hang up，不挂起。")]),s._v(" "),e("p",[s._v("这个命令不会将启动的任务变成一个后台任务，所以在命令的最后要加一个 "),e("code",[s._v("&")]),s._v(" 符号，使启动的任务变成一个后台任务。")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("nohup java -jar classwork-0.0.1-SNAPSHOT.jar &> classwork.text &")])]),s._v(" "),e("li",[e("code",[s._v("nohup java -jar classwork-0.0.1-SNAPSHOT.jar > classwork.text 2>&1 &")])]),s._v(" "),e("li",[s._v("上面两种方式一样效果。")])]),s._v(" "),e("h2",{attrs:{id:"root-用户密码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#root-用户密码"}},[s._v("#")]),s._v(" root 用户密码")]),s._v(" "),e("p",[s._v("Ubuntu 默认 root 密码是随机的，即每次开机都有一个新的 root 密码。我们可以在终端输入命令 "),e("code",[s._v("sudo passwd")]),s._v("，然后输入当前用户的密码。终端会提示我们输入新的密码并确认，此时的密码就是 root 新密码。修改成功后，输入命令 "),e("code",[s._v("su root")]),s._v("，再输入新的密码就 ok 了。")]),s._v(" "),e("h2",{attrs:{id:"允许普通用户使用-sudo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#允许普通用户使用-sudo"}},[s._v("#")]),s._v(" 允许普通用户使用 sudo")]),s._v(" "),e("p",[s._v("Ubuntu 下普通用户用 "),e("code",[s._v("sudo")]),s._v(" 执行命令时报 "),e("em",[s._v('"xxx is not in the sudoers file.This incident will be reported"')]),s._v(" 错误，\n解决方法就是在 "),e("code",[s._v("/etc/sudoers")]),s._v(" 文件里给该用户添加权限。如下：")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("切换到 root 用户下。")])]),s._v(" "),e("li",[e("p",[e("code",[s._v("/etc/sudoers")]),s._v(" 文件默认是只读的，对 root 来说也是，因此需先添加 sudoers 文件的写权限,命令是: "),e("code",[s._v("chmod u+w /etc/sudoers")]),s._v("。")])]),s._v(" "),e("li",[e("p",[s._v("编辑 sudoers 文件: "),e("code",[s._v("vi /etc/sudoers")]),s._v("。\n找到这行 "),e("code",[s._v("root ALL=(ALL) ALL")]),s._v("，在他下面添加 "),e("code",[s._v("xxx ALL=(ALL) ALL")]),s._v(" (这里的 xxx 是你的用户名)")]),s._v(" "),e("p",[s._v("ps: 这里说下你可以 sudoers 添加下面四行中任意一条：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("youuser   "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ALL")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ALL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  ALL\n%youuser  "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ALL")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ALL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  ALL\nyouuser   "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ALL")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ALL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  NOPASSWD: ALL\n%youuser  "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ALL")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ALL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  NOPASSWD: ALL\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("第一行: 允许用户 youuser 执行 sudo 命令(需要输入密码).\n第二行: 允许用户组 youuser 里面的用户执行 sudo 命令(需要输入密码).\n第三行: 允许用户 youuser 执行 sudo 命令,并且在执行的时候不输入密码.\n第四行: 允许用户组 youuser 里面的用户执行 sudo 命令,并且在执行的时候不输入密码.")])]),s._v(" "),e("li",[e("p",[s._v("撤销 sudoers 文件写权限,命令: "),e("code",[s._v("chmod u-w /etc/sudoers")])])])]),s._v(" "),e("h2",{attrs:{id:"ssh"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssh"}},[s._v("#")]),s._v(" SSH")]),s._v(" "),e("p",[s._v("Secure Shell 的缩写，即安全外壳协议。")]),s._v(" "),e("p",[s._v("它是一种专为远程登录会话和其他网络服务提供安全性的协议，利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。")]),s._v(" "),e("p",[s._v("从客户端来看，SSH 支持两种级别的安全验证：")]),s._v(" "),e("ul",[e("li",[s._v("基于"),e("a",{attrs:{href:"#%E5%AF%86%E7%A0%81%E5%8F%A3%E4%BB%A4"}},[s._v("密码口令")])]),s._v(" "),e("li",[s._v("基于"),e("a",{attrs:{href:"#%E5%85%AC%E9%92%A5%E7%A7%81%E9%92%A5%E7%99%BB%E5%BD%95"}},[s._v("公钥登录")])])]),s._v(" "),e("h3",{attrs:{id:"密码口令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#密码口令"}},[s._v("#")]),s._v(" 密码口令")]),s._v(" "),e("p",[e("img",{attrs:{src:a(458),alt:"基于口令"}})]),s._v(" "),e("ol",[e("li",[s._v("远程主机收到用户请求，将自己的公钥发送给用户。")]),s._v(" "),e("li",[s._v("用户使用这个公钥加密自己的密码，发送到远程主机。")]),s._v(" "),e("li",[s._v("远程主机使用自己的私钥解密密码并验证。")])]),s._v(" "),e("p",[e("strong",[s._v("风险：")]),s._v(" 因为 SSH 不像 HTTPS，SSH 的公钥是没有证书中心（CA）公证的，是自己签发的，所以可能会有被别人截获你的登录请求，并冒充远程主机的风险。\n即：口令登录是只要你知道自己帐号和口令，就可以登录到远程主机。所有传输的数据都会被加密，但是不能保证你正在连接的服务器就是你想连接的服务器。\n可能会有别的服务器在冒充真正的服务器，也就是受到“中间人”这种方式的攻击。")]),s._v(" "),e("p",[e("strong",[s._v("解决方式：")]),s._v(" "),e("a",{attrs:{href:"#know-hosts"}},[s._v("know_hosts")])]),s._v(" "),e("h3",{attrs:{id:"公钥私钥登录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#公钥私钥登录"}},[s._v("#")]),s._v(" 公钥私钥登录")]),s._v(" "),e("blockquote",[e("p",[s._v("大概原理如下，并非完全一致，但主要思想是一样的")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(459),alt:"基于公钥"}})]),s._v(" "),e("ol",[e("li",[s._v("客户端生成公钥和私钥")]),s._v(" "),e("li",[s._v("用户将自己的公钥放到远程主机")]),s._v(" "),e("li",[s._v("用户在客户端向远程主机发起连接请求（携带自己的公钥），远程主机查看该公钥是否在自己的列表里，如果在，生成随机数(challenge)，使用公钥加密，返回给客户端。")]),s._v(" "),e("li",[s._v("客户端使用私钥解密，发送解密后的随机数(challenge)给远程主机。")]),s._v(" "),e("li",[s._v("远程主机验证客户端返回的随机数(challenge)正确性。")])]),s._v(" "),e("h3",{attrs:{id:"ssh-目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssh-目录"}},[s._v("#")]),s._v(" .ssh 目录")]),s._v(" "),e("p",[s._v("使用 "),e("code",[s._v("ssh-keygen")]),s._v(" 在主机上生成公钥和私钥，默认会生成在 "),e("code",[s._v(".ssh")]),s._v(" 目录里。")]),s._v(" "),e("p",[s._v("该目录会存在以下文件：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("is_rsa")]),s._v("，私钥")]),s._v(" "),e("li",[e("code",[s._v("id_rsa.pub")]),s._v("，公钥")]),s._v(" "),e("li",[e("a",{attrs:{href:"#authorizedkeys"}},[s._v("authorized_keys")]),s._v("，远程主机的公钥，一行一个")]),s._v(" "),e("li",[e("a",{attrs:{href:"#knowhosts"}},[s._v("know_hosts")]),s._v(" ，被连接主机的公钥，下次连接时会核对公钥是否一致，如果不一致，会发出警报")])]),s._v(" "),e("h4",{attrs:{id:"authorized-keys"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#authorized-keys"}},[s._v("#")]),s._v(" authorized_keys")]),s._v(" "),e("p",[s._v("客户端想要连接远程主机，需要将客户端生成的公钥放到远程主机，这里放的就是远程主机的 "),e("code",[s._v("authorized_keys")]),s._v(" 目录。")]),s._v(" "),e("p",[s._v("只有这样，用户才可以使用自己的私钥免密登录远程主机。")]),s._v(" "),e("p",[s._v("使用 "),e("code",[s._v("ssh-copy-id -i <file_path> user@hostname")]),s._v(" 将指定的公钥上传到待连接服务器的 "),e("code",[s._v("authorized_keys")]),s._v(" 目录。")]),s._v(" "),e("p",[s._v("这里 "),e("code",[s._v("ssh-copy-id")]),s._v(" 会自动给远程主机的相关目录配置权限。")]),s._v(" "),e("h4",{attrs:{id:"know-hosts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#know-hosts"}},[s._v("#")]),s._v(" know_hosts")]),s._v(" "),e("p",[s._v("第一次登录远程主机的时候，系统会出现以下提示：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(460),alt:"know hosts"}})]),s._v(" "),e("p",[s._v("这里是说，无法确认 "),e("code",[s._v("8.*.*.182")]),s._v(" 主机的真实性，只知道公钥指纹，是否继续连接？")]),s._v(" "),e("p",[e("em",[s._v("公钥指纹：因为公钥长度较长，不方便比对，所以将其使用 MD5 摘要后得到一个 128 位的指纹，以方便比对。")])]),s._v(" "),e("p",[s._v("如果选择继续连接的话，这个公钥就会保存在 "),e("code",[s._v(".ssh/known_hosts")]),s._v(" 中，下次再连接这个主机的时候，系统在本地的 "),e("code",[s._v("know_hosts")]),s._v(" 中检查，如果存在，就不会再弹出警告，直接提示输入密码。")]),s._v(" "),e("p",[s._v("除了每个用户都有自己的 "),e("code",[s._v("know_hosts")]),s._v(" 文件外，系统也会有一个 "),e("code",[s._v("/etc/ssh/ssh_known_hosts")]),s._v("(通常是)，用来保存一些公用的可信赖主机公钥。")]),s._v(" "),e("p",[e("strong",[s._v("问题：")])]),s._v(" "),e("ul",[e("li",[s._v("第一次连接远程主机时，仍可能会遭到“中间人”攻击。")]),s._v(" "),e("li",[s._v("由于 "),e("code",[s._v("know_hosts")]),s._v(" 需要用户来选择是否继续连接，但是用户并不知道远程主机的公钥指纹，所以这就需要远程主机公开自己的公钥指纹，以便用户自行核对。")]),s._v(" "),e("li",[s._v("一些自动化脚本中，需要自动登录到远程主机，但是 "),e("code",[s._v("know_hosts")]),s._v(" 机制必须手动输入 yes 确认，这就无法实现脚本自动化。这时，我们可以通过修改 "),e("a",{attrs:{href:"#ssh-config"}},[s._v("ssh_config")]),s._v(" 配置文件，跳过 "),e("code",[s._v("know_hosts")]),s._v(" 的询问机制，将 "),e("code",[s._v("# StrictHostKeyChecking ask")]),s._v(" 改为 "),e("code",[s._v("StrictHostKeyChecking no")]),s._v(" 就可以了。")])]),s._v(" "),e("h3",{attrs:{id:"ssh-config"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssh-config"}},[s._v("#")]),s._v(" SSH config")]),s._v(" "),e("p",[s._v("SSH 可以从以下途径获取配置参数：")]),s._v(" "),e("ul",[e("li",[s._v("命令行选项")]),s._v(" "),e("li",[s._v("用户配置文件 "),e("code",[s._v("~/.ssh/config")])]),s._v(" "),e("li",[s._v("系统配置文件 "),e("code",[s._v("/etc/ssh/ssh_config")])])]),s._v(" "),e("p",[e("a",{attrs:{href:"https://www.ssh.com/academy/ssh/config#format-of-ssh-client-config-file-ssh_config",target:"_blank",rel:"noopener noreferrer"}},[s._v("配置文件选项"),e("OutboundLink")],1),s._v("，也可以使用 "),e("code",[s._v("man ssh config")]),s._v(" 命令去查看选项详情。")]),s._v(" "),e("p",[s._v("用户配置文件示例：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gitee")]),s._v("\nHost gitee "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 别名")]),s._v("\nHostName gitee.com "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 真实地址")]),s._v("\nIdentityFile ~/.ssh/id_rsa_github "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用哪个私钥文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gitlab")]),s._v("\nHost gitlab.xxx.com\nHostName gitlab.xxx.com\nIdentityFile ~/.ssh/id_rsa_gitlab\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# github")]),s._v("\nHost github.com\nHostName github.com\nUser "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v("\nIdentityFile ~/.ssh/id_rsa_github\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aliyun")]),s._v("\nHost ali\nHostName *.*.*.* or hostName\nUser username\nIdentityFile ~/.ssh/id_rsa_aliyun\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[s._v("配置别名以后就可以使用 "),e("code",[s._v("ssh ali")]),s._v(" 直接进行服务器的登录。")]),s._v(" "),e("p",[e("strong",[s._v("注意：")]),s._v(" 配置了别名以后，要使用别名代替域名，没有配置别名的时候，才可以直接使用域名。否则会报错。")]),s._v(" "),e("h2",{attrs:{id:"scp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scp"}},[s._v("#")]),s._v(" SCP")]),s._v(" "),e("p",[s._v("scp，即 secure copy。")]),s._v(" "),e("p",[s._v("它是 linux 系统下基于 ssh 登陆进行安全的远程文件拷贝的命令，和它类似的命令有 cp，\n不过 cp 只是在本机进行拷贝不能跨服务器，而且 scp 传输是加密的。")]),s._v(" "),e("p",[s._v("scp 是加密的，rcp 是不加密的，scp 是 rcp 的加强版。")]),s._v(" "),e("p",[s._v("格式： "),e("code",[s._v("scp [参数] [原路径] [目标路径]")])]),s._v(" "),e("ul",[e("li",[e("p",[s._v("示例：将本机桌面的一张图片 aa.img 拷贝到远程主机的某个位置")]),s._v(" "),e("p",[e("code",[s._v("scp /Desktop/aa.img user@8.*.*.112:/home/user/Desktop/")])])])]),s._v(" "),e("p",[s._v("常用参数：")]),s._v(" "),e("ul",[e("li",[s._v("-B 使用批处理模式（传输过程中不询问传输口令或短语）")]),s._v(" "),e("li",[s._v("-C 允许压缩。（将 -C 标志传递给 ssh，从而打开压缩功能）")]),s._v(" "),e("li",[s._v("-p 保留原文件的修改时间，访问时间和访问权限。")]),s._v(" "),e("li",[s._v("-r 递归复制整个目录。")]),s._v(" "),e("li",[s._v("-P port 注意是大写的 P, port是指定数据传输用到的端口号。")])]),s._v(" "),e("h3",{attrs:{id:"scp-和-sftp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scp-和-sftp"}},[s._v("#")]),s._v(" SCP 和 SFTP")]),s._v(" "),e("p",[e("a",{attrs:{href:"./Using%20Linux%20OS#SCP-%E5%92%8C-SFTP"}},[s._v("异同点")])]),s._v(" "),e("h2",{attrs:{id:"sftp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sftp"}},[s._v("#")]),s._v(" SFTP")]),s._v(" "),e("p",[s._v("SSH 文件传输协议，SSH File Transfer Protocol。")]),s._v(" "),e("p",[s._v("也称 Secret File Transfer Protocol，安全文件传送协议，Secure FTP 或 SFTP。")]),s._v(" "),e("p",[s._v("和 scp 的作用一致，都是可以进行上传下载的命令。")]),s._v(" "),e("p",[s._v("sftp 无法一次性创建多级目录，只能一次创建一个目录。")]),s._v(" "),e("ul",[e("li",[s._v("sftp 指定端口号 "),e("code",[s._v("sftp -oPort=222 test@222.222.111.222")])])]),s._v(" "),e("h3",{attrs:{id:"scp-vs-sftp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scp-vs-sftp"}},[s._v("#")]),s._v(" SCP vs SFTP")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("速度：")]),s._v(" scp 比 sftp 快得多。这是因为scp实现了更高效的传输算法，不需要等待数据包确认。")]),s._v(" "),e("li",[e("strong",[s._v("安全：")]),s._v(" 两种协议都基于 ssh，提供相同的安全功能。")]),s._v(" "),e("li",[e("strong",[s._v("功能：")]),s._v(" scp 只提供文件传输的功能，但是 sftp 还提供了 cd、ls 等操作查找文件夹的功能，并且 sftp 还支持断点续传，功能比 scp 更强大。")]),s._v(" "),e("li",[e("strong",[s._v("传输文件大小：")]),s._v(" 都没有大小限制，但是 scp 更快。")])]),s._v(" "),e("h2",{attrs:{id:"ftp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ftp"}},[s._v("#")]),s._v(" FTP")]),s._v(" "),e("p",[s._v("FTP（File Transfer Protocol）只使用 TCP 协议传输，服务传输的数据不会被加密（注意安全问题），所有传输通过明文进行的。分为主动模式和被动模式，一般运行在 20 和 21 两个端口：")]),s._v(" "),e("blockquote",[e("p",[s._v("主动/被动的参照物就是服务端，主动/被动都是"),e("strong",[s._v("客户端决定的")]),s._v("。")]),s._v(" "),e("p",[s._v("主动模式 "),e("code",[s._v("PORT")]),s._v("，就是服务器主动连接客户端 "),e("em",[s._v("一般不用")])]),s._v(" "),e("p",[s._v("被动模式 "),e("code",[s._v("PASSIVE")]),s._v(" or "),e("code",[s._v("PASV")]),s._v("，就是客户端主动连接服务端 "),e("em",[s._v("一般用这个")])])]),s._v(" "),e("ul",[e("li",[s._v("数据端口 20 （默认）")]),s._v(" "),e("li",[s._v("命令端口 21 （默认）")])]),s._v(" "),e("p",[e("strong",[s._v("注意：")]),s._v(" 当混入主动/被动模式的时候，数据端口可能就不是 20 了。")]),s._v(" "),e("h3",{attrs:{id:"主动模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主动模式"}},[s._v("#")]),s._v(" 主动模式")]),s._v(" "),e("blockquote",[e("p",[s._v("客户端请求 "),e("strong",[s._v("服务器主动连接客户端")])])]),s._v(" "),e("p",[e("img",{attrs:{src:a(461),alt:"FTP 主动模式"}})]),s._v(" "),e("ol",[e("li",[s._v("客户端命令端口与 FTP 服务器的命令端口建立连接，并发送命令 "),e("code",[s._v("PORT 1027")]),s._v("。\n"),e("ul",[e("li",[e("em",[s._v("告诉服务端，我要使用主动模式，我的端口是 1027，你来连我")]),s._v("。")])])]),s._v(" "),e("li",[s._v("FTP 服务器给客户端的命令端口返回一个 "),e("code",[s._v("ACK")]),s._v("（确认）。")]),s._v(" "),e("li",[s._v("FTP 服务器发起一个从它自己的数据端口（20）到客户端先前指定的数据端口（1027）的连接。")]),s._v(" "),e("li",[s._v("最后客户端给服务器端返回一个 "),e("code",[s._v("ACK")]),s._v("（确认）。")])]),s._v(" "),e("h3",{attrs:{id:"被动模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#被动模式"}},[s._v("#")]),s._v(" 被动模式")]),s._v(" "),e("blockquote",[e("p",[s._v("客户端请求 "),e("strong",[s._v("主动去连接服务端")])])]),s._v(" "),e("p",[e("img",{attrs:{src:a(462),alt:"FTP 被动模式"}})]),s._v(" "),e("ol",[e("li",[s._v("客户端命令端口与 FTP 服务器的命令端口建立连接，并发送命令 "),e("code",[s._v("PASV")]),s._v("。\n"),e("ul",[e("li",[e("em",[s._v("告诉服务器我要用被动模式，告诉我你的端口号，我去连你")]),s._v("。")])])]),s._v(" "),e("li",[s._v("服务器返回命令 "),e("code",[s._v("PORT 2024")]),s._v("，告诉客户端 2024 端口侦听数据连接。")]),s._v(" "),e("li",[s._v("客户端初始化一个从自己的数据端口 1027 到服务器端指定的数据端口 2024 的数据连接。")]),s._v(" "),e("li",[s._v("最后服务器给客户端的数据端口返回一个 "),e("code",[s._v("ACK")]),s._v(" 响应。")])]),s._v(" "),e("h3",{attrs:{id:"ftp-vs-sftp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ftp-vs-sftp"}},[s._v("#")]),s._v(" FTP vs SFTP")]),s._v(" "),e("ul",[e("li",[s._v("端口占用\n"),e("ul",[e("li",[s._v("SFTP 属于 SSH 协议中一个，只需要使用一个22 （TCP）端口。")]),s._v(" "),e("li",[s._v("FTP 使用 2 个 FTP 连接，一个数据端口 20，一个命令端口 21。")])])]),s._v(" "),e("li",[s._v("安全\n"),e("ul",[e("li",[s._v("SFTP 是加密数据，传输效率会低一些，因为有加解密过程。")]),s._v(" "),e("li",[s._v("FTP 是明文传输数据，效率高。"),e("em",[s._v("可以使用 SSL 实现加密（FTPS）")])])])])]),s._v(" "),e("h3",{attrs:{id:"ftp-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ftp-命令"}},[s._v("#")]),s._v(" FTP 命令")]),s._v(" "),e("ul",[e("li",[s._v("下载\n"),e("ul",[e("li",[e("code",[s._v("get")]),s._v("\t从服务器下载指定文件到客户端")]),s._v(" "),e("li",[e("code",[s._v("mget")]),s._v(" 下载文件，模糊匹配")]),s._v(" "),e("li",[e("code",[s._v("newer")]),s._v(" 下载时，检测是不是新文件")]),s._v(" "),e("li",[e("code",[s._v("hash")]),s._v(" 显示#表示下载进度")])])]),s._v(" "),e("li",[s._v("上传\n"),e("ul",[e("li",[e("code",[s._v("put")]),s._v("\t从客户端传送指定文件到服务器")]),s._v(" "),e("li",[e("code",[s._v("mput")]),s._v(" 上传文件，模糊匹配")])])]),s._v(" "),e("li",[s._v("删除\n"),e("ul",[e("li",[e("code",[s._v("delete")]),s._v(" 删除远端ftp服务器上的文件")]),s._v(" "),e("li",[e("code",[s._v("mdelete")]),s._v(" 删除文件，模糊匹配")])])]),s._v(" "),e("li",[s._v("连接\n"),e("ul",[e("li",[e("code",[s._v("open")]),s._v(" 连接ftp服务器")]),s._v(" "),e("li",[e("code",[s._v("close")]),s._v(" 在不结束ftp进程的情况下，关闭与ftp服务器的连接")]),s._v(" "),e("li",[e("code",[s._v("quit")]),s._v(" 断开连接并退出ftp服务器")]),s._v(" "),e("li",[e("code",[s._v("bye")]),s._v(" 退出ftp命令状态")])])]),s._v(" "),e("li",[s._v("目录操作\n"),e("ul",[e("li",[e("code",[s._v("pwd")]),s._v(" 显示当前目录")]),s._v(" "),e("li",[e("code",[s._v("ls")]),s._v(" 显示服务器上的目录")]),s._v(" "),e("li",[e("code",[s._v("cd <directory>")]),s._v(" 改变服务器的当前目录为directory")]),s._v(" "),e("li",[e("code",[s._v("lcd <directory>")]),s._v(" 改变本地的当前目录为directory")]),s._v(" "),e("li",[e("code",[s._v("cdup")]),s._v(" 上一层目录")]),s._v(" "),e("li",[e("code",[s._v("mkdir")]),s._v(" 在远端ftp服务器上，建立文件夹")])])]),s._v(" "),e("li",[s._v("其他\n"),e("ul",[e("li",[e("code",[s._v("ascii")]),s._v(" 设置文件传输方式为ASCII模式")]),s._v(" "),e("li",[e("code",[s._v("binary")]),s._v(" 设置文件传输方式为二进制模式")]),s._v(" "),e("li",[e("code",[s._v("!")]),s._v(" 执行本地主机命令")]),s._v(" "),e("li",[e("code",[s._v("prompt")]),s._v(" 关闭交互模式")])])])]),s._v(" "),e("h2",{attrs:{id:"科学上网"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#科学上网"}},[s._v("#")]),s._v(" 科学上网")]),s._v(" "),e("p",[s._v("利用 V2ray + Qv2Ray（可视化界面）。")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("下载 v2ray-core")])]),s._v(" "),e("li",[e("p",[s._v("下载 Qv2Ray（v2ray 的图形化界面软件）")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://hissin.cn/zheteng/795.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("v2ray"),e("OutboundLink")],1),s._v(" "),e("a",{attrs:{href:"http://qv2ray.net/lang/zh/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),e("OutboundLink")],1)])]),s._v(" "),e("li",[e("p",[s._v("配置 qv2ray 内核，也就是 v2ray-core")])])]),s._v(" "),e("ul",[e("li",[s._v("执行文件路径： v2ray 的可执行文件")]),s._v(" "),e("li",[s._v("资源目录： v2ray 解压后的根目录")])]),s._v(" "),e("h2",{attrs:{id:"terminator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#terminator"}},[s._v("#")]),s._v(" Terminator")]),s._v(" "),e("p",[s._v("使用 Terminator 替换系统自带的终端。")]),s._v(" "),e("h2",{attrs:{id:"端口范围"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#端口范围"}},[s._v("#")]),s._v(" 端口范围")]),s._v(" "),e("p",[s._v("端口范围一般是 "),e("code",[s._v("0-65535")]),s._v(",其中 "),e("code",[s._v("0")]),s._v("不使用, "),e("code",[s._v("1-1023")]),s._v(" 为系统端口,也叫 BSD 保留端口。"),e("code",[s._v("1024-65535")]),s._v(" 为用户端口。")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("0-1023")]),s._v("，BSD 保留端口，也叫系统端口，这些端口只有系统特许的进程才能使用。")]),s._v(" "),e("li",[e("code",[s._v("1024-65535")]),s._v("，用户端口：\n"),e("ul",[e("li",[e("code",[s._v("1024-5000")]),s._v("，BSD 临时端口，一般的应用程序使用 1024 到 4999 来进行通讯。")]),s._v(" "),e("li",[e("code",[s._v("5001-65535")]),s._v("，BSD 服务器(非特权)端口，用来给用户自定义端口。")])])])]),s._v(" "),e("h2",{attrs:{id:"ifconfig"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ifconfig"}},[s._v("#")]),s._v(" ifconfig")]),s._v(" "),e("p",[e("code",[s._v("ifconfig")]),s._v(" 是 linux 中用于显示或配置网络设备（网络接口卡）的命令，英文全称是 network interfaces configuring。")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("ifconfig")]),s._v(" 用于配置网络接口 Interface config。")]),s._v(" "),e("li",[e("code",[s._v("iwconfig")]),s._v(" 用于配置无线网络接口 Interface Wlan config。")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(463),alt:"ifconfig"}})]),s._v(" "),e("p",[e("strong",[s._v("使用该命令最常见的三项：")])]),s._v(" "),e("ul",[e("li",[e("code",[s._v("lo")]),s._v(" (local)")]),s._v(" "),e("li",[e("code",[s._v("enp2s0")]),s._v(" (en p2s0)\n"),e("ul",[e("li",[s._v("en 表示以太网（ethernet），p2s0 表示 PCI 接口位置：bus=2, slot=0。")]),s._v(" "),e("li",[s._v("旧版的都是 "),e("code",[s._v("eth0")]),s._v("、"),e("code",[s._v("eth1")]),s._v(" 这种，在 Ubuntu 16 后进行了升级（引入 systemd "),e("a",{attrs:{href:"https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考"),e("OutboundLink")],1),s._v("）。")])])]),s._v(" "),e("li",[e("code",[s._v("wlp3s0")]),s._v(" (wl p3s0)\n"),e("ul",[e("li",[s._v("wl 表示 wlan(Wireless Local Area Network) 无线局域网。")])])])]),s._v(" "),e("p",[e("strong",[s._v("小知识:")]),s._v(" "),e("em",[s._v("PCI 外设部件互连标准(Peripheral Component Interconnect)，PCI 接口的物理位置的坐标(bus, slot)，其中 bus 表示总线，slot 表示插槽。")])]),s._v(" "),e("p",[e("strong",[s._v("其他内容含义：")])]),s._v(" "),e("ul",[e("li",[e("code",[s._v("flags")]),s._v(" 表示网卡状态:\n"),e("ul",[e("li",[e("code",[s._v("UP")]),s._v("：表示“接口已启用”。")]),s._v(" "),e("li",[e("code",[s._v("BROADCAST")]),s._v(" ：表示“主机支持广播”。")]),s._v(" "),e("li",[e("code",[s._v("RUNNING")]),s._v("：表示“接口在工作中”。")]),s._v(" "),e("li",[e("code",[s._v("MULTICAST")]),s._v("：表示“主机支持多播”。")])])]),s._v(" "),e("li",[e("code",[s._v("mtu")]),s._v("，Maximum Transmission Unit，最大传输单元，以字节为单位。")]),s._v(" "),e("li",[e("code",[s._v("inet")]),s._v("，网卡的 ip 地址，ipv4。inet6，ipv6 地址。")]),s._v(" "),e("li",[e("code",[s._v("ether")]),s._v("，链接方式为以太网，后面为硬件 mac 地址。")]),s._v(" "),e("li",[e("code",[s._v("txqueuelen")]),s._v("，网卡的传送队列长度。")]),s._v(" "),e("li",[e("code",[s._v("RX packets")]),s._v("，接收正确的数据包数。")]),s._v(" "),e("li",[e("code",[s._v("RX bytes")]),s._v("，接收的数据量。")]),s._v(" "),e("li",[e("code",[s._v("RX errors")]),s._v("，接收时，产生错误的数据包数。")]),s._v(" "),e("li",[e("code",[s._v("RX dropped")]),s._v("，接收时，丢弃的数据包数。")]),s._v(" "),e("li",[e("code",[s._v("RX overruns")]),s._v("，接收时，由于速度过快而丢失的数据包数。")]),s._v(" "),e("li",[e("code",[s._v("RX frame")]),s._v("，接收时，发生 frame 错误而丢失的数据包数。")]),s._v(" "),e("li",[e("code",[s._v("TX carrier")]),s._v("，发送时，发生 carrier（载体）错误而丢失的数据包数。")]),s._v(" "),e("li",[e("code",[s._v("collisions")]),s._v("，冲突信息包的数目。")])]),s._v(" "),e("h2",{attrs:{id:"firewall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#firewall"}},[s._v("#")]),s._v(" Firewall")]),s._v(" "),e("blockquote",[e("p",[s._v("防火墙就是一组规则，用于监控、控制进出系统的网络流量。")])]),s._v(" "),e("h3",{attrs:{id:"快速上手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速上手"}},[s._v("#")]),s._v(" 快速上手")]),s._v(" "),e("p",[s._v("防火墙是一组规则。当数据包进出受保护的网络区域时，进出内容（特别是关于其来源、目标和使用的协议等信息）会根据防火墙规则进行检测，以确定是否允许其通过。")]),s._v(" "),e("blockquote",[e("p",[s._v("防火墙的底层是 Netfilter，但是我们使用 "),e("code",[s._v("iptables")]),s._v(" 或者 "),e("code",[s._v("firewalld")]),s._v(" 等工具进行操作。")])]),s._v(" "),e("p",[s._v("防火墙真正通过 Netfilter 在 Linux 内核中实现，一开始使用 "),e("code",[s._v("iptables")]),s._v(" 规则集进行管理。由于 "),e("code",[s._v("iptables")]),s._v(" 语法晦涩难懂，所以后来又有了 "),e("code",[s._v("firewalld")]),s._v(" 等防火墙规则工具（Netfilter 解释器），不过 "),e("code",[s._v("iptables")]),s._v(" 并没有被弃用，更全面的功能还是要使用 "),e("code",[s._v("iptables")]),s._v("。")]),s._v(" "),e("p",[s._v("Linux 防火墙主要工作在网络层，属于典型的包过滤防火墙。在 RHEL 中常用的有两种火墙工具"),e("code",[s._v("iptables")]),s._v(" 和 "),e("code",[s._v("firewalld")]),s._v("，但软件本身其实并不具备防火墙功能，他们的作用都是在用户空间中管理和维护规则，只不过规则结构和使用方法不一样罢了，真正利用规则进行过滤是由内核 Netfilter 完成的。")]),s._v(" "),e("h3",{attrs:{id:"netfilter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netfilter"}},[s._v("#")]),s._v(" Netfilter")]),s._v(" "),e("p",[s._v("Linux 防火墙是由 Netfilter 组件提供的，Netfilter 工作在内核空间，集成在 Linux 内核中，\nNetfilter 是 Linux 2.4.x 之后新一代的 Linux 防火墙机制，是 Linux 内核的一个子系统。Netfilter 采用模块化设计，具有良好的可扩充性，提供扩展各种网络服务的结构化底层框架。Netfilter 与 IP 协议栈是无缝契合，并允许对数据报进行过滤、地址转换、处理等操作。")]),s._v(" "),e("p",[s._v("Netfilter IP 信息包过滤系统是一种功能强大的工具，可用于添加、编辑和除去规则，这些规则是在做信息包过滤决定时，防火墙所遵循和组成的规则。这些规则存储在专用的信息包过滤表中，而这些表集成在 Linux 内核中。在信息包过滤表中，规则被分组放在我们所谓的链（chain）中。")]),s._v(" "),e("p",[s._v("在 RHEL7 里有几种防火墙共存："),e("code",[s._v("firewalld")]),s._v("、"),e("code",[s._v("iptables")]),s._v("、"),e("code",[s._v("ebtables")]),s._v("，默认是使用 "),e("code",[s._v("firewalld")]),s._v(" 来管理 Netfilter 子系统，不过底层调用的命令仍然是 "),e("code",[s._v("iptables")]),s._v(" 等。\n如下图：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(464),alt:"防火墙详解"}})]),s._v(" "),e("h3",{attrs:{id:"firewalld"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#firewalld"}},[s._v("#")]),s._v(" Firewalld")]),s._v(" "),e("p",[s._v("Firewalld 从名字上就可以看出来是 Systemd 家族的一部分，Firewalld 可以安装在 Debian/Ubuntu 机器上，不过，它默认安装在 RedHat 和 CentOS 上。")]),s._v(" "),e("p",[s._v("Firewalld 的工具是 "),e("code",[s._v("firewall-cmd")]),s._v("（命令行工具） 和 "),e("code",[s._v("firewall-config")]),s._v("(图形界面)。")]),s._v(" "),e("p",[s._v("Firewalld 有两种状态：")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("运行时 "),e("code",[s._v("runtime")]),s._v("，修改规则"),e("strong",[s._v("马上")]),s._v("生效，但是"),e("strong",[s._v("临时")]),s._v("生效")])]),s._v(" "),e("li",[e("p",[s._v("持久配置 "),e("code",[s._v("permanent")]),s._v("，修改后"),e("strong",[s._v("需要重载")]),s._v("才会"),e("strong",[s._v("永久")]),s._v("生效")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --permanent 会将配置写入到 /etc/firewalld/{services,zones}/*.xml 文件中，配置完成后一定要 reload，否则只能待防火墙重启后这些配置才能生效。")]),s._v("\nfirewall-cmd --permanent "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("RULE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nfirewall-cmd --reload\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])])]),s._v(" "),e("h4",{attrs:{id:"常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),e("ul",[e("li",[s._v("查看开放的端口 "),e("code",[s._v("firewall-cmd --list-ports")])]),s._v(" "),e("li",[s._v("添加端口（永久生效）"),e("code",[s._v("firewall-cmd --zone=public --add-port=88/tcp --permanent")])]),s._v(" "),e("li",[s._v("重新加载防火墙 "),e("code",[s._v("firewall-cmd --reload")])])]),s._v(" "),e("h3",{attrs:{id:"iptables"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#iptables"}},[s._v("#")]),s._v(" iptables")]),s._v(" "),e("p",[s._v("// TODO")]),s._v(" "),e("h2",{attrs:{id:"查看本机出口-ip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看本机出口-ip"}},[s._v("#")]),s._v(" 查看本机出口 IP")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推荐前 2 个：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" ifconfig.me\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示详细信息")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" cip.cc\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" icanhazip.com\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" http://members.3322.org/dyndns/getip\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"etc-hosts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#etc-hosts"}},[s._v("#")]),s._v(" /etc/hosts")]),s._v(" "),e("p",[s._v("局域网内主机名到 IP 的映射配置，本地配置之后就不会再找上级的 DNS 服务器。")]),s._v(" "),e("p",[s._v("该文件的作用只是先于 DNS 解析，如果在这个文件中能找到域名和 ip 的映射就直接用这里的，就不再去 DNS 进行查询了。")]),s._v(" "),e("p",[e("strong",[s._v("注意:")])]),s._v(" "),e("ol",[e("li",[e("strong",[s._v("只在本地有用")]),s._v("，只有在修改了这个文件所在主机可以使用配置的域名。")]),s._v(" "),e("li",[s._v("并不是设置 hostname 的地方，设置主机名的位置是 "),e("code",[s._v("/etc/hostname")]),s._v("。")])]),s._v(" "),e("h2",{attrs:{id:"域名解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#域名解析"}},[s._v("#")]),s._v(" 域名解析")]),s._v(" "),e("p",[s._v("以下三个命令都在 "),e("code",[s._v("dnsutils")]),s._v(" 包内，可以使用 "),e("code",[s._v("apt instal dnsutils")]),s._v(" 安装。")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("nslookup")]),s._v(" "),e("em",[s._v("已废弃")])]),s._v(" "),e("li",[e("code",[s._v("dig")])]),s._v(" "),e("li",[e("code",[s._v("host")])])]),s._v(" "),e("h3",{attrs:{id:"nslookup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nslookup"}},[s._v("#")]),s._v(" nslookup")]),s._v(" "),e("h3",{attrs:{id:"dig"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dig"}},[s._v("#")]),s._v(" dig")]),s._v(" "),e("h3",{attrs:{id:"host"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#host"}},[s._v("#")]),s._v(" host")]),s._v(" "),e("p",[e("code",[s._v("host")]),s._v(" 命令是 "),e("code",[s._v("dig")]),s._v(" 的更加简单的显示，只显示 "),e("code",[s._v("dig")]),s._v(" 的 ANSWER SECTION。")]),s._v(" "),e("h2",{attrs:{id:"内存占用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内存占用"}},[s._v("#")]),s._v(" 内存占用")]),s._v(" "),e("p",[s._v("持续 20 秒占用 7000MB 内存；")]),s._v(" "),e("p",[e("code",[s._v("perl -e '$size = 7000 * 1024 * 1024; $buffer = \"x\" x $size; sleep 20;' &")])]),s._v(" "),e("h2",{attrs:{id:"jq"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jq"}},[s._v("#")]),s._v(" jq")]),s._v(" "),e("p",[s._v("jq 是一个命令行 JSON 工具，可以将一个 JSON 字符串格式化输出。")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/alingse/jq-manual-cn/tree/master/manual/v1.5",target:"_blank",rel:"noopener noreferrer"}},[s._v("jq 中文手册 v1.5"),e("OutboundLink")],1)]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" update\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" jq\n\n---\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 看下效果吧")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xiaoming"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h2",{attrs:{id:"包管理器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#包管理器"}},[s._v("#")]),s._v(" 包管理器")]),s._v(" "),e("p",[s._v("常见的包管理器主要有 "),e("code",[s._v("apt")]),s._v("、"),e("code",[s._v("rpm")]),s._v("、"),e("code",[s._v("yum")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"apt"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#apt"}},[s._v("#")]),s._v(" apt")]),s._v(" "),e("h3",{attrs:{id:"rpm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rpm"}},[s._v("#")]),s._v(" rpm")]),s._v(" "),e("h3",{attrs:{id:"yum"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yum"}},[s._v("#")]),s._v(" yum")]),s._v(" "),e("h4",{attrs:{id:"yum-源配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yum-源配置"}},[s._v("#")]),s._v(" yum 源配置")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /etc/yum.repos.d\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个xxx.repo，配置url")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#------")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("repository_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Repository Name\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("baseurl")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://repository_url/path\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("enabled")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gpgcheck")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gpgkey")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://repository_url/gpg_key_path\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [repository_id]：仓库的唯一标识符。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# name：仓库的名称，用于在yum操作中显示。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# baseurl：仓库的URL地址。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# enabled：是否启用该仓库，1为启用，0为禁用。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gpgcheck：是否检查包的GPG签名，1为启用，0为禁用。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gpgkey：GPG公钥的URL地址，用于验证包的签名。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -----")]),s._v("\n\nyum clean all "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清除系统所有的yum缓存")]),s._v("\nyum makeacache "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成新的yum缓存")]),s._v("\nyum repolist "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#这里能看到结果就是OK了")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("h2",{attrs:{id:"常见发行版"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见发行版"}},[s._v("#")]),s._v(" 常见发行版")]),s._v(" "),e("p",[s._v("主要分为 2 大类型：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("Debian")]),s._v(" 为代表（"),e("code",[s._v(".deb")]),s._v("），"),e("strong",[s._v("社区组织维护")]),s._v("的短发版本。\n"),e("ul",[e("li",[s._v("Debian、Ubuntu、Xandros、Linspire ...")])])]),s._v(" "),e("li",[e("code",[s._v("Red Hat")]),s._v(" 为代表（"),e("code",[s._v(".rpm")]),s._v("），"),e("strong",[s._v("商业公司维护")]),s._v("的发行版本。\n"),e("ul",[e("li",[s._v("Fedora、CentOS、Red Hat Enterprise Linux(RHEL)、OpenSUSE、Mandriva、PCLinuxOS ...")])])])]),s._v(" "),e("h2",{attrs:{id:"desktop-文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#desktop-文件"}},[s._v("#")]),s._v(" desktop 文件")]),s._v(" "),e("p",[s._v("设置代理 "),e("code",[s._v('Exec=... --proxy-server="socks5://127.0.0.1:1089"')])]),s._v(" "),e("h2",{attrs:{id:"mono"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mono"}},[s._v("#")]),s._v(" Mono")]),s._v(" "),e("p",[e("a",{attrs:{href:"http://zh.wikipedia.org/zh/Mono",target:"_blank",rel:"noopener noreferrer"}},[s._v("Mono"),e("OutboundLink")],1),s._v(" 是一个跨操作系统和硬件平台、跨编程语言，兼容于 .NET 的运行环境、框架、开发平台和工具集。")]),s._v(" "),e("p",[s._v("Mono 项目由著名 Linux 桌面 GNOME 创始人 Miguel de Icaza 发起，创建于 2001 年，先由其公司 Ximian 主持，后随 Ximian 并购于 Novell。")]),s._v(" "),e("p",[s._v("Mono 是一个开源软件平台，是符合 ECMA 标准的 .NET Framework 开源现实。它包括一个 C# 编译器，一个公用语言运行时环境，以及相关的基类库和 mono 类库。")]),s._v(" "),e("p",[s._v("Mono 可以让 .NET 程序跨平台运行在 Linux、BSD、Windows、MacOS、Sun Solaris、Wii、索尼 PlayStation、苹果 iPhone 等几乎所有常见的操作系统之上。")]),s._v(" "),e("p",[s._v("Mono 已经原生代码支持 86、X86-64、Ia64、PowerPC、SPARC(32)、ARM、S390、S390x(32-64) 等几乎所有存在的计算机系统，对于不能直接支持的计算机系统，也可以通过代码解释器支持。")]),s._v(" "),e("p",[s._v("Mono 的公用语言运行时支持编程语言的集成与互操作能力，有许多语言已经有提供了兼容于 Mono CLR 编译器，这些语言包括了：C#、Java、Boo、Nemerle、Visual Basic.NET、Python、Java Script、Oberon、Object Pascal、C、A#（ADA）、PHP、Kylix.NET、MonoLogo、Tachy（Scheme）等。")]),s._v(" "),e("p",[s._v("Mono 的优点不仅仅是跨平台，它更具有丰富的 API。除了 ECMA/ISO 标准的 CLI（Common Language Infrastructure）API 之外，Mono 也具有兼容于微软 Windows Forms、ADO.NET、ASP.NET 的 API，和 Mono 自己的 GUI API（Gtk#）。")]),s._v(" "),e("p",[s._v("许多人也纷纷加入 Mono 的阵营，以 Mono 为基础，将许多既有的动态链接库包装成 .NET 版，例如：GdaSharp（源自 GNOME Data Access，作用类似 ADO.NET）、Cocoa#（源自 MacOS X Cocoa）、X Sharp（源自 X Windows）、Qt#（源自 Qt）、Sharp WT（源自 Java SWT）、wx.NET（源自 wxWidgets）、CsGL（源自 Open GL）、C#-SDL（源自 SDL）、GeckoSharp（源自 Mozilla Gecko）。Mono 还有一个整合许多 API 的计划，称为 Tao Framework。Tao 整合了 Cg、DevIL、FreeGLUT、GLFW、GLU、OpenAL、OpenGL、SDL、WGL。")]),s._v(" "),e("h2",{attrs:{id:"zshell"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zshell"}},[s._v("#")]),s._v(" ZShell")]),s._v(" "),e("h3",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("安装 zsh")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" update\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("zsh")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("配置 zsh 为默认 shell")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/shells "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有 shell")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("zsh")]),s._v(" --version "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 zsh 版本")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" chsh -s /bin/zsh "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置 zsh 为默认 shell")]),s._v("\n\n------------\n\n或者直接输入 chsh，然后回车，输入你的 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("zsh")]),s._v(" 地址：\n/bin/zsh\n重启生效\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("安装 oh my zsh")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v("\n\n---\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 国内源")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fsSL https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -O- https://gitee.com/pocmon/mirrors/raw/master/tools/install.sh"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("卸载 oh my zsh")]),s._v(" "),e("p",[e("code",[s._v("uninstall_oh_my_zsh")])])])]),s._v(" "),e("h3",{attrs:{id:"zsh-主题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zsh-主题"}},[s._v("#")]),s._v(" zsh 主题")]),s._v(" "),e("p",[s._v("oh my zsh 分为内置主题和自定义主题。")]),s._v(" "),e("h4",{attrs:{id:"内置主题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内置主题"}},[s._v("#")]),s._v(" 内置主题")]),s._v(" "),e("p",[s._v("oh my zsh 提供了很多主题可以选择，这些主题在安装 oh my zsh 的时候，就已经下载下来了，默认是 "),e("code",[s._v("robbyrussell")]),s._v("。")]),s._v(" "),e("p",[s._v("在 home 目录下，打开 "),e("code",[s._v(".zshrc")]),s._v(" 文件，找到一下内容：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# Set name of the theme to load --- if set to "random", it will')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# load a random theme each time oh-my-zsh is loaded, in which case,")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to know which specific one was loaded, run: echo $RANDOM_THEME")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ZSH_THEME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"robbyrussell"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("使用 "),e("code",[s._v("ls ~/.oh-my-zsh/themes/")]),s._v(" 查看所有内置主题，也可以访问 "),e("code",[s._v("https://github.com/ohmyzsh/ohmyzsh/wiki/Themes")]),s._v(" 这个地址，查看所有的主题以及效果。")]),s._v(" "),e("p",[s._v("也可以 "),e("code",[s._v('ZSH_THEME="random"')]),s._v(" 设置主题为 "),e("code",[s._v("random")]),s._v(" 以后，每次打开终端都会随机切换一个新主题，或者输入 "),e("code",[s._v("zsh")]),s._v(" 重新激活终端，就会刷新主题，找到你喜欢的主题之后，记住主题名字，可以在 "),e("code",[s._v(".zshrc")]),s._v(" 中将 "),e("code",[s._v('ZSH_THEME="你喜欢的主题名"')]),s._v(" 就可以了。")]),s._v(" "),e("h4",{attrs:{id:"自定义主题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义主题"}},[s._v("#")]),s._v(" 自定义主题")]),s._v(" "),e("p",[s._v("自定义主题放置在 "),e("code",[s._v("~/.oh-my-zsh/custom/themes/")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"zsh-插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zsh-插件"}},[s._v("#")]),s._v(" zsh 插件")]),s._v(" "),e("p",[s._v("zsh 分为内置插件和自定义插件。")]),s._v(" "),e("h4",{attrs:{id:"内置插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内置插件"}},[s._v("#")]),s._v(" 内置插件")]),s._v(" "),e("p",[s._v("自带插件是在安装了 "),e("code",[s._v("oh my zsh")]),s._v(" 的时候，就已经下载下来了。")]),s._v(" "),e("p",[s._v("但是默认只启用了 "),e("code",[s._v("git")]),s._v("：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ~/.zshrc")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("plugins")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("git"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("查看自带的所有插件： "),e("code",[s._v("ls ~/.oh-my-zsh/plugins")]),s._v("，将插件名设置到 "),e("code",[s._v(".zshrc")]),s._v(" 文件中，就可以启用了。")]),s._v(" "),e("p",[s._v("开启插件后，当然你需要刷新配置文件，你可以执行 "),e("code",[s._v("source .zshrc")]),s._v(" 立即刷新配置文件，这样配置立即生效。你也可以执行 "),e("code",[s._v("zsh")]),s._v(" 这样会重新启动 zsh，它启动前会自动先加载配置文件，所以也起到了立即生效的效果。你也可以不做任何操作，关掉你的终端，重新打开，也是可以用的。")]),s._v(" "),e("p",[s._v("PS: 插件实际上就是一个脚本，配置了之后，其实就是打开你的程序之前，先去运行这个脚本（插件）。")]),s._v(" "),e("p",[s._v("推荐开启的插件：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("sudo")]),s._v(" "),e("ul",[e("li",[s._v("开启这个插件之后，如果你执行了一个命令，忘记了加 "),e("code",[s._v("sudo")]),s._v("，你只需要按两下 ESC，就会自动帮你给上一条命令添加 "),e("code",[s._v("sudo")]),s._v(" 前缀。")])])]),s._v(" "),e("li",[e("code",[s._v("colored-man-pages")]),s._v(" "),e("ul",[e("li",[s._v("帮助手册高亮")])])])]),s._v(" "),e("h4",{attrs:{id:"自定义插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义插件"}},[s._v("#")]),s._v(" 自定义插件")]),s._v(" "),e("p",[s._v("安装一个自定义的插件，你只需要将插件源码放到 "),e("code",[s._v("~/.oh-my-zsh/custom/plugins/")]),s._v("，然后和自带插件一样将插件名配置到 "),e("code",[s._v(".zshrc")]),s._v("，就可以用了。")]),s._v(" "),e("p",[s._v("推荐自定义插件：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("zsh-syntax-highlighting")]),s._v(" "),e("ul",[e("li",[s._v("将你输入的命令高亮")])])]),s._v(" "),e("li",[e("code",[s._v("zsh-autosuggestions")]),s._v(" "),e("ul",[e("li",[s._v("如果你之前输入过 "),e("code",[s._v("cd /user")]),s._v("，开启这个插件后，当你再次输入 "),e("code",[s._v("cd")]),s._v(" 时，会推荐给你之前的命令，如果你想使用它，按下 "),e("code",[s._v("->")]),s._v(" 就可以了。")])])])]),s._v(" "),e("p",[e("code",[s._v("zsh-syntax-highlighting")]),s._v(" 和 "),e("code",[s._v("zsh-autosuggestions")]),s._v(" 的库 -> "),e("a",{attrs:{href:"https://github.com/zsh-users",target:"_blank",rel:"noopener noreferrer"}},[s._v("zsh users github"),e("OutboundLink")],1)]),s._v(" "),e("h2",{attrs:{id:"讨论区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#讨论区"}},[s._v("#")]),s._v(" 讨论区")]),s._v(" "),e("blockquote",[e("p",[s._v("由于评论过多会影响页面最下方的导航，故将评论区做默认折叠处理。")])]),s._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[s._v("点击查看评论区内容，渴望您的宝贵建议~")]),s._v(" "),e("Vssue",{attrs:{title:s.$title,options:{locale:"zh"}}})],1)])}),[],!1,null,null,null);t.default=n.exports}}]);