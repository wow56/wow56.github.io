(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{372:function(s,a,t){s.exports=t.p+"assets/img/thread-status.9dc96c5f.jpg"},373:function(s,a,t){s.exports=t.p+"assets/img/thread-local.46bcd94c.png"},374:function(s,a,t){s.exports=t.p+"assets/img/threadlocal-example.08147671.png"},490:function(s,a,t){s.exports=t.p+"assets/img/date.c0a91920.png"},598:function(s,a,t){"use strict";t.r(a);var n=t(48),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"java-基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java-基础"}},[s._v("#")]),s._v(" Java 基础")]),s._v(" "),n("h2",{attrs:{id:"参考文档"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[s._v("#")]),s._v(" 参考文档")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1252599548343744",target:"_blank",rel:"noopener noreferrer"}},[s._v("廖雪峰 Java"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://bbs.huaweicloud.com/blogs/254865?utm_source=zhihu&utm_medium=bbs-ex&utm_campaign=ei&utm_content=content",target:"_blank",rel:"noopener noreferrer"}},[s._v("序列化 华为云社区"),n("OutboundLink")],1)])]),s._v(" "),n("h2",{attrs:{id:"基本数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[s._v("#")]),s._v(" 基本数据类型")]),s._v(" "),n("ul",[n("li",[s._v("Java 的数据类型一共有 2 种，一种是基本数据类型，另一种是引用数据类型。")]),s._v(" "),n("li",[s._v("Java 有 8 大基本数据类型，如果不给初始值，Java 将赋值为 "),n("code",[s._v("0")]),s._v("、"),n("code",[s._v("null")]),s._v("、 "),n("code",[s._v("false")]),s._v("。\n"),n("ul",[n("li",[s._v("只有类的成员变量才会被初始化，局部变量是必须要手动设置一个初始值的。")])])]),s._v(" "),n("li",[s._v("Java 中采用 Unicode 编码，它的汉字和字母都占用 2 个字节。")])]),s._v(" "),n("h3",{attrs:{id:"整数型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#整数型"}},[s._v("#")]),s._v(" 整数型")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("byte")])]),s._v(" "),n("li",[n("code",[s._v("short")])]),s._v(" "),n("li",[n("code",[s._v("int")])]),s._v(" "),n("li",[n("code",[s._v("long")])])]),s._v(" "),n("h3",{attrs:{id:"浮点型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浮点型"}},[s._v("#")]),s._v(" 浮点型")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("float")])]),s._v(" "),n("li",[n("code",[s._v("double")])])]),s._v(" "),n("h3",{attrs:{id:"字符型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符型"}},[s._v("#")]),s._v(" 字符型")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("char")])])]),s._v(" "),n("h3",{attrs:{id:"布尔类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#布尔类型"}},[s._v("#")]),s._v(" 布尔类型")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("boolean")])])]),s._v(" "),n("h2",{attrs:{id:"输入输出"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#输入输出"}},[s._v("#")]),s._v(" 输入输出")]),s._v(" "),n("h3",{attrs:{id:"占位符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#占位符"}},[s._v("#")]),s._v(" 占位符")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("%d")]),s._v("，格式化输出整数。")]),s._v(" "),n("li",[n("code",[s._v("%s")]),s._v("，格式化字符串。")]),s._v(" "),n("li",[n("code",[s._v("%f")]),s._v("，格式化输出浮点数。")]),s._v(" "),n("li",[n("code",[s._v("%e")]),s._v("，格式化输出科学计数法表示的浮点数。")]),s._v(" "),n("li",[n("code",[s._v("%x")]),s._v("，格式化输出十六进制整数。")])]),s._v(" "),n("h2",{attrs:{id:"面向对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#面向对象"}},[s._v("#")]),s._v(" 面向对象")]),s._v(" "),n("h3",{attrs:{id:"向上转型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#向上转型"}},[s._v("#")]),s._v(" 向上转型")]),s._v(" "),n("ul",[n("li",[s._v("子类可以调用覆写父类的方法，如果没有覆写，也可以调用父类的方法。")]),s._v(" "),n("li",[s._v("不可以调用子类独有的方法。")])]),s._v(" "),n("h3",{attrs:{id:"this"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[s._v("#")]),s._v(" this")]),s._v(" "),n("p",[s._v("this 始终指向当前实例，在类中")]),s._v(" "),n("h3",{attrs:{id:"静态字段和静态方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#静态字段和静态方法"}},[s._v("#")]),s._v(" 静态字段和静态方法")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("所有实例共享一个静态字段。")]),s._v(" "),n("div",{staticClass:"language-md line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-md"}},[n("code",[s._v('        ┌──────────────────┐\nming ──>│Person instance   │\n        ├──────────────────┤\n        │name = "Xiao Ming"│\n        │age = 12          │\n        │number ───────────┼──┐    ┌─────────────┐\n        └──────────────────┘  │    │Person class │\n                              │    ├─────────────┤\n                              ├───>│number = 99  │\n        ┌──────────────────┐  │    └─────────────┘\nhong ──>│Person instance   │  │\n        ├──────────────────┤  │\n        │name = "Xiao Hong"│  │\n        │age = 15          │  │\n        │number ───────────┼──┘\n        └──────────────────┘\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])])])]),s._v(" "),n("h3",{attrs:{id:"访问修饰符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#访问修饰符"}},[s._v("#")]),s._v(" 访问修饰符")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("private")]),s._v("，当前 class 内。")]),s._v(" "),n("li",[n("code",[s._v("default")]),s._v("，即包访问权限，当前包内。")]),s._v(" "),n("li",[n("code",[s._v("protected")]),s._v("，当前包内 + 子类。")]),s._v(" "),n("li",[n("code",[s._v("public")]),s._v("，任何位置。")])]),s._v(" "),n("h2",{attrs:{id:"关键字"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关键字"}},[s._v("#")]),s._v(" 关键字")]),s._v(" "),n("h3",{attrs:{id:"instanceof"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#instanceof"}},[s._v("#")]),s._v(" instanceof")]),s._v(" "),n("p",[s._v("// TODO")]),s._v(" "),n("h2",{attrs:{id:"java-核心-常用类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java-核心-常用类"}},[s._v("#")]),s._v(" Java 核心/常用类")]),s._v(" "),n("h3",{attrs:{id:"可变长参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#可变长参数"}},[s._v("#")]),s._v(" 可变长参数")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" bsum "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Arrays")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("stream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" bsum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("code",[s._v("...")]),s._v(" 实质就是数组。")]),s._v(" "),n("h3",{attrs:{id:"string-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#string-类"}},[s._v("#")]),s._v(" String 类")]),s._v(" "),n("p",[s._v("String 类是使用 char[] 实现的。")]),s._v(" "),n("p",[s._v("字符串内容是不可变的，所有的对象都是不可变的，当一个对象变化的时候，实际上是直接将它的指针指向了一个新的对象。")]),s._v(" "),n("p",[s._v("从String的不变性设计可以看出，如果传入的对象有可能改变，我们需要复制而不是直接引用。")]),s._v(" "),n("p",[s._v("字符串的比较：")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("==")]),s._v(" 比较的是内存单元的存储内容，"),n("code",[s._v("equals")]),s._v(" 比较的是对象的实际内容，也就是内存单元存储的指针指向的位置的内容，因为 String 是引用类型，所以使用 "),n("code",[s._v("equals")]),s._v(" 进行比较内容。")])]),s._v(" "),n("li",[n("p",[s._v("示例")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("Q：这里明明是声明了两个变量 s1 s2，原理上 s1 s2 这两个变量存储的是两个不同的指针，分别指向两个不同的地址，这两个地址内存储的都是 hello，但是为什么这里打印出来是 true。")]),s._v(" "),n("p",[s._v("A：因为 Java 在编译期会把所有的字符串当做一个对象放进常量池，所以它们的引用在这里就是一样的了。")])])]),s._v(" "),n("blockquote",[n("p",[s._v("String format")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("%d")]),s._v("，占位一个数字")]),s._v(" "),n("li",[n("code",[s._v("%2d")]),s._v("，数字占位两个空间，不足左侧补空格")]),s._v(" "),n("li",[n("code",[s._v("%.d")]),s._v("，数字保留一位有效数字")]),s._v(" "),n("li",[n("code",[s._v("%.2d")]),s._v("，数字保留两位有效数字，不足，左侧补零")]),s._v(" "),n("li",[n("code",[s._v("%02d")]),s._v("，数字长度 2，不足左侧补零")])]),s._v(" "),n("h3",{attrs:{id:"stringbuilder-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stringbuilder-类"}},[s._v("#")]),s._v(" StringBuilder 类")]),s._v(" "),n("ul",[n("li",[s._v("避免重复创建新字符串")]),s._v(" "),n("li",[s._v("使用 StringBuilder 类，可以只开辟一块空间，操作完以后使用 toString() 将内容赋值给 s。")])]),s._v(" "),n("h3",{attrs:{id:"enum-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#enum-类"}},[s._v("#")]),s._v(" Enum 类")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("enum")]),s._v(" 类型的每个常量在 "),n("code",[s._v("JVM")]),s._v(" 中只有一个唯一实例，所以可以直接用 "),n("code",[s._v("==")]),s._v(" 比较：")]),s._v(" "),n("li",[s._v("定义的 "),n("code",[s._v("enum")]),s._v(" 类型继承自 "),n("code",[s._v("java.lang.Enum")]),s._v("，无法被继承；")]),s._v(" "),n("li",[s._v("无法通过 "),n("code",[s._v("new")]),s._v(" 操作符创建 "),n("code",[s._v("enum")]),s._v(" 的实例")]),s._v(" "),n("li",[s._v("定义的每个实例都是引用类型的唯一实例；")])]),s._v(" "),n("h3",{attrs:{id:"bigdecimal-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bigdecimal-类"}},[s._v("#")]),s._v(" BigDecimal 类")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("scale()")]),s._v("，显示小数部分。")]),s._v(" "),n("li",[n("code",[s._v("setScale()")]),s._v("，设置精度。")]),s._v(" "),n("li",[n("code",[s._v("RoundingMode.HALF_UP")]),s._v("，四舍五入。")]),s._v(" "),n("li",[n("code",[s._v("RoundingMode.DOWN")]),s._v("，直接截取。")])]),s._v(" "),n("p",[n("strong",[s._v("注意：")]),s._v(" "),n("em",[s._v("比较大小")]),s._v(" 使用 "),n("code",[s._v("compareTo()")]),s._v("，不要使用 "),n("code",[s._v("equals()")]),s._v("。因为 BigDecimal 是由两部分组成的，一部分是整数部分，一部分是小数部分。")]),s._v(" "),n("h2",{attrs:{id:"日志-异常处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#日志-异常处理"}},[s._v("#")]),s._v(" 日志/异常处理")]),s._v(" "),n("h3",{attrs:{id:"捕获异常"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#捕获异常"}},[s._v("#")]),s._v(" 捕获异常")]),s._v(" "),n("ul",[n("li",[s._v("多 "),n("code",[s._v("catch")]),s._v(" 语句只会执行一条，遇到一个进去以后，就直接返回了。")]),s._v(" "),n("li",[s._v("子类写在前面。")]),s._v(" "),n("li",[n("code",[s._v("catch (IOException | NumberFormatException e)")]),s._v("，异常之间使用 "),n("code",[s._v("|")]),s._v(" 进行并列选择。")])]),s._v(" "),n("h3",{attrs:{id:"nullpointerexception"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nullpointerexception"}},[s._v("#")]),s._v(" NullPointerException")]),s._v(" "),n("ul",[n("li",[s._v("尽量初始化不要为 "),n("code",[s._v("null")]),s._v("。")])]),s._v(" "),n("h3",{attrs:{id:"断言-assert"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#断言-assert"}},[s._v("#")]),s._v(" 断言 assert")]),s._v(" "),n("ul",[n("li",[s._v("格式： "),n("code",[s._v('assert x >= 0 : "error message";')])]),s._v(" "),n("li",[s._v("断言失败时会抛出 "),n("code",[s._v("AssertionError")]),s._v("，导致程序结束退出。因此，断言不能用于可恢复的程序错误，只应该用于开发和测试阶段。")])]),s._v(" "),n("h3",{attrs:{id:"日志"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#日志"}},[s._v("#")]),s._v(" 日志")]),s._v(" "),n("p",[n("RouterLink",{attrs:{to:"/others/log/"}},[s._v("日志")]),s._v("就是 "),n("code",[s._v("Logging")]),s._v("，它的目的是为了取代 "),n("code",[s._v("System.out.println()")]),s._v("。")],1),s._v(" "),n("p",[s._v("输出日志，而不是用 "),n("code",[s._v("System.out.println()")]),s._v("，有以下几个好处：")]),s._v(" "),n("ul",[n("li",[s._v("可以设置输出样式，避免自己每次都写 "),n("code",[s._v('"ERROR: " + var')]),s._v("；")]),s._v(" "),n("li",[s._v("可以设置输出级别，禁止某些级别输出。例如，只输出错误日志；")]),s._v(" "),n("li",[s._v("可以被重定向到文件，这样可以在程序运行结束后查看日志；")]),s._v(" "),n("li",[s._v("可以按包名控制日志级别，只输出某些包打的日志；")]),s._v(" "),n("li",[s._v("等等")])]),s._v(" "),n("h3",{attrs:{id:"jdk-logging"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jdk-logging"}},[s._v("#")]),s._v(" JDK Logging")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("Java 标准库内置了日志包 "),n("code",[s._v("java.util.logging")]),s._v("。")])]),s._v(" "),n("li",[n("p",[s._v("日志级别（从严重到普通）：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("SEVERE")])]),s._v(" "),n("li",[n("code",[s._v("WARNING")])]),s._v(" "),n("li",[n("code",[s._v("INFO")]),s._v("，默认级别")]),s._v(" "),n("li",[n("code",[s._v("CONFIG")])]),s._v(" "),n("li",[n("code",[s._v("FINE")])]),s._v(" "),n("li",[n("code",[s._v("FINER")])]),s._v(" "),n("li",[n("code",[s._v("FINEST")])])])]),s._v(" "),n("li")]),s._v(" "),n("h3",{attrs:{id:"slf4j-和-logback"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#slf4j-和-logback"}},[s._v("#")]),s._v(" SLF4J 和 Logback")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("{}")]),s._v("，使用占位符。")])]),s._v(" "),n("h2",{attrs:{id:"注解-annotation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注解-annotation"}},[s._v("#")]),s._v(" 注解（Annotation）")]),s._v(" "),n("h3",{attrs:{id:"三类注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三类注解"}},[s._v("#")]),s._v(" 三类注解")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("编译器使用的")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("@Override")])]),s._v(" "),n("li",[n("code",[s._v("@SuppressWarnings")]),s._v("，告诉编译器忽略此处的代码产生的警告")]),s._v(" "),n("li",[s._v("不会编译进 .class 文件")])])]),s._v(" "),n("li",[n("p",[s._v("第二类，是由工具处理 .class 文件使用的注解，")]),s._v(" "),n("ul",[n("li",[s._v("比如有些工具会在加载 class 的时候，对 class 做动态修改，实现一些特殊的功能。这类注解会被编译进入 .class 文件，但加载结束后并不会存在于内存中。这类注解只被一些底层库使用，一般我们不必自己处理。")])])]),s._v(" "),n("li",[n("p",[s._v("自定义")])])]),s._v(" "),n("h3",{attrs:{id:"自定义注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义注解"}},[s._v("#")]),s._v(" 自定义注解")]),s._v(" "),n("h4",{attrs:{id:"java-使用-interface-语法来定义注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java-使用-interface-语法来定义注解"}},[s._v("#")]),s._v(" Java 使用 "),n("code",[s._v("@interface")]),s._v(" 语法来定义注解")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("格式：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@interface")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Report")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("level")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"info"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("注解的参数类似无参数方法，可以用 "),n("code",[s._v("default")]),s._v(" 设定一个默认值（强烈推荐）。")]),s._v(" "),n("p",[s._v("最常用的参数应当命名为 "),n("code",[s._v("value")]),s._v("。")]),s._v(" "),n("p",[s._v("如果一个参数没有设置默认值的话，使用该注解的时候会提示必须给这个参数设置一个值。")])])]),s._v(" "),n("h4",{attrs:{id:"元注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#元注解"}},[s._v("#")]),s._v(" 元注解")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("@target")]),s._v("，描述注解的适用范围（被修饰的注解可以用在什么地方）\n"),n("ul",[n("li",[n("p",[s._v("参数")]),s._v(" "),n("ul",[n("li",[s._v("类或接口："),n("code",[s._v("ElementType.TYPE")])]),s._v(" "),n("li",[s._v("字段："),n("code",[s._v("ElementType.FIELD")])]),s._v(" "),n("li",[s._v("方法："),n("code",[s._v("ElementType.METHOD")])]),s._v(" "),n("li",[s._v("构造方法："),n("code",[s._v("ElementType.CONSTRUCTOR")])]),s._v(" "),n("li",[s._v("方法参数："),n("code",[s._v("ElementType.PARAMETER")])])])]),s._v(" "),n("li",[n("p",[s._v("示例：")]),s._v(" "),n("p",[s._v("例如，定义注解 "),n("code",[s._v("@Report")]),s._v(" 可用在方法上，我们必须添加一个 "),n("code",[s._v("@Target(ElementType.METHOD)")]),s._v("：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ElementType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("METHOD"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@interface")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Report")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("level")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"info"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("定义注解 "),n("code",[s._v("@Report")]),s._v(" 可用在方法或字段上，可以把@Target注解参数变为数组 "),n("code",[s._v("{ ElementType.METHOD, ElementType.FIELD }")]),s._v("：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ElementType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("METHOD"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ElementType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("FIELD\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@interface")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Report")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("实际上 "),n("code",[s._v("@Target")]),s._v(" 定义的 "),n("code",[s._v("value")]),s._v(" 是 "),n("code",[s._v("ElementType[]")]),s._v(" 数组，只有一个元素时，可以省略数组的写法。")])])])]),s._v(" "),n("li",[n("code",[s._v("Retention")]),s._v("，描述注解保留的时间范围（声明周期）\n"),n("ul",[n("li",[s._v("3种策略\n"),n("ul",[n("li",[s._v("编译期："),n("code",[s._v("RetentionPolicy.SOURCE")])]),s._v(" "),n("li",[s._v("class 文件："),n("code",[s._v("RetentionPolicy.CLASS")])]),s._v(" "),n("li",[s._v("运行期："),n("code",[s._v("RetentionPolicy.RUNTIME")])])])])])]),s._v(" "),n("li",[n("code",[s._v("@Inherited")]),s._v("，使得被它修饰的注解拥有继承性（如果某个类使用了被 "),n("code",[s._v("@Inherited")]),s._v(" 修饰的注解，则其子类自动拥有该注解）\n"),n("ul",[n("li",[s._v("注意：使用 "),n("code",[s._v("@Inherited")]),s._v(" 定义子类是否可继承父类定义的 "),n("code",[s._v("Annotation")]),s._v("。@Inherited仅针对@Target(ElementType.TYPE)类型的 "),n("code",[s._v("annotation")]),s._v(" 有效，并且仅针对class的继承，对interface的继承无效：")])])])]),s._v(" "),n("h4",{attrs:{id:"其它注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其它注解"}},[s._v("#")]),s._v(" 其它注解")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"../../framework/spring/Spring%20Develop#AliasFor"}},[s._v("@AliasFor")]),s._v(" - Spring 的注解")])]),s._v(" "),n("h2",{attrs:{id:"泛型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#泛型"}},[s._v("#")]),s._v(" 泛型")]),s._v(" "),n("h3",{attrs:{id:"使用泛型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用泛型"}},[s._v("#")]),s._v(" 使用泛型")]),s._v(" "),n("ul",[n("li",[s._v("例如 "),n("code",[s._v("ArrayList")]),s._v(" 使用泛型的时候，如果不加定义的话，默认传入的是 Object。")])]),s._v(" "),n("h3",{attrs:{id:"编写泛型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编写泛型"}},[s._v("#")]),s._v(" 编写泛型")]),s._v(" "),n("ul",[n("li",[s._v("编写泛型类时，"),n("strong",[s._v("注意")]),s._v(" 不能用于静态方法。")])]),s._v(" "),n("h3",{attrs:{id:"擦拭法-实现方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#擦拭法-实现方式"}},[s._v("#")]),s._v(" 擦拭法 - 实现方式")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("<T>")]),s._v(" 不能是基本类型，例如 "),n("code",[s._v("int")]),s._v("，因为实际类型是 "),n("code",[s._v("Object")]),s._v("，"),n("code",[s._v("Object")]),s._v(" 类型无法持有基本类型。")]),s._v(" "),n("li",[s._v("无法取得带泛型的 "),n("code",[s._v("Class")]),s._v("。")]),s._v(" "),n("li",[s._v("无法判断带泛型的类型。")]),s._v(" "),n("li",[s._v("不能实例化 "),n("code",[s._v("T")]),s._v(" 类型。")])]),s._v(" "),n("h3",{attrs:{id:"extends-通配符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#extends-通配符"}},[s._v("#")]),s._v(" extends 通配符")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("Pair<? extends Number>")]),s._v(" 使得方法接收所有泛型类型为 "),n("code",[s._v("Number")]),s._v(" 或 "),n("code",[s._v("Number")]),s._v(" 子类的 "),n("code",[s._v("Pair")]),s._v(" 类型。")]),s._v(" "),n("li",[s._v("上面的写法可以称为上界通配符 "),n("code",[s._v("（Upper Bounds Wildcards）")])])]),s._v(" "),n("h3",{attrs:{id:"super-通配符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#super-通配符"}},[s._v("#")]),s._v(" super 通配符")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("Pair<? super Number>")])]),s._v(" "),n("li",[n("code",[s._v("Number")]),s._v(" 的父类都可以。")])]),s._v(" "),n("h3",{attrs:{id:"pecs-原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pecs-原则"}},[s._v("#")]),s._v(" PECS 原则")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("Producer Extends Consumer Super")])])]),s._v(" "),n("h3",{attrs:{id:"无限制通配符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#无限制通配符"}},[s._v("#")]),s._v(" 无限制通配符 ？")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("<?>")])])]),s._v(" "),n("h2",{attrs:{id:"集合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#集合"}},[s._v("#")]),s._v(" 集合")]),s._v(" "),n("p",[n("code",[s._v("Collection")]),s._v("，"),n("code",[s._v("java.util")]),s._v(" 包提供的，是除 Map 以外的所有集合的根接口。")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("Java")]),s._v(" 集合使用统一的 "),n("code",[s._v("Iterator")]),s._v(" 遍历")])]),s._v(" "),n("h3",{attrs:{id:"list"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[s._v("#")]),s._v(" List")]),s._v(" "),n("ul",[n("li",[s._v("在末尾添加一个元素："),n("code",[s._v("boolean add(E e)")])]),s._v(" "),n("li",[s._v("在指定索引添加一个元素："),n("code",[s._v("boolean add(int index, E e)")])]),s._v(" "),n("li",[s._v("删除指定索引的元素："),n("code",[s._v("E remove(int index)")])]),s._v(" "),n("li",[s._v("删除某个元素："),n("code",[s._v("boolean remove(Object e)")])]),s._v(" "),n("li",[s._v("获取指定索引的元素："),n("code",[s._v("E get(int index)")])]),s._v(" "),n("li",[s._v("获取链表大小（包含元素的个数）："),n("code",[s._v("int size()")])])]),s._v(" "),n("h3",{attrs:{id:"map"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[s._v("#")]),s._v(" Map")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作为 "),n("code",[s._v("key")]),s._v(" 的对象必须正确覆写 "),n("code",[s._v("equals()")]),s._v(" 方法，相等的两个 "),n("code",[s._v("key")]),s._v(" 实例调用 "),n("code",[s._v("equals()")]),s._v(" 必须返回 "),n("code",[s._v("true")]),s._v("；")])]),s._v(" "),n("li",[n("p",[s._v("作为 key 的对象还必须正确覆写 "),n("code",[s._v("hashCode()")]),s._v(" 方法，且 "),n("code",[s._v("hashCode()")]),s._v(" 方法要严格遵循以下规范：")])]),s._v(" "),n("li",[n("p",[s._v("如果两个对象相等，则两个对象的 "),n("code",[s._v("hashCode()")]),s._v(" 必须相等；")])]),s._v(" "),n("li",[n("p",[s._v("如果两个对象不相等，则两个对象的 "),n("code",[s._v("hashCode()")]),s._v(" 尽量不要相等。")])])]),s._v(" "),n("h3",{attrs:{id:"enum-map"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#enum-map"}},[s._v("#")]),s._v(" Enum Map")]),s._v(" "),n("p",[s._v("如果 "),n("code",[s._v("key")]),s._v(" 是 "),n("code",[s._v("enum")]),s._v(" 类型，使用 "),n("code",[s._v("Java")]),s._v(" 集合库提供的 "),n("code",[s._v("EnumMap")]),s._v("，它在内部以一个非常紧凑的数组存储 "),n("code",[s._v("value")]),s._v("，并且根据 "),n("code",[s._v("enum")]),s._v(" 类型的 "),n("code",[s._v("key")]),s._v(" 直接定位到内部数组的索引，并不需要计算 "),n("code",[s._v("hashCode()")]),s._v("，"),n("strong",[s._v("不但效率最高，而且没有额外的空间浪费")]),s._v("。")]),s._v(" "),n("h3",{attrs:{id:"properties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[s._v("#")]),s._v(" Properties")]),s._v(" "),n("ul",[n("li",[s._v("Properties 文件是 "),n("code",[s._v("k-v")]),s._v("，即 "),n("code",[s._v("String - String")]),s._v("，格式的。")]),s._v(" "),n("li",[s._v("Java 默认配置文件以 "),n("code",[s._v(".properties")]),s._v(" 为扩展名。")]),s._v(" "),n("li",[s._v("每行以 "),n("code",[s._v("key = value")]),s._v(" 表示，以 "),n("code",[s._v("#")]),s._v(" 开头的是注释。")])]),s._v(" "),n("p",[s._v("用 Properties 读取配置文件示例:")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" f "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"setting.properties"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Properties")]),s._v(" props "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Properties")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nprops"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("load")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("FileInputStream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" filepath "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last_open_file"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" interval "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"auto_save_interval"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("120")]),s._v('"'),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("可见，用 "),n("code",[s._v("Properties")]),s._v(" 读取配置文件，一共有三步：")]),s._v(" "),n("ul",[n("li",[s._v("创建 "),n("code",[s._v("Properties")]),s._v(" 实例；")]),s._v(" "),n("li",[s._v("调用 "),n("code",[s._v("load()")]),s._v(" 读取文件；")]),s._v(" "),n("li",[s._v("调用 "),n("code",[s._v("getProperty()")]),s._v(" 获取配置。")])]),s._v(" "),n("p",[s._v("通过 "),n("code",[s._v("setProperty()")]),s._v(" 修改了 "),n("code",[s._v("Properties")]),s._v(" 实例，可以把配置写入文件，以便下次启动时获得最新配置。写入配置文件使用 "),n("code",[s._v("store()")]),s._v(" 方法：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Properties")]),s._v(" props "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Properties")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nprops"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"url"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://www.liaoxuefeng.com"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nprops"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"language"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Java"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nprops"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("store")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FileOutputStream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C:\\\\conf\\\\setting.properties"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"这是写入的properties注释"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"set"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[s._v("#")]),s._v(" Set")]),s._v(" "),n("p",[s._v("常用方法：")]),s._v(" "),n("ul",[n("li",[s._v("将元素添加进 "),n("code",[s._v("Set<E>")]),s._v("："),n("code",[s._v("boolean add(E e)")])]),s._v(" "),n("li",[s._v("将元素从 "),n("code",[s._v("Set<E>")]),s._v(" 删除："),n("code",[s._v("boolean remove(Object e)")])]),s._v(" "),n("li",[s._v("判断是否包含元素： "),n("code",[s._v("boolean contains(Object e)")])])]),s._v(" "),n("h3",{attrs:{id:"queue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#queue"}},[s._v("#")]),s._v(" Queue")]),s._v(" "),n("p",[s._v("Queue 实际上是实现了一个先进先出（FIFO：First In First Out）的有序表。它只支持：")]),s._v(" "),n("ul",[n("li",[s._v("从头部取出元素")]),s._v(" "),n("li",[s._v("从尾部添加元素")])]),s._v(" "),n("p",[s._v("常用方法：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("int size()")]),s._v("：获取队列长度；")]),s._v(" "),n("li",[n("code",[s._v("boolean add(E)/boolean offer(E)")]),s._v("：添加元素到队尾；")]),s._v(" "),n("li",[n("code",[s._v("E remove()/E poll()")]),s._v("：获取队首元素并从队列中删除；")]),s._v(" "),n("li",[n("code",[s._v("E element()/E peek()")]),s._v("：获取队首元素但并不从队列中删除。")])]),s._v(" "),n("h2",{attrs:{id:"日期与时间"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#日期与时间"}},[s._v("#")]),s._v(" 日期与时间")]),s._v(" "),n("h3",{attrs:{id:"时间转化问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#时间转化问题"}},[s._v("#")]),s._v(" 时间转化问题")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DateTimeFormatter")]),s._v(" DATE_FORMATTER_MD "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DateTimeFormatter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ofPattern")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yyyy-M-d"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalDate")]),s._v(" localDate "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalDate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" DATE_FORMATTER_MD"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("使用 "),n("code",[s._v("yyyy-M-d")]),s._v(" 可以接收 "),n("code",[s._v("2021-1-1")]),s._v("、"),n("code",[s._v("2021-11-1")]),s._v("、"),n("code",[s._v("2021-01-01")]),s._v("、"),n("code",[s._v("2021-11-01")]),s._v(" 等类型的值。")]),s._v(" "),n("li",[s._v("使用 "),n("code",[s._v("yyyy-MM-dd")]),s._v(" 不可以接收形如 "),n("code",[s._v("2021-1-1")]),s._v("、"),n("code",[s._v("2021-11-1")]),s._v("、"),n("code",[s._v("2021-11-01")]),s._v(" 等类型的值。")])]),s._v(" "),n("h3",{attrs:{id:"java-时区问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java-时区问题"}},[s._v("#")]),s._v(" Java 时区问题")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("/etc/localtime")]),s._v(" 是用来描述本机时间")]),s._v(" "),n("li",[n("code",[s._v("/etc/timezone")]),s._v(" 是用来描述本机所属的时区")])]),s._v(" "),n("p",[s._v("在 linux 中，有一些程序会自己计算时间，不会直接采用带有时区的本机时间格式，会根据 UTC 时间和本机所属的时区等计算出当前的时间。")]),s._v(" "),n("p",[s._v("比如 jdk 应用，时区为 "),n("code",[s._v("Etc/UTC")]),s._v("，本机时间改为北京时间，通过 java 代码中 new 出来的时间还是 utc 时间，所以必须得修正本机的时区。")]),s._v(" "),n("h3",{attrs:{id:"本地化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#本地化"}},[s._v("#")]),s._v(" 本地化")]),s._v(" "),n("ul",[n("li",[s._v("在计算机中，通常使用 "),n("code",[s._v("Locale")]),s._v(" 表示一个国家或地区的日期、时间、数字、货币等格式。"),n("code",[s._v("Locale")]),s._v(" 由 "),n("strong",[s._v("语言_国家")]),s._v(" 的字母缩写构成，例如，"),n("code",[s._v("zh_CN")]),s._v(" 表示中文 + 中国，"),n("code",[s._v("en_US")]),s._v(" 表示英文 + 美国。语言使用小写，国家使用大写。")]),s._v(" "),n("li",[n("code",[s._v("System.currentTimeMillis()")]),s._v("，当前时间毫秒数，从 1970 年开始。")])]),s._v(" "),n("h3",{attrs:{id:"api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[s._v("#")]),s._v(" API")]),s._v(" "),n("ul",[n("li",[s._v("一套定义在 "),n("code",[s._v("java.util")]),s._v(" 这个包里面，主要包括 "),n("code",[s._v("Date")]),s._v("、"),n("code",[s._v("Calendar")]),s._v(" 和 "),n("code",[s._v("TimeZone")]),s._v(" 这几个类；")]),s._v(" "),n("li",[s._v("一套新的 "),n("code",[s._v("API")]),s._v(" 是在 Java 8 引入的，定义在 "),n("code",[s._v("java.time")]),s._v(" 这个包里面，主要包括 "),n("code",[s._v("LocalDateTime")]),s._v("、"),n("code",[s._v("ZonedDateTime")]),s._v("、"),n("code",[s._v("ZoneId")]),s._v(" 等。")])]),s._v(" "),n("h3",{attrs:{id:"旧-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#旧-api"}},[s._v("#")]),s._v(" 旧 API")]),s._v(" "),n("h4",{attrs:{id:"一-date-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-date-类"}},[s._v("#")]),s._v(" （一）Date 类")]),s._v(" "),n("p",[n("code",[s._v("java.util.Date")]),s._v(" 是用于表示一个日期和时间的对象，注意与 "),n("code",[s._v("java.sql.Date")]),s._v(" 区分，后者用在数据库中。如果观察 "),n("code",[s._v("Date")]),s._v(" 的源码，可以发现它实际上存储了一个 "),n("code",[s._v("long")]),s._v(" 类型的以毫秒表示的时间戳：")]),s._v(" "),n("ul",[n("li",[s._v("不能转换时区，"),n("code",[s._v("Date")]),s._v(" 总是以当前计算机系统的默认时区为基础进行输出。")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Main")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取当前时间:")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Date")]),s._v(" date "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Date")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getYear")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1900")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 必须加上1900")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMonth")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0~11，必须加上1")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1~31，不能加1")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 转换为String:")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 转换为GMT时区:")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toGMTString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 转换为本地时区:")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toLocaleString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[n("strong",[s._v("注意：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("getYear()")]),s._v("，返回的年份必须加上 1900。")]),s._v(" "),n("li",[n("code",[s._v("getMonth()")]),s._v("，返回的月份是 0 ~ 11，分别表示 1 ~ 12 月，所以要加 1。")]),s._v(" "),n("li",[n("code",[s._v("getDate()")]),s._v("，返回的日期范围是 1 ~ 31，又不能加 1。")])]),s._v(" "),n("p",[n("code",[s._v("SimpleDateFormat")]),s._v(" 可以对 "),n("code",[s._v("Date")]),s._v(" 进行格式化转换。它用预定义的字符串表示格式化：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("yyyy")]),s._v("：年")]),s._v(" "),n("li",[n("code",[s._v("MM")]),s._v("：月")]),s._v(" "),n("li",[n("code",[s._v("dd")]),s._v(": 日")]),s._v(" "),n("li",[n("code",[s._v("HH")]),s._v(": 小时")]),s._v(" "),n("li",[n("code",[s._v("mm")]),s._v(": 分钟")]),s._v(" "),n("li",[n("code",[s._v("ss")]),s._v(": 秒")])]),s._v(" "),n("p",[s._v("示例：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Main")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取当前时间:")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Date")]),s._v(" date "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Date")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" sdf "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SimpleDateFormat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yyyy-MM-dd HH:mm:ss"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sdf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h4",{attrs:{id:"二-calendar-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-calendar-类"}},[s._v("#")]),s._v(" （二）Calendar 类")]),s._v(" "),n("p",[n("code",[s._v("Calendar")]),s._v(" 可以用于获取并设置年、月、日、时、分、秒，它和 "),n("code",[s._v("Date")]),s._v(" 比，主要"),n("strong",[s._v("多了一个可以做简单的日期和时间运算的功能")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Main")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取当前时间:")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),s._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("YEAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" m "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MONTH"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" d "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("DAY_OF_MONTH"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" w "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("DAY_OF_WEEK"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" hh "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("HOUR_OF_DAY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" mm "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MINUTE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ss "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECOND"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ms "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MILLISECOND"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("y "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" m "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" d "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" w "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" hh "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('":"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" mm "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('":"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" ss "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[n("strong",[s._v("注意：")])]),s._v(" "),n("ul",[n("li",[s._v("返回的月份是 0 ~ 11，要加 1。")]),s._v(" "),n("li",[s._v("返回的星期要特别注意，1 ~ 7 分别表示周日，周一，……，周六。")])]),s._v(" "),n("p",[n("code",[s._v("Calendar")]),s._v(" 只有一种方式获取，即 "),n("code",[s._v("Calendar.getInstance()")]),s._v("，而且一获取到就是当前时间。如果我们想给它设置成特定的一个日期和时间，就必须先清除所有字段：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Main")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前时间:")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),s._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 清除所有:")]),s._v("\n    c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置2019年:")]),s._v("\n    c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("YEAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置9月:注意8表示9月:")]),s._v("\n    c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MONTH"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置2日:")]),s._v("\n    c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("DATE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置时间:")]),s._v("\n    c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("HOUR_OF_DAY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MINUTE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECOND"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SimpleDateFormat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yyyy-MM-dd HH:mm:ss"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019-09-02 21:22:23")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[n("strong",[s._v("注意：")])]),s._v(" "),n("ul",[n("li",[s._v("利用 "),n("code",[s._v("Calendar.getTime()")]),s._v(" 可以将一个 "),n("code",[s._v("Calendar")]),s._v(" 对象转换成 "),n("code",[s._v("Date")]),s._v(" 对象，然后就可以用 "),n("code",[s._v("SimpleDateFormat")]),s._v(" 进行格式化了。")])]),s._v(" "),n("h4",{attrs:{id:"三-timezone-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三-timezone-类"}},[s._v("#")]),s._v(" （三）TimeZone 类")]),s._v(" "),n("p",[n("code",[s._v("Calendar")]),s._v(" 和 "),n("code",[s._v("Date")]),s._v(" 相比，它提供了时区转换的功能。时区用 "),n("code",[s._v("TimeZone")]),s._v(" 对象表示：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Main")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeZone")]),s._v(" tzDefault "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeZone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDefault")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前时区")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeZone")]),s._v(" tzGMT9 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeZone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getTimeZone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GMT+09:00"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// GMT+9:00时区")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeZone")]),s._v(" tzNY "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeZone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getTimeZone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"America/New_York"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 纽约时区")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("tzDefault"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getID")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Asia/Shanghai")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("tzGMT9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getID")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// GMT+09:00")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("tzNY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getID")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// America/New_York")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("ul",[n("li",[s._v("时区的唯一标识是以字符串表示的 ID，我们获取指定 "),n("code",[s._v("TimeZone")]),s._v(" 对象也是以这个 ID 为参数获取。")]),s._v(" "),n("li",[n("code",[s._v("GMT+09:00")]),s._v("、"),n("code",[s._v("Asia/Shanghai")]),s._v(" 都是有效的时区 ID。")]),s._v(" "),n("li",[s._v("要列出系统支持的所有 ID，请使用 "),n("code",[s._v("TimeZone.getAvailableIDs()")]),s._v("。")])]),s._v(" "),n("p",[s._v("有了时区，我们就可以对指定时间进行转换。例如，下面的例子演示了如何将北京时间 "),n("code",[s._v("2019-11-20 8:15:00")]),s._v(" 转换为纽约时间：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Main")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前时间:")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),s._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 清除所有:")]),s._v("\n    c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置为北京时区:")]),s._v("\n    c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeZone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeZone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getTimeZone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Asia/Shanghai"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置年月日时分秒:")]),s._v("\n    c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 11月 */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 加5天并减去2小时:")]),s._v("\n      c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("DAY_OF_MONTH"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Calendar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("HOUR_OF_DAY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 显示时间:")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" sdf "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SimpleDateFormat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yyyy-MM-dd HH:mm:ss"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    sdf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeZone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeZone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getTimeZone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"America/New_York"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sdf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019-07-24 18:15:00")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("可见，利用 "),n("code",[s._v("Calendar")]),s._v(" 进行时区转换的步骤是：")]),s._v(" "),n("ul",[n("li",[s._v("清除所有字段；")]),s._v(" "),n("li",[s._v("设定指定时区；")]),s._v(" "),n("li",[s._v("设定日期和时间；")]),s._v(" "),n("li",[s._v("创建 "),n("code",[s._v("SimpleDateFormat")]),s._v(" 并设定目标时区；")]),s._v(" "),n("li",[s._v("格式化获取的Date对象（注意Date对象无时区信息，时区信息存储在 "),n("code",[s._v("SimpleDateFormat")]),s._v(" 中）。")])]),s._v(" "),n("p",[s._v("因此，本质上时区转换只能通过 "),n("code",[s._v("SimpleDateFormat")]),s._v(" 在显示的时候完成。")]),s._v(" "),n("h3",{attrs:{id:"新-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新-api"}},[s._v("#")]),s._v(" 新 API")]),s._v(" "),n("p",[s._v("从 Java 8 开始，"),n("code",[s._v("java.time")]),s._v(" 包提供了新的日期和时间 API，主要涉及的类型有：")]),s._v(" "),n("ul",[n("li",[s._v("本地日期和时间："),n("code",[s._v("LocalDateTime")]),s._v("，"),n("code",[s._v("LocalDate")]),s._v("，"),n("code",[s._v("LocalTime")]),s._v("；")]),s._v(" "),n("li",[s._v("带时区的日期和时间："),n("code",[s._v("ZonedDateTime")]),s._v("；")]),s._v(" "),n("li",[s._v("时刻："),n("code",[s._v("Instant")]),s._v("；")]),s._v(" "),n("li",[s._v("时区："),n("code",[s._v("ZoneId")]),s._v("，"),n("code",[s._v("ZoneOffset")]),s._v("；")]),s._v(" "),n("li",[s._v("时间间隔："),n("code",[s._v("Duration")]),s._v("。")]),s._v(" "),n("li",[s._v("以及一套新的用于取代 "),n("code",[s._v("SimpleDateFormat")]),s._v(" 的格式化类型 "),n("code",[s._v("DateTimeFormatter")]),s._v("。")])]),s._v(" "),n("p",[s._v("和旧的 API 相比，新 API 严格区分了时刻、本地日期、本地时间和带时区的日期时间，并且，对日期和时间进行运算更加方便。")]),s._v(" "),n("p",[s._v("此外，新 API 修正了旧 API 不合理的常量设计：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("Month")]),s._v(" 的范围用 1 ~ 12 表示 1 月到 12 月；")]),s._v(" "),n("li",[n("code",[s._v("Week")]),s._v(" 的范围用 1 ~ 7 表示周一到周日。")])]),s._v(" "),n("p",[s._v("最后，新 API 的类型几乎全部是不变类型（和 "),n("code",[s._v("String")]),s._v(" 类似），可以放心使用不必担心被修改。")]),s._v(" "),n("p",[n("img",{attrs:{src:t(490),alt:"new date api"}})]),s._v(" "),n("h4",{attrs:{id:"一-localdatetime-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-localdatetime-类"}},[s._v("#")]),s._v(" （一）LocalDateTime 类")]),s._v(" "),n("ul",[n("li",[s._v("now 获取时间")]),s._v(" "),n("li",[s._v("toLocalDate 转换格式")]),s._v(" "),n("li",[s._v("of 指定时间")]),s._v(" "),n("li",[s._v("withXxx() 调整时间")]),s._v(" "),n("li",[s._v("使用 DateTimeFormatter 进行格式的转换\n"),n("ul",[n("li",[n("p",[s._v("示例")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自定义格式化:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DateTimeFormatter")]),s._v(" dtf "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DateTimeFormatter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ofPattern")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yyyy/MM/dd HH:mm:ss"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dtf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalDateTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用自定义格式解析:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalDateTime")]),s._v(" dt2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalDateTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2019/11/30 15:16:17"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" dtf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dt2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])])])])]),s._v(" "),n("h4",{attrs:{id:"二-zoneddatetime-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-zoneddatetime-类"}},[s._v("#")]),s._v(" （二）ZonedDateTime 类")]),s._v(" "),n("p",[s._v("可以简单地把 "),n("code",[s._v("ZonedDateTime")]),s._v(" 理解成 "),n("code",[s._v("LocalDateTime")]),s._v(" 加 "),n("code",[s._v("ZoneId")]),s._v("。"),n("code",[s._v("ZoneId")]),s._v(" 是 "),n("code",[s._v("java.time")]),s._v(" 引入的新的时区类，注意和旧的 "),n("code",[s._v("java.util.TimeZone")]),s._v(" 区别。")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("toInstant")]),s._v("、"),n("code",[s._v("toEpochSecond")]),s._v(" 这两个方法会转换成 0 时区的对应时间。")]),s._v(" "),n("li",[n("code",[s._v("toLocalDataTime")]),s._v(" 不会转时区，会直接丢弃时区信息。")])]),s._v(" "),n("h4",{attrs:{id:"三-datetimeformatter-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三-datetimeformatter-类"}},[s._v("#")]),s._v(" （三）DateTimeFormatter 类")]),s._v(" "),n("h4",{attrs:{id:"四-instant-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四-instant-类"}},[s._v("#")]),s._v(" （四）Instant 类")]),s._v(" "),n("p",[s._v("Instant 时间不能设置时区，但是他是有时区的（only 0 时区）。")]),s._v(" "),n("h2",{attrs:{id:"io"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#io"}},[s._v("#")]),s._v(" IO")]),s._v(" "),n("ul",[n("li",[s._v("flush()，强制刷新")]),s._v(" "),n("li",[s._v("Class 对象的 "),n("code",[s._v("getResourceAsStream()")]),s._v(" 可以从 "),n("code",[s._v("classpath")]),s._v(" 中读取指定资源；")])]),s._v(" "),n("h3",{attrs:{id:"流的重复读取"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#流的重复读取"}},[s._v("#")]),s._v(" 流的重复读取")]),s._v(" "),n("p",[s._v("// TODO")]),s._v(" "),n("h2",{attrs:{id:"序列化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#序列化"}},[s._v("#")]),s._v(" 序列化")]),s._v(" "),n("h3",{attrs:{id:"简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),n("p",[s._v("序列化是指把一个 "),n("code",[s._v("Java")]),s._v(" 对象变成二进制内容，本质上就是一个 "),n("code",[s._v("byte[]")]),s._v(" 数组。")]),s._v(" "),n("p",[s._v("为什么要把 Java 对象序列化呢？因为序列化后可以把 "),n("code",[s._v("byte[]")]),s._v(" 保存到文件中，或者把 "),n("code",[s._v("byte[]")]),s._v(" 通过网络传输到远程，这样，就相当于把 Java 对象存储到文件或者通过网络传输出去了。")]),s._v(" "),n("p",[s._v("有序列化，就有反序列化，即把一个二进制内容（也就是 "),n("code",[s._v("byte[]")]),s._v(" 数组）变回 Java 对象。有了反序列化，保存到文件中的 "),n("code",[s._v("byte[]")]),s._v(" 数组又可以“变回”Java 对象，或者从网络上读取 "),n("code",[s._v("byte[]")]),s._v(" 并把它“变回” Java 对象。")]),s._v(" "),n("h3",{attrs:{id:"为什么要序列化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么要序列化"}},[s._v("#")]),s._v(" 为什么要序列化")]),s._v(" "),n("p",[s._v("无论什么编程语言，其底层涉及 IO 操作的部分还是由操作系统其帮其完成的，而底层 IO 操作都是以字节流的方式进行的，\n所以写操作都涉及将编程语言数据类型转换为字节流，而读操作则又涉及将字节流转化为编程语言类型的特定数据类型。")]),s._v(" "),n("h3",{attrs:{id:"serialversionuid"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#serialversionuid"}},[s._v("#")]),s._v(" serialVersionUID")]),s._v(" "),n("p",[s._v("实现了 "),n("code",[s._v("Serializable")]),s._v(" 接口的类，都需要指定一个 serialVersionUID。")]),s._v(" "),n("p",[s._v("例子：比如一个 Student 类的实例被实例化为一个 student.txt 文件（这个文件内会有这个实例的序列化 ID），\n在反序列化的时候，会验证 txt 文件中的序列化 ID 是否和 Student 类中的 ID 一致，如果不一致，则序列化失败。")]),s._v(" "),n("p",[s._v("如果你不显示的声明一个 serialVersionUID，那么 Java 运行时环境会根据类的信息，自动生成个一个（如果后来你改变了类，比如改变了字段，这时候这个自动生成的 ID 就会跟着变化）。\n一个实现了 "),n("code",[s._v("Serializable")]),s._v(" 接口的类，都应该显示声明一个 serialVersionUID，这样的话，你的类的一个实例序列化成了一个文件以后，你改变了这个类的结构或信息（类改变以后，自动生成的 ID 会自动变化），这时反序列化的时候，就会反序列化失败，那么如果你显示的声明一个 ID，那么即使后来你改变了你的类结构，反序列化依旧可以成功，因为他们的 ID 没有变。")]),s._v(" "),n("h3",{attrs:{id:"特殊情况"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#特殊情况"}},[s._v("#")]),s._v(" 特殊情况")]),s._v(" "),n("ul",[n("li",[s._v("凡是被 "),n("code",[s._v("static")]),s._v(" 修饰的字段是不会被序列化的")]),s._v(" "),n("li",[s._v("凡是被 "),n("code",[s._v("transient")]),s._v(" 修饰符修饰的字段也是不会被序列化的")])]),s._v(" "),n("p",[s._v("对于第一点，因为序列化保存的是对象的状态而非类的状态，所以会忽略 "),n("code",[s._v("static")]),s._v(" 静态域也是理所应当的。")]),s._v(" "),n("p",[s._v("对于第二点，就需要了解一下 "),n("code",[s._v("transient")]),s._v(" 修饰符的作用了。")]),s._v(" "),n("p",[s._v("如果在序列化某个类的对象时，就是不希望某个字段被序列化（比如这个字段存放的是隐私值，如：密码等），那这时就可以用 transient 修饰符来修饰该字段。")]),s._v(" "),n("p",[s._v("比如 "),n("code",[s._v("private transient String password")]),s._v("，被 transient 修饰的变量不会被序列化，它的值会被序列化为 null，反序列化以后得到的也是 null。")]),s._v(" "),n("h3",{attrs:{id:"javatype"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javatype"}},[s._v("#")]),s._v(" JavaType")]),s._v(" "),n("p",[s._v("使用 Javatype 实现带有泛型的序列化。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JavaType")]),s._v(" javaType "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" objectMapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getTypeFactory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("constructParametricType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("responseType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" itemType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此处两个是 class")]),s._v("\nresponse "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" objectMapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("readValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("responseBodyString"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" javaType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"jsonproperty"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jsonproperty"}},[s._v("#")]),s._v(" JsonProperty")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@JsonProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Key"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"jsoninclude"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jsoninclude"}},[s._v("#")]),s._v(" JsonInclude")]),s._v(" "),n("p",[s._v("使用 "),n("code",[s._v("@JsonInclude")]),s._v(" 可以指定对象或者是指定变量的序列化方式。")]),s._v(" "),n("h2",{attrs:{id:"反射"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#反射"}},[s._v("#")]),s._v(" 反射")]),s._v(" "),n("p",[s._v("通过 "),n("code",[s._v("Class")]),s._v(" 实例获取 "),n("code",[s._v("class")]),s._v(" 信息的方法称为反射（"),n("code",[s._v("Reflection")]),s._v("）。")]),s._v(" "),n("h3",{attrs:{id:"class-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#class-类"}},[s._v("#")]),s._v(" Class 类")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("class 是由 JVM 在执行过程中动态加载的。JVM 在第一次读取到一种 class 类型时，将其加载进内存（method area）。")])]),s._v(" "),n("li",[n("p",[s._v("获取一个 class 的 Class 实例有三个方法：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("直接通过一个 class 的静态变量 class 获取：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("Class cls = String.class;")])])])]),s._v(" "),n("li",[n("p",[s._v("通过该实例变量提供的 "),n("code",[s._v("getClass()")]),s._v(" 方法获取：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),s._v(" cls "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("如果知道一个 class 的完整类名，可以通过静态方法 "),n("code",[s._v("Class.forName()")]),s._v(" 获取：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v('Class cls = Class.forName("java.lang.String");')])])])])])])]),s._v(" "),n("p",[s._v("PS：")]),s._v(" "),n("div",{staticClass:"language-txt line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-txt"}},[n("code",[s._v("Start:\n  -> .java 文件\n  -> .class 文件\n  -> （.class 文件）被 JVM 加载进内存（method area/static area）\n  -> JVM 第一次读取到一种 class 时，为它创建一个名为[文件名]的 Class 类型的 class，这个 class 包含了这个 class 文件的所有信息，\n        并且将这个 class 文件放进方法区，然后这个 xxxclass 作为这个类的各种数据的访问入口。\n  -> 在代码中通过获取一个类的 Class 实例 xxxclass，然后从这个 class 文件中读取这个类的信息的方式叫做反射\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[n("strong",[s._v("注意：")]),s._v(" 这里的 Class 本身也是一种 class 文件（Class.class 文件），只不过它的构造方法是 private，它只能由 JVM 创建。这个 Class 定义了一个类中应该有的所有信息变量，所以它可以将一个 class 文件的所有信息都加载进来，并在代码中使用。")]),s._v(" "),n("h3",{attrs:{id:"访问字段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#访问字段"}},[s._v("#")]),s._v(" 访问字段")]),s._v(" "),n("p",[s._v("通过 "),n("code",[s._v("Class")]),s._v(" 实例获取字段信息。")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("Field getField(name)")]),s._v("：根据字段名获取某个 "),n("code",[s._v("public")]),s._v(" 的 "),n("code",[s._v("field")]),s._v(" （包括父类）")]),s._v(" "),n("li",[n("code",[s._v("Field getDeclaredField(name)")]),s._v("：根据字段名获取当前类的某个 "),n("code",[s._v("field")]),s._v(" （不包括父类）")]),s._v(" "),n("li",[n("code",[s._v("Field[] getFields()")]),s._v("：获取所有 "),n("code",[s._v("public")]),s._v(" 的 "),n("code",[s._v("field")]),s._v(" （包括父类）")]),s._v(" "),n("li",[n("code",[s._v("Field[] getDeclaredFields()")]),s._v("：获取当前类的所有 "),n("code",[s._v("field")]),s._v(" （不包括父类）")])]),s._v(" "),n("h2",{attrs:{id:"多线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#多线程"}},[s._v("#")]),s._v(" 多线程")]),s._v(" "),n("h3",{attrs:{id:"多进程和多线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#多进程和多线程"}},[s._v("#")]),s._v(" 多进程和多线程")]),s._v(" "),n("p",[s._v("多进程缺点：")]),s._v(" "),n("ul",[n("li",[s._v("创建进程比创建线程开销大，尤其是在 Windows 系统上；")]),s._v(" "),n("li",[s._v("进程间通信比线程间通信要慢，因为线程间通信就是读写同一个变量，速度很快。")])]),s._v(" "),n("p",[s._v("多线程优点：")]),s._v(" "),n("ul",[n("li",[s._v("多进程稳定性比多线程高\n"),n("ul",[n("li",[s._v("多进程的情况下，一个进程崩溃不会影响其他进程。")]),s._v(" "),n("li",[s._v("多线程的情况下，任何一个线程崩溃会直接导致整个进程崩溃。")])])])]),s._v(" "),n("h3",{attrs:{id:"创建多线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建多线程"}},[s._v("#")]),s._v(" 创建多线程")]),s._v(" "),n("blockquote",[n("p",[s._v("Java 创建多线程主要有 2 类，第一类是没有返回值的，也是最常见的方式。还有一种是有返回值的创建方式。")])]),s._v(" "),n("p",[s._v("没有返回值的有 2 种方法：")]),s._v(" "),n("ol",[n("li",[s._v("继承 "),n("code",[s._v("Tread")]),s._v(" 类，然后覆写 "),n("code",[s._v("run")]),s._v(" 方法，最后使用 "),n("code",[s._v("start")]),s._v(" 方法执行。")]),s._v(" "),n("li",[s._v("实现 "),n("code",[s._v("Runable")]),s._v(" 接口，然后使用 "),n("code",[s._v("start")]),s._v(" 方法进行执行。")])]),s._v(" "),n("p",[s._v("建议使用第二种方法，因为类的继承为单继承，第 2 种可以避免不能继承其他的类。")]),s._v(" "),n("p",[s._v("示例：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第一种,继承 Tread 类")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Main")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 启动新线程")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start new thread!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第二种,实现 Runable 接口")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Main")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyRunnable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 启动新线程")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyRunnable")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start new thread!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("需要返回值的创建方式：通过创建 "),n("code",[s._v("Callable")]),s._v(" 接口和 "),n("code",[s._v("Future")]),s._v(" 接口的方式来创建线程。")]),s._v(" "),n("p",[s._v("从上面两个例子我们可以看到，"),n("code",[s._v("Runable")]),s._v(" 的方式执行的代码逻辑是没有返回值的，这样我们不能获取多线程方法的返回值。如果我们想要获取多线程执行结果就需要使用 "),n("code",[s._v("Callable")]),s._v(" 结合 "),n("code",[s._v("Future")]),s._v(" 的方式实现。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Callable 和 Runable 是没有区别的，只是一个有返回值，一个不支持返回值")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExecutionException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// myCallable 是要执行的任务")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyCallable")]),s._v(" myCallable "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyCallable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// futureTask 是用来管理多线程运行的结果的")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FutureTask")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" futureTask "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FutureTask")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myCallable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("futureTask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    t1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("futureTask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyCallable")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Callable")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("h3",{attrs:{id:"线程常用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程常用方法"}},[s._v("#")]),s._v(" 线程常用方法")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("setDeamon")])]),s._v(" "),n("li",[n("code",[s._v("yield")])]),s._v(" "),n("li",[n("code",[s._v("join")])])]),s._v(" "),n("h3",{attrs:{id:"线程优先级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程优先级"}},[s._v("#")]),s._v(" 线程优先级")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("Thread.setPriority(int n)")]),s._v("，1 ~ 10, 默认值 5，1 为最低。")]),s._v(" "),n("li",[s._v("优先级高的只意味着更频繁的 CPU 调度，而不是说优先级高的就要比优先级低的早执行。")])]),s._v(" "),n("h3",{attrs:{id:"线程状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程状态"}},[s._v("#")]),s._v(" 线程状态")]),s._v(" "),n("blockquote",[n("p",[s._v("下图中，运行状态不属于 Java 定义的线程状态中的一种。运行状态表示已经在 CPU 中运行，这时候的状态并不是 Java 本身关注的。")])]),s._v(" "),n("p",[n("img",{attrs:{src:t(372),alt:"线程状态"}})]),s._v(" "),n("p",[s._v("在 Java 程序中，一个线程对象只能调用一次 "),n("code",[s._v("start()")]),s._v(" 方法启动新线程，并在新线程中执行 "),n("code",[s._v("run()")]),s._v(" 方法。一旦 "),n("code",[s._v("run()")]),s._v(" 方法执行完毕，线程就结束了。因此，Java 线程的状态有以下几种：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("New")]),s._v("，新创建的线程，尚未执行；")]),s._v(" "),n("li",[n("code",[s._v("Runnable")]),s._v("，运行中的线程，正在抢占 CPU 中，然后去执行 "),n("code",[s._v("run()")]),s._v(" 方法的 Java 代码；")]),s._v(" "),n("li",[n("code",[s._v("Blocked")]),s._v("，运行中的线程，因为某些操作被阻塞而挂起；")]),s._v(" "),n("li",[n("code",[s._v("Waiting")]),s._v("，运行中的线程，因为某些操作在等待中；")]),s._v(" "),n("li",[n("code",[s._v("Timed Waiting")]),s._v("，运行中的线程，因为执行 "),n("code",[s._v("sleep()")]),s._v(" 方法正在计时等待；")]),s._v(" "),n("li",[n("code",[s._v("Terminated")]),s._v("，线程已终止，因为 "),n("code",[s._v("run()")]),s._v(" 方法执行完毕。")])]),s._v(" "),n("p",[s._v("线程终止的原因有：")]),s._v(" "),n("ul",[n("li",[s._v("线程正常终止："),n("code",[s._v("run()")]),s._v(" 方法执行到 "),n("code",[s._v("return")]),s._v(" 语句返回；")]),s._v(" "),n("li",[s._v("线程意外终止："),n("code",[s._v("run()")]),s._v(" 方法因为未捕获的异常导致线程终止；")]),s._v(" "),n("li",[s._v("对某个线程的 "),n("code",[s._v("Thread")]),s._v(" 实例调用 "),n("code",[s._v("stop()")]),s._v(" 方法强制终止（强烈不推荐使用）。")]),s._v(" "),n("li",[n("code",[s._v("join()")]),s._v(" 可以使得当前线程的方法优先执行。")])]),s._v(" "),n("h3",{attrs:{id:"中断线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中断线程"}},[s._v("#")]),s._v(" 中断线程")]),s._v(" "),n("ul",[n("li",[s._v("使用 "),n("code",[s._v("interrupt()")]),s._v(" 中断线程，使用 "),n("code",[s._v("isInterrupted()")]),s._v(" 检测是否中断;")])]),s._v(" "),n("p",[n("code",[s._v("volatile")]),s._v(" 关键字的目的是告诉虚拟机：")]),s._v(" "),n("ul",[n("li",[s._v("每次访问变量时，总是获取主内存的最新值；")]),s._v(" "),n("li",[s._v("每次修改变量后，立刻回写到主内存。")])]),s._v(" "),n("h3",{attrs:{id:"守护线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#守护线程"}},[s._v("#")]),s._v(" 守护线程")]),s._v(" "),n("blockquote",[n("p",[s._v("直白讲就是，在线程 A 里创建一个守护线程 B，如果线程 A 结束了，无论线程 B 当前状态如何，B 都会结束。因为 B 是 A 的守护线程，当失去了被守护者 A 的时候，线程 B 也就没有存在的必要了。")])]),s._v(" "),n("p",[n("code",[s._v("Daemon Thread")]),s._v("，守护线程是指为其他线程服务的线程。在 JVM 中，所有非守护线程都执行完毕后，无论有没有守护线程，虚拟机都会自动退出。因此，JVM 退出时，不必关心守护线程是否已结束。")]),s._v(" "),n("p",[s._v("创建方式: 在调用 "),n("code",[s._v("start()")]),s._v(" 方法前，调用 "),n("code",[s._v("setDaemon(true)")]),s._v(" 把该线程标记为守护线程。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setDaemon")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("注意：")]),s._v(" "),n("ul",[n("li",[s._v("在 Daemon 线程中产生的新线程也是 Daemon 的。")]),s._v(" "),n("li",[s._v("守护线程不能持有任何需要关闭的资源，例如打开文件等，因为虚拟机退出时，守护线程没有任何机会来关闭文件，这会导致数据丢失。")])]),s._v(" "),n("h3",{attrs:{id:"线程同步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程同步"}},[s._v("#")]),s._v(" 线程同步")]),s._v(" "),n("p",[s._v("加锁与解锁之间的代码块--临界区")]),s._v(" "),n("h4",{attrs:{id:"加锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#加锁"}},[s._v("#")]),s._v(" 加锁")]),s._v(" "),n("p",[n("code",[s._v("synchronized")]),s._v(" 锁是可重入锁；")]),s._v(" "),n("p",[s._v("我们来概括一下如何使用 "),n("code",[s._v("synchronized")]),s._v("：")]),s._v(" "),n("ul",[n("li",[s._v("找出修改共享变量的线程代码块；")]),s._v(" "),n("li",[s._v("选择一个共享实例作为锁；")]),s._v(" "),n("li",[s._v("使用 "),n("code",[s._v("synchronized(lockObject) { ... }")]),s._v("。")])]),s._v(" "),n("p",[s._v("不需要 "),n("code",[s._v("synchronized")]),s._v(" 的操作\nJVM 规范定义了几种原子操作：")]),s._v(" "),n("ul",[n("li",[s._v("基本类型（"),n("code",[s._v("long")]),s._v(" 和 "),n("code",[s._v("double")]),s._v(" 除外）赋值，例如："),n("code",[s._v("int n = m；")])]),s._v(" "),n("li",[s._v("引用类型赋值，例如："),n("code",[s._v("List<String> list = anotherList")]),s._v("。")])]),s._v(" "),n("h3",{attrs:{id:"死锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#死锁"}},[s._v("#")]),s._v(" 死锁")]),s._v(" "),n("p",[s._v("如何避免死锁呢？")]),s._v(" "),n("ul",[n("li",[s._v("线程获取锁的顺序要一致。")])]),s._v(" "),n("h3",{attrs:{id:"wait-和-notify"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#wait-和-notify"}},[s._v("#")]),s._v(" wait 和 notify")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("wait()")]),s._v(" 方法必须在当前获取的锁对象上调用，这里获取的是 "),n("code",[s._v("this")]),s._v(" 锁，因此调用 "),n("code",[s._v("this.wait()")]),s._v("。")]),s._v(" "),n("li",[n("code",[s._v("wait()")]),s._v(" 方法调用时，会释放线程获得的锁，"),n("code",[s._v("wait()")]),s._v(" 方法返回后，线程又会重新试图获得锁。")]),s._v(" "),n("li",[s._v("如何让等待的线程被重新唤醒，然后从 "),n("code",[s._v("wait()")]),s._v(" 方法返回？\n"),n("ul",[n("li",[s._v("答案是在相同的锁对象上调用 "),n("code",[s._v("notify()")]),s._v(" 方法。")])])])]),s._v(" "),n("h3",{attrs:{id:"线程池"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程池"}},[s._v("#")]),s._v(" 线程池")]),s._v(" "),n("p",[n("code",[s._v("ExecutorService")]),s._v(" 接口表示线程池")]),s._v(" "),n("p",[s._v("线程池的初始化")]),s._v(" "),n("p",[n("code",[s._v("ExecutorService")]),s._v(" 只是接口，Java 标准库提供的几个常用实现类有：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("FixedThreadPool")]),s._v("：线程数固定的线程池；")]),s._v(" "),n("li",[n("code",[s._v("CachedThreadPool")]),s._v("：线程数根据任务动态调整的线程池；")]),s._v(" "),n("li",[n("code",[s._v("SingleThreadExecutor")]),s._v("：仅单线程执行的线程池。")])]),s._v(" "),n("p",[s._v("创建这些线程池的方法都被封装到 "),n("code",[s._v("Executors")]),s._v(" 这个类中。")]),s._v(" "),n("p",[s._v("线程池的使用")]),s._v(" "),n("ul",[n("li",[s._v("使用 "),n("code",[s._v("submit()")]),s._v(" 方法提交任务，提交的任务是已经实现了 Runnable 接口的类。")])]),s._v(" "),n("p",[s._v("线程池的关闭")]),s._v(" "),n("ul",[n("li",[s._v("使用 "),n("code",[s._v("shutdown()")]),s._v("方法关闭线程池\n"),n("ul",[n("li",[s._v("它会等待正在执行的任务先完成，然后再关闭。")])])]),s._v(" "),n("li",[n("code",[s._v("shutdownNow()")]),s._v(" 会立刻停止正在执行的任务")]),s._v(" "),n("li",[n("code",[s._v("awaitTermination()")]),s._v(" 则会等待指定的时间让线程池关闭。")])]),s._v(" "),n("p",[s._v("示例：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExecutorService")]),s._v(" es "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Executors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("newFixedThreadPool")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    es"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("submit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"个任务"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Task")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"启动了"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"结束"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h3",{attrs:{id:"threadlocal"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal"}},[s._v("#")]),s._v(" ThreadLocal")]),s._v(" "),n("p",[s._v("ThreadLocal 类型变量实现变量为线程私有，原理是使用了 ThreadLocalMap。")]),s._v(" "),n("p",[s._v("使用时，将 ThreadLocal 对象作为 Map 的 key，将要存储的值作为 value 存起来，这样每个线程访问的都是当前线程的值了，也就不再存在线程安全问题。")]),s._v(" "),n("p",[n("img",{attrs:{src:t(373),alt:"ThreadLocal 原理"}})]),s._v(" "),n("h4",{attrs:{id:"java-四种引用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java-四种引用"}},[s._v("#")]),s._v(" Java 四种引用")]),s._v(" "),n("ul",[n("li",[s._v("强引用\n"),n("ul",[n("li",[s._v("只要有指针指向了这个对象，那么这个对象永远都不会被回收。例如 "),n("code",[s._v("User user = new User();")])])])]),s._v(" "),n("li",[s._v("软引用\n"),n("ul",[n("li",[s._v("还有用处，JVM 会在内存溢出时清理这部分。例如：缓存")])])]),s._v(" "),n("li",[s._v("弱引用\n"),n("ul",[n("li",[s._v("引用关系弱于软引用，不管内存是否够用，下次 GC 一定会回收")])])]),s._v(" "),n("li",[s._v("虚引用\n"),n("ul",[n("li",[s._v("不会影响对象的回收，唯一作用是对象被回收时会受到一个系统通知")])])])]),s._v(" "),n("h4",{attrs:{id:"内存泄漏问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏问题"}},[s._v("#")]),s._v(" 内存泄漏问题")]),s._v(" "),n("p",[s._v("首先说一个名词 OOM，即 Out Of Memory，内存泄露、内存溢出。")]),s._v(" "),n("p",[s._v("ThreadLocal 中的 key 是弱引用，value 是强引用。key 是每个 Thread 中的 TreadLocal 对象本身（如果没有强引用指向它，它就会被 GC 回收）：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Entry")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("WeakReference")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadLocal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** The value associated with this ThreadLocal. */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Entry")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadLocal")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 看这里的 super()，表示 key 是一个弱引用。")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        value "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("而 value 被 Entry 强引用不会被回收，具体应该是 "),n("code",[s._v("thread ref -> thread -> threadLocals -> entry -> value")]),s._v("，这时导致 value 成为了一个无法访问也不能被回收的对象，这就造成了内存泄露。")]),s._v(" "),n("p",[s._v("如果当前线程很快结束的话，最终 value 也会被回收，但是由于线程频繁的创建和销毁会占用大量资源，所以一般会使用线程池，那么线程就可能会很长时间不被销毁，那么 value 也就一直不会被回收。")]),s._v(" "),n("h5",{attrs:{id:"解决方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[s._v("#")]),s._v(" 解决方法")]),s._v(" "),n("ul",[n("li",[s._v("使用 static final，避免重复创建销毁 ThreadLocal 对象。")]),s._v(" "),n("li",[s._v("使用 remove() 方法，手动清除 ThreadLocal 对象。")])]),s._v(" "),n("p",[s._v("其实 ThreadLocal 对象的 "),n("code",[s._v("get() / set() / remove()")]),s._v(" 方法的具体实现中，都做了进一步的处理，进一步的避免了 OOM 的情况。")]),s._v(" "),n("h4",{attrs:{id:"示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),n("p",[n("img",{attrs:{src:t(374),alt:"示例"}})]),s._v(" "),n("p",[s._v("ThreadLocal 可以理解为是一个可以操作 Thread 上的那个 map 的工具类而已，因为每个线程拿到的 map 都是当前线程私有的。不要去想那个线程变量（"),n("code",[s._v("REQUEST_ID")]),s._v("）就一个，它的确就一个，它的作用是指定要拿哪个值，通过它操作的值（值所在的 map）存在于 Thread 上，这个线程变量只是个媒介而已。")]),s._v(" "),n("h2",{attrs:{id:"讨论区"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#讨论区"}},[s._v("#")]),s._v(" 讨论区")]),s._v(" "),n("blockquote",[n("p",[s._v("由于评论过多会影响页面最下方的导航，故将评论区做默认折叠处理。")])]),s._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[s._v("点击查看评论区内容，渴望您的宝贵建议~")]),s._v(" "),n("Vssue",{attrs:{title:s.$title,options:{locale:"zh"}}})],1)])}),[],!1,null,null,null);a.default=e.exports}}]);