(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{600:function(s,t,a){"use strict";a.r(t);var n=a(48),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[s._v("#")]),s._v(" JS")]),s._v(" "),a("h2",{attrs:{id:"参考文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[s._v("#")]),s._v(" 参考文档")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://wangdoc.com/es6/",target:"_blank",rel:"noopener noreferrer"}},[s._v("网道 ES6"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"nodejs-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-安装"}},[s._v("#")]),s._v(" Nodejs 安装")]),s._v(" "),a("p",[s._v("// todo")]),s._v(" "),a("h2",{attrs:{id:"基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[s._v("#")]),s._v(" 基本语法")]),s._v(" "),a("h3",{attrs:{id:"语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语句"}},[s._v("#")]),s._v(" 语句")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("JS  执行单位是行，它一行一行的读取并执行代码。一般情况下每一行是一个语句。语句以分号结尾，一行可以写多句，然后用分号隔开。分号前面可以没有东西，默认被读取成空语句。")])]),s._v(" "),a("li",[a("p",[s._v("JS 分成语句和表达式，如果后边以分号结尾的话，那么就被读取语句。")])])]),s._v(" "),a("h3",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[s._v("#")]),s._v(" 变量")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("JS 区分大小写。")])]),s._v(" "),a("li",[a("p",[s._v("如果只是声明变量而没有赋值，则该变量的值是 undefined。undefined 是一个特殊的值，表示“无定义”。")])]),s._v(" "),a("li",[a("p",[s._v("动态类型，变量的类型可以改变。")])]),s._v(" "),a("li",[a("p",[s._v("变量名可以是中文。")])]),s._v(" "),a("li",[a("p",[s._v("变量提升，JS 引擎解析的时候，会先把变量的声明先加载，然后再一行一行的执行程序。")])]),s._v(" "),a("li",[a("p",[s._v("else 代码块总是与离自己最近的那个if语句配对。")])]),s._v(" "),a("li",[a("p",[s._v("标签")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("label"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    语句\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),a("h3",{attrs:{id:"六种类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六种类型"}},[s._v("#")]),s._v(" 六种类型")]),s._v(" "),a("p",[s._v("查看一个对象本身的所有属性，可以使用 Object.keys 方法。")]),s._v(" "),a("p",[s._v("注意，删除一个不存在的属性，delete 不报错，而且返回 true。")]),s._v(" "),a("p",[s._v("delete 命令只能删除对象本身的属性，无法删除继承的属性")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("number")]),s._v(" 数值，整数和小数。\n"),a("ul",[a("li",[s._v("JavaScript 内部，所有数字都是以 64 位浮点数形式储存，即使整数也是如此。所以，1 与 1.0 是相同的，是同一个数。")]),s._v(" "),a("li",[s._v("NAN，不是数字，NAN 不等于任何值，包括本身。")]),s._v(" "),a("li",[s._v("Infinity 表示“无穷”，用来表示两种场景。一种是一个正的数值太大，或一个负的数值太小，无法表示；另一种是非 0 数值除以 0，得到 Infinity。")]),s._v(" "),a("li",[s._v("parseInt 方法用于将字符串转为整数。")])])]),s._v(" "),a("li",[a("code",[s._v("string")]),s._v(" 字符串，文本。\n"),a("ul",[a("li",[s._v("在非特殊字符前面使用反斜杠，则反斜杠会被省略。如果需要使用到反斜杠的话，通过 "),a("code",[s._v("\\\\")]),s._v(" 转义自身的方式输出。")])])]),s._v(" "),a("li",[a("code",[s._v("boolean")]),s._v(" 布尔值 ，true 和 false。\n"),a("ul",[a("li",[a("strong",[s._v("注意：")]),s._v(" 空对象的布尔值为 true。")])])]),s._v(" "),a("li",[a("code",[s._v("undefined")]),s._v("，表示未定义和不存在，即还未定义，此处还没有任何值。")]),s._v(" "),a("li",[a("code",[s._v("null")]),s._v("，表示空值。")]),s._v(" "),a("li",[a("code",[s._v("object")]),s._v(" 对象,各种值的集合。\n"),a("ul",[a("li",[s._v("狭义的对象 "),a("code",[s._v("object")])]),s._v(" "),a("li",[s._v("数组 "),a("code",[s._v("array")])]),s._v(" "),a("li",[s._v("函数 "),a("code",[s._v("function")])])])])]),s._v(" "),a("p",[s._v("数值、字符串、布尔值，三种叫做原始类型。")]),s._v(" "),a("h3",{attrs:{id:"type-of-运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-of-运算符"}},[s._v("#")]),s._v(" type of 运算符")]),s._v(" "),a("p",[s._v("JavaScript 有三种方法，可以确定一个值到底是什么类型。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("typeof")]),s._v(" 运算符\n"),a("ul",[a("li",[s._v("返回一个值的数据类型。")])])]),s._v(" "),a("li",[a("code",[s._v("instanceof")]),s._v(" 运算符")]),s._v(" "),a("li",[a("code",[s._v("Object.prototype.toString")]),s._v(" 方法")])]),s._v(" "),a("h3",{attrs:{id:"对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[s._v("#")]),s._v(" 对象")]),s._v(" "),a("blockquote",[a("p",[s._v("属性")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("读取")]),s._v(" "),a("ul",[a("li",[s._v("点取值")]),s._v(" "),a("li",[s._v("双引号取值")]),s._v(" "),a("li",[s._v("查看对象所有属性，"),a("code",[s._v("Object.keys")]),s._v("。")])]),s._v(" "),a("p",[s._v("如果一个对象 obj，它有一个属性 p = 'zhang'，那么取值方式有两种，"),a("code",[s._v("obj.p")]),s._v(" 或者是 "),a("code",[s._v("obj['p']")]),s._v(" ，后面用方括号取值的方式中，注意，方括号中的属性名要加引号，不然的话就会被识别为变量。方括号中可以使用表达式。")])]),s._v(" "),a("li",[a("p",[s._v("属性是否存在："),a("code",[s._v("in")]),s._v(" 运算符。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("for...in")]),s._v(" 循环用来遍历一个对象的全部属性。")]),s._v(" "),a("ul",[a("li",[s._v("注意，检查的是键名，不是键值")]),s._v(" "),a("li",[s._v("例如： "),a("code",[s._v("'p' in obj // true")]),s._v("，注意，这里继承的属性也会返回 true。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("delete")]),s._v(" 命令用于删除对象的属性，删除成功后返回true。")]),s._v(" "),a("ul",[a("li",[s._v("例如 "),a("code",[s._v("delete obj.p")]),s._v("。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("length")]),s._v(" 属性返回字符串的长度。")])]),s._v(" "),a("li",[a("p",[s._v("JavaScript 引擎无法确定是对象还是代码块，一律解释为代码块。可以在整个式子的外面加上一个 ()，这时它被解析成一个对象。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("with")]),s._v(" 语句")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  语句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("valueOf()")]),s._v(" 查看对象的原始类型的值。")])])]),s._v(" "),a("h2",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[s._v("#")]),s._v(" 函数")]),s._v(" "),a("h3",{attrs:{id:"函数的声明-3-种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的声明-3-种"}},[s._v("#")]),s._v(" 函数的声明 （3 种）")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("function")]),s._v(" 命令")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("函数表达式（匿名函数）")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("print")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这里可以不要函数名，如果给了函数名的话，那么函数名只在函数体内生效。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Function")]),s._v(" 构造函数")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" add "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'x'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'y'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'return x + y'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("传递任意数量的参数给Function构造函数，只有最后一个参数会被当做函数体，如果只有一个参数，该参数就是函数体。")])])]),s._v(" "),a("p",[s._v("如果一个函数被重复声明，那么这个后面的声明会覆盖前面的。"),a("strong",[s._v("函数和值的地位同等")]),s._v("。")]),s._v(" "),a("p",[s._v("因为函数和值的地位相等，所以函数和值一样，也有"),a("strong",[s._v("函数名的提升")]),s._v("，即运行之前先将函数进行声明。"),a("strong",[s._v("但是，如果采用赋值语句定义函数，JavaScript 就会报错。")])]),s._v(" "),a("h3",{attrs:{id:"函数属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数属性"}},[s._v("#")]),s._v(" 函数属性")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("name")]),s._v(" 属性返回函数的名字。")]),s._v(" "),a("li",[a("code",[s._v("length")]),s._v(" 属性返回函数预期传入的参数个数，即函数定义之中的参数个数。")]),s._v(" "),a("li",[a("code",[s._v("toString()")]),s._v(" 方法返回一个字符串，内容是函数的源码。")])]),s._v(" "),a("h3",{attrs:{id:"作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[s._v("#")]),s._v(" 作用域")]),s._v(" "),a("p",[s._v("作用域（scope）指的是变量存在/生效的范围。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("var")]),s._v(" 命令声明的变量，不管在什么位置，变量声明都会被"),a("strong",[s._v("提升")]),s._v("到函数体的头部。")])]),s._v(" "),a("h3",{attrs:{id:"参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[s._v("#")]),s._v(" 参数")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("省略参数")]),s._v(" "),a("ul",[a("li",[s._v("只可以省略后面的。")])])]),s._v(" "),a("li",[a("p",[s._v("传递方式")]),s._v(" "),a("ul",[a("li",[s._v("原始类型（数值、字符串、布尔值），传植传递。")]),s._v(" "),a("li",[s._v("复合类型（数组、对象、其他函数），地址传递。\n"),a("ul",[a("li",[a("p",[s._v("注意，如果函数内部修改的，不是参数对象的某个属性，而是替换掉整个参数，这时不会影响到原始值。")]),s._v(" "),a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("o")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\no "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nobj "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [1, 2, 3]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("上面代码中，在函数 f() 内部，参数对象 obj 被整个替换成另一个值。这时不会影响到原始值。这是因为，形式参数（o）的值实际是参数 obj 的地址，重新对 o 赋值导致 o 指向另一个地址，保存在原地址上的值当然不受影响。")])])])])])]),s._v(" "),a("li",[a("p",[s._v("同名参数")]),s._v(" "),a("ul",[a("li",[s._v("如果有同名的参数，则取最后出现的那个值。")]),s._v(" "),a("li",[s._v("如果要传入两个同名参数，只传入了第一个值，那么这个参数的取值就成了 undefined。")])])]),s._v(" "),a("li",[a("p",[s._v("取参数")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("arguments")]),s._v(" 对象包含了函数运行时的所有参数，"),a("code",[s._v("arguments[0]")]),s._v(" 就是第一个参数，"),a("code",[s._v("arguments[1]")]),s._v(" 就是第二个参数，以此类推。这个对象只有在函数体内部，才可以使用。")])])])]),s._v(" "),a("h3",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[s._v("#")]),s._v(" 闭包")]),s._v(" "),a("p",[s._v("闭包简单理解成“定义在一个函数内部的函数”。")]),s._v(" "),a("p",[s._v("闭包最大的特点，就是它可以“记住”诞生的环境，比如 f2 记住了它诞生的环境 f1，所以从 f2 可以得到 f1 的内部变量。在本质上，闭包就是将函数内部和函数外部连接起来的一座桥梁。")]),s._v(" "),a("p",[s._v("闭包的另一个用处，是封装对象的私有属性和私有方法。")]),s._v(" "),a("p",[a("strong",[s._v("注意")]),s._v("，外层函数每次运行，都会生成一个新的闭包，而这个闭包又会保留外层函数的内部变量，所以内存消耗很大。因此不能滥用闭包，否则会造成网页的性能问题。")]),s._v(" "),a("h3",{attrs:{id:"iife"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iife"}},[s._v("#")]),s._v(" IIFE")]),s._v(" "),a("p",[s._v("根据 JavaScript 的语法，圆括号 () 跟在函数名之后，表示调用该函数。比如，print() 就表示调用 print 函数。")]),s._v(" "),a("p",[s._v("有时，我们需要在定义函数之后，立即调用该函数。这时，你不能在函数的定义之后加上圆括号，这会产生语法错误。产生这个错误的原因是，"),a("code",[s._v("function")]),s._v(" 这个关键字既可以当作语句，也可以当作表达式。")]),s._v(" "),a("p",[s._v("解决办法是：把整个式子用圆括号包起来，这样的话，引擎就会将括号内的内容识别为表达式。")]),s._v(" "),a("h2",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[s._v("#")]),s._v(" 数组")]),s._v(" "),a("h3",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("index 从 0 开始。")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 一维数组")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 二维数组")]),s._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"数组的键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的键"}},[s._v("#")]),s._v(" 数组的键")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("JavaScript 语言规定，对象的键名一律为字符串，所以，数组的键名其实也是字符串。之所以可以用数值读取，是因为非字符串的键名会被转为字符串。")])]),s._v(" "),a("li",[a("p",[s._v("对象有两种读取成员的方法：点结构（object.key）和方括号结构（object[key]）。"),a("strong",[s._v("但是，对于数值的键名，不能使用点结构。")])])])]),s._v(" "),a("h3",{attrs:{id:"length-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#length-属性"}},[s._v("#")]),s._v(" length 属性")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("length")]),s._v(" 属性，返回数组的成员数量。")]),s._v(" "),a("li",[s._v("该属性是一个动态的值，等于键名中的最大整数加上 1。")]),s._v(" "),a("li",[s._v("数组的数字键不需要连续。它是一种动态的数据结构，可以随时增减成员。")]),s._v(" "),a("li",[a("code",[s._v("length")]),s._v(" 属性是可写的。\n"),a("ul",[a("li",[a("p",[s._v("这样的话，直接设置 length 为 0，就表示清空这个数组。")])]),s._v(" "),a("li",[a("p",[s._v("如果将值扩大，那么将会自动填充空值（undefined）。")])]),s._v(" "),a("li",[a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3")]),s._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\narr "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ["a", "b"]')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])])])]),s._v(" "),a("h3",{attrs:{id:"in-运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#in-运算符"}},[s._v("#")]),s._v(" in 运算符")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("键名是否存在的运算符 "),a("code",[s._v("in")]),s._v("，适用于对象，也适用于数组。")])]),s._v(" "),a("li",[a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" arr  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("注意")]),s._v("，如果数组的某个位置是空位，in 运算符返回 false。")])])]),s._v(" "),a("h3",{attrs:{id:"for-in-遍历"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-in-遍历"}},[s._v("#")]),s._v(" for...in 遍历")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("for...in")]),s._v(" 循环不仅可以遍历对象，也可以遍历数组，毕竟数组只是一种特殊对象。")]),s._v(" "),a("li",[s._v("在遍历时，也会遍历到非整数键。")]),s._v(" "),a("li",[s._v("可以考虑使用 "),a("code",[s._v("for")]),s._v(" 循环或 "),a("code",[s._v("while")]),s._v(" 循环。")]),s._v(" "),a("li",[s._v("forEach () 方法也可以。")])]),s._v(" "),a("h3",{attrs:{id:"空位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空位"}},[s._v("#")]),s._v(" 空位")]),s._v(" "),a("ul",[a("li",[s._v("空位不影响 length。")]),s._v(" "),a("li",[s._v("空位与 "),a("code",[s._v("undefined")]),s._v("，是不一样的。如果是空位，使用数组的 "),a("code",[s._v("forEach")]),s._v(" 方法、"),a("code",[s._v("for...in")]),s._v(" 结构、以及 "),a("code",[s._v("Object.keys")]),s._v(" 方法进行遍历，空位都会被跳过。")])]),s._v(" "),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" array "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [ <1 empty item>, 2, undefined, <1 empty item> ]")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [ <1 empty item>, 2, <2 empty items> ]")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[s._v("#")]),s._v(" 运算符")]),s._v(" "),a("h3",{attrs:{id:"算数运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符"}},[s._v("#")]),s._v(" 算数运算符")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("x + y")]),s._v(" 加法运算符")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("相加")])]),s._v(" "),a("li",[a("p",[s._v("连接")]),s._v(" "),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "345"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'5'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "75"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("x - y")]),s._v(" 减法运算符")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("x * y")]),s._v(" 乘法运算符")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("x / y")]),s._v(" 除法运算符")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("x ** y")]),s._v(" 指数运算符")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("右结合")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 相当于 2 ** (3 ** 2)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 512")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("x % y")]),s._v(" 余数运算符")]),s._v(" "),a("ul",[a("li",[s._v("正负号由前面的值的正负号决定。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("++x")]),s._v(" 或者 "),a("code",[s._v("x++")]),s._v(" 自增运算符")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("--x")]),s._v(" 或者 "),a("code",[s._v("x--")]),s._v(" 自减运算符")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("+x")]),s._v(" 数值运算符")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("-x")]),s._v(" 负数值运算符")])])]),s._v(" "),a("h3",{attrs:{id:"比较运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[s._v("#")]),s._v(" 比较运算符")]),s._v(" "),a("ol",[a("li",[s._v("先看两个运算子是否都是字符串，如果是的，就按照字典顺序比较（实际上是比较 Unicode 码点）；")]),s._v(" "),a("li",[s._v("否则，"),a("strong",[s._v("先将两个运算子都转成数值")]),s._v("，再比较数值的大小。")])]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v(">")]),s._v(" 大于运算符")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("<")]),s._v(" 小于运算符")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("<=")]),s._v(" 小于或等于运算符")])]),s._v(" "),a("li",[a("p",[a("code",[s._v(">=")]),s._v(" 大于或等于运算符")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("==")]),s._v(" 相等运算符")]),s._v(" "),a("ul",[a("li",[s._v("实例：")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 1 === Number(true)")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 0 === Number(false)")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 2 === Number(true)")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 2 === Number(false)")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'true'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 Number('true') === Number(true)")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 NaN === 1")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 Number('') === 0")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 0 === 0")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 Number('') === Number(false)")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 0 === 0")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 Number('1') === Number(true)")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 1 === 1")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n  123  \\t'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为字符串转为数字时，省略前置和后置的空格")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("===")]),s._v(" 严格相等运算符")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("注意")]),s._v("，对于两个对象的比较，严格相等运算符比较的是地址，而大于或小于运算符比较的是值。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("!=")]),s._v(" 不相等运算符")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("!==")]),s._v(" 严格不相等运算符")])])]),s._v(" "),a("h3",{attrs:{id:"布尔运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布尔运算符"}},[s._v("#")]),s._v(" 布尔运算符")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("!")]),s._v(" 取反运算符\n"),a("ul",[a("li",[s._v("两次取反，将一个值转化成对应的布尔值。")])])]),s._v(" "),a("li",[a("code",[s._v("&&")]),s._v(" 且运算符")]),s._v(" "),a("li",[a("code",[s._v("||")]),s._v(" 或运算符")]),s._v(" "),a("li",[a("code",[s._v("? :")]),s._v(" 三元运算符")])]),s._v(" "),a("h3",{attrs:{id:"二进制-位运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二进制-位运算符"}},[s._v("#")]),s._v(" 二进制/位运算符")]),s._v(" "),a("p",[s._v("位运算符只对整数起作用，如果一个运算子不是整数，会自动转为整数后再执行。另外，虽然在 JavaScript 内部，数值都是以64位浮点数的形式储存，但是做位运算的时候，是以32位带符号的整数进行运算的，并且返回值也是一个32位带符号的整数。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("|")]),s._v(" 或（or）")]),s._v(" "),a("li",[a("code",[s._v("&")]),s._v(" 与（and）")]),s._v(" "),a("li",[a("code",[s._v("~")]),s._v(" 否/取反（not）\n"),a("ul",[a("li",[s._v("连续两次取反，得到取整后的数值。")])])]),s._v(" "),a("li",[a("code",[s._v("^")]),s._v(" 异或（xor）")]),s._v(" "),a("li",[a("code",[s._v("<<")]),s._v(" 左移（left shift）")]),s._v(" "),a("li",[a("code",[s._v(">>")]),s._v(" 右移（right shift）")]),s._v(" "),a("li",[a("code",[s._v(">>>")]),s._v(" 头部补零的右移（zero filled right shift）")])]),s._v(" "),a("h3",{attrs:{id:"其他运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他运算符"}},[s._v("#")]),s._v(" 其他运算符")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("void")])]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("内容"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"运算顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算顺序"}},[s._v("#")]),s._v(" 运算顺序")]),s._v(" "),a("p",[s._v("使用 () 提高运算优先级。")]),s._v(" "),a("h2",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[s._v("#")]),s._v(" 语法")]),s._v(" "),a("h3",{attrs:{id:"数据类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型转换"}},[s._v("#")]),s._v(" 数据类型转换")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("Number()")]),s._v("，将任意类型的值转化成数值。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("注意：null 转为数值时为 0，而 undefined 转为数值时为 NaN。")])]),s._v(" "),a("li",[a("p",[s._v("参数是对象时，将返回 NaN，除非是包含单个数值的数组。")])]),s._v(" "),a("li",[a("p",[s._v("整体转换，"),a("code",[s._v("parseInt()")]),s._v(" 逐个转换。")])]),s._v(" "),a("li",[a("p",[s._v("自动过滤一个字符串前导和后缀的空格。")])]),s._v(" "),a("li",[a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'12qw'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NaN")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'12qw'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 12")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("String()")]),s._v("，将任意类型的值转化成字符串。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Boolean()")]),s._v("，将任意类型的值转为布尔值。")])])]),s._v(" "),a("h3",{attrs:{id:"错误处理机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误处理机制"}},[s._v("#")]),s._v(" 错误处理机制")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("Error()")]),s._v(" 构造函数")]),s._v(" "),a("ul",[a("li",[s._v("message：错误提示信息")]),s._v(" "),a("li",[s._v("name：错误名称（非标准属性）")]),s._v(" "),a("li",[s._v("stack：错误的堆栈（非标准属性）")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Error()")]),s._v(" 的派生对象")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("SyntaxError")]),s._v(" 对象是解析代码时发生的语法错误。")]),s._v(" "),a("li",[a("code",[s._v("ReferenceError")]),s._v(" 对象是引用一个不存在的变量时发生的错误。")]),s._v(" "),a("li",[a("code",[s._v("RangeError")]),s._v(" 对象是一个值超出有效范围时发生的错误。")]),s._v(" "),a("li",[a("code",[s._v("TypeError")]),s._v(" 对象是变量或参数不是预期类型时发生的错误。")]),s._v(" "),a("li",[a("code",[s._v("URIError")]),s._v(" 对象是 URI 相关函数的参数不正确时抛出的错误，主要涉及 encodeURI()、decodeURI()、encodeURIComponent()、decodeURIComponent()、escape() 和 unescape() 这六个函数。")])])]),s._v(" "),a("li",[a("p",[s._v("自定义错误")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("UserError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'默认信息'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'UserError'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UserError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UserError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" UserError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("throw 语句")])]),s._v(" "),a("li",[a("p",[s._v("try...catch 结构")]),s._v(" "),a("ul",[a("li",[s._v("catch 代码块捕获错误之后，程序"),a("strong",[s._v("不会中断")]),s._v("，会按照正常流程继续执行下去。但是在 try 代码块中，throw 的后面不执行，catch 后边的代码会继续执行。")])])]),s._v(" "),a("li",[a("p",[s._v("finally 语句")]),s._v(" "),a("ul",[a("li",[s._v("try...catch 结构允许在最后添加一个 finally 代码块，表示不管是否出现错误，都必需在最后运行的语句。")]),s._v(" "),a("li",[s._v("如果出现错误，那么将执行完 finally 中的代码，才会继续报错。")])])])]),s._v(" "),a("h3",{attrs:{id:"console-对象与控制台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#console-对象与控制台"}},[s._v("#")]),s._v(" console 对象与控制台")]),s._v(" "),a("h4",{attrs:{id:"静态方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[s._v("#")]),s._v(" 静态方法")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("console.log()，console.info()，console.debug()")])]),s._v(" "),a("ul",[a("li",[s._v("console.debug方法与console.log方法类似，会在控制台输出调试信息。但是，默认情况下，console.debug输出的信息不会显示，只有在打开显示级别在verbose的情况下，才会显示。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("console.warn()，console.error()")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("console.table()")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("对于某些复合类型的数据，console.table方法可以将其转为表格显示。")]),s._v(" "),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" languages "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"JavaScript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fileExtension"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('".js"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TypeScript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fileExtension"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('".ts"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CoffeeScript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fileExtension"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('".coffee"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("table")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("languages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("console.count()")])]),s._v(" "),a("ul",[a("li",[s._v("方法用于计数，输出它被调用了多少次。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("console.dir()，console.dirxml()")])]),s._v(" "),a("ul",[a("li",[s._v("dir 对一个对象进行检查（inspect），并以易于阅读和打印的格式显示。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("console.assert()")])]),s._v(" "),a("ul",[a("li",[s._v("主要用于程序运行过程中，进行条件判断，如果不满足条件，就显示一个错误，但不会中断程序执行。这样就相当于提示用户，内部状态不正确。它接受两个参数，第一个参数是表达式，第二个参数是字符串。只有当第一个参数为 false，才会提示有错误，在控制台输出第二个参数，否则不会有任何结果。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("console.time()，console.timeEnd()")])]),s._v(" "),a("ul",[a("li",[s._v("成对使用")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("console.group()，console.groupEnd()，console.groupCollapsed()")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("console.trace()，console.clear()")])]),s._v(" "),a("ul",[a("li",[s._v("trace 显示当前执行的代码在堆栈中的调用路径。")]),s._v(" "),a("li",[s._v("clear 清除当前控制台的所有输出，将光标回置到第一行。如果用户选中了控制台的“Preserve log”选项，"),a("code",[s._v("console.clear")]),s._v(" 方法将不起作用。")])])])]),s._v(" "),a("h4",{attrs:{id:"控制台命令-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制台命令-api"}},[s._v("#")]),s._v(" 控制台命令 API")]),s._v(" "),a("h4",{attrs:{id:"debugger-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debugger-语句"}},[s._v("#")]),s._v(" debugger 语句")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("debugger")]),s._v(" 语句主要用于除错，作用是设置断点。如果有正在运行的除错工具，程序运行到 "),a("code",[s._v("debugger")]),s._v(" 语句时会自动停下。如果没有除错工具，"),a("code",[s._v("debugger")]),s._v(" 语句不会产生任何结果，JavaScript 引擎自动跳过这一句。")]),s._v(" "),a("p",[s._v("Chrome 浏览器中，当代码运行到 "),a("code",[s._v("debugger")]),s._v(" 语句时，就会暂停运行，自动打开脚本源码界面。")])])]),s._v(" "),a("h2",{attrs:{id:"标准库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准库"}},[s._v("#")]),s._v(" 标准库")]),s._v(" "),a("h3",{attrs:{id:"array-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array-对象"}},[s._v("#")]),s._v(" Array 对象")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("Array.isArray")]),s._v(" 方法返回一个布尔值，表示参数是否为数组。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("push()")]),s._v("，新增，在尾部。并返回新增的值。参数为要添加的值。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("pop()")]),s._v("，移除，在尾部。无参数。返回删除的值。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("shift()")]),s._v("，删除第一个元素，并返回。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("unshift()")]),s._v("，在第一位添加元素，并返回新数组的长度。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("join()")]),s._v("，以指定参数作为分隔符，将所有数组成员连接为一个字符串返回。如果不提供参数，默认用逗号分隔。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("concat()")]),s._v("，连接，将新数组放在后面。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("reverse()")]),s._v("，倒序排列。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("slice()")]),s._v("，提取一部分，参数为（start，end）。参数为负数，则表示倒数。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("splice()")]),s._v("，删除并插入新数据，参数为（start，删除的个数，要插入的数据）。返回删除的数据。")]),s._v(" "),a("p",[s._v("只是单纯地插入元素，splice 方法的第二个参数可以设为 0，如果只提供第一个参数，等同于将原数组在指定位置拆分成两个数组。并返回从指定位置一直截取到最后的数组。原数组只剩下截取后剩下的。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("sort()")]),s._v("，不是按照大小，而是按照字典排序。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("接受函数进行排序，sort 的参数函数本身接受两个参数，表示进行比较的两个数组成员。如果该函数的返回值大于 0，表示第一个成员排在第二个成员后面；其他情况下，都是第一个元素排在第二个元素前面")])]),s._v(" "),a("li",[a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"张三"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"李四"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"王五"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("o1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" o2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" o1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" o2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   { name: "李四", age: 24 },')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   { name: "王五", age: 28  },')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   { name: "张三", age: 30 }')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("map()")])]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("将数组的所有成员依次传入参数函数，然后把每一次的执行结果组成一个新数组返回。")])])]),s._v(" "),a("li",[a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" numbers "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nnumbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [2, 3, 4]")]),s._v("\n\nnumbers\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [1, 2, 3]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("接受一个函数作为参数。该函数调用时，"),a("code",[s._v("map()")]),s._v(" 方法向它传入三个参数：当前成员、当前位置和数组本身。即 "),a("code",[s._v("elem, index, arr")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("接受第二个参数，用来绑定回调函数内部的 "),a("code",[s._v("this")]),s._v(" 变量。")]),s._v(" "),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ['b', 'c']")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("forEach()")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("不会跳过 undefined 和 null，但会跳过空位。")])]),s._v(" "),a("li",[a("p",[s._v("参数是一个函数、")]),s._v(" "),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" array "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("78")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("69")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("58")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'='")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("filter()")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("过滤数组成员，满足条件的成员组成一个新数组返回。")])]),s._v(" "),a("li",[a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" array "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("some()，every()")])]),s._v(" "),a("ul",[a("li",[s._v("some 方法是只要一个成员的返回值是 true，则整个 some 方法的返回值就是 true，否则返回 false。")]),s._v(" "),a("li",[s._v("every 方法是所有成员的返回值都是 true，整个 every 方法才返回 true，否则返回 false。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("reduce()，reduceRight()")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("indexOf()，lastIndexOf()")])]),s._v(" "),a("ul",[a("li",[s._v("元素在数组中第一次出现的位置，如果没有出现则返回 -1。")]),s._v(" "),a("li",[s._v("last 用于检测数组中有两个相同的值，最后一次出现的位置。")])])])]),s._v(" "),a("h3",{attrs:{id:"string-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-对象"}},[s._v("#")]),s._v(" String 对象")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("concat()")]),s._v("，连接，将新字符串添加在后面。如果参数不是字符串，则会先转成字符串再连接。")]),s._v(" "),a("li",[a("code",[s._v("slice()")]),s._v("，提取一部分，参数为（start，end）。start > end 的时候，会返回空串。")]),s._v(" "),a("li",[a("code",[s._v("subString()")]),s._v("，参数为（start，end），返回结果不包含 end 位置，即到 end 的前一个位置的字符。")]),s._v(" "),a("li",[a("code",[s._v("indexOf()")]),s._v("，用于确定一个字符串在另一个字符串中第一次出现的位置，返回结果是匹配开始的位置。如果返回 -1，就表示不匹配。可以接受第二个参数，表示从该位置开始向后匹配。")]),s._v(" "),a("li",[a("code",[s._v("trim()")]),s._v("，用于去除字符串两端的空格，返回一个新字符串，不改变原字符串。")]),s._v(" "),a("li",[a("code",[s._v("toLowerCase() toUpperCase()")]),s._v("，转化大小写。")])]),s._v(" "),a("h3",{attrs:{id:"math-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#math-对象"}},[s._v("#")]),s._v(" Math 对象")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Math.abs()")]),s._v(" 绝对值")]),s._v(" "),a("li",[a("code",[s._v("ceil()")]),s._v(" 向上取整")]),s._v(" "),a("li",[a("code",[s._v("floor()")]),s._v(" 向下取整")]),s._v(" "),a("li",[a("code",[s._v("max()")]),s._v(" 最大值")]),s._v(" "),a("li",[a("code",[s._v("min()")]),s._v(" 最小值")]),s._v(" "),a("li",[a("code",[s._v("pow()")]),s._v(" 幂运算")]),s._v(" "),a("li",[a("code",[s._v("sqrt()")]),s._v(" 平方根")]),s._v(" "),a("li",[a("code",[s._v("log()")]),s._v(" 自然对数")]),s._v(" "),a("li",[a("code",[s._v("exp()")]),s._v(" e 的指数")]),s._v(" "),a("li",[a("code",[s._v("round()")]),s._v(" 四舍五入")]),s._v(" "),a("li",[a("code",[s._v("random()")]),s._v(" 随机数")])]),s._v(" "),a("h3",{attrs:{id:"json-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-对象"}},[s._v("#")]),s._v(" Json 对象")]),s._v(" "),a("blockquote",[a("p",[s._v("值的要求")])]),s._v(" "),a("ul",[a("li",[s._v("复合类型的值只能是数组或对象，不能是函数、正则表达式对象、日期对象。")]),s._v(" "),a("li",[s._v("原始类型的值只有四种：字符串、数值（必须以十进制表示）、布尔值和 null（不能使用 NaN, Infinity, -Infinity 和 undefined）。")]),s._v(" "),a("li",[s._v("字符串"),a("strong",[s._v("必须使用双引号")]),s._v("表示，不能使用单引号。")]),s._v(" "),a("li",[s._v("对象的键名必须放在双引号里面。")]),s._v(" "),a("li",[s._v("数组或对象最后一个成员的后面，不能加逗号")])]),s._v(" "),a("blockquote",[a("p",[s._v("静态方法")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("JSON.stringify()")]),s._v("，将一个值转为 JSON 字符串。")]),s._v(" "),a("li",[a("code",[s._v("JSON.parse()")]),s._v("，还原符合 JSON 格式的字符串。")])]),s._v(" "),a("h2",{attrs:{id:"面向对象编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象编程"}},[s._v("#")]),s._v(" 面向对象编程")]),s._v(" "),a("h2",{attrs:{id:"异步操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步操作"}},[s._v("#")]),s._v(" 异步操作")]),s._v(" "),a("h3",{attrs:{id:"单线程模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单线程模型"}},[s._v("#")]),s._v(" 单线程模型")]),s._v(" "),a("ul",[a("li",[s._v("事件循环机制，Event Loop。")])]),s._v(" "),a("h3",{attrs:{id:"同步和异步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步和异步"}},[s._v("#")]),s._v(" 同步和异步")]),s._v(" "),a("p",[s._v("程序里面所有的任务，可以分成两类：同步任务（synchronous）和异步任务（asynchronous）。")]),s._v(" "),a("h3",{attrs:{id:"异步操作-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步操作-2"}},[s._v("#")]),s._v(" 异步操作")]),s._v(" "),a("blockquote",[a("p",[s._v("模式")])]),s._v(" "),a("ul",[a("li",[s._v("回调函数")]),s._v(" "),a("li",[s._v("事件监听")]),s._v(" "),a("li",[s._v("发布/订阅")])]),s._v(" "),a("blockquote",[a("p",[s._v("流程控制")])]),s._v(" "),a("ul",[a("li",[s._v("串行执行")]),s._v(" "),a("li",[s._v("并行执行")]),s._v(" "),a("li",[s._v("并行与串行结合")])]),s._v(" "),a("h3",{attrs:{id:"定时器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定时器"}},[s._v("#")]),s._v(" 定时器")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("setTimeout()")]),s._v(" 用来指定某个函数或某段代码，在多少毫秒之后执行。它返回一个整数，表示定时器的编号，以后可以用来取消这个定时器。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22222")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先输出1和3，然后等待1000毫秒再输出2。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("实例 2：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("111111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2222")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3333")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2222")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3333")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 111111")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("注意：")]),s._v(" 必须要等到当前脚本的同步任务，全部处理完以后，才会执行setTimeout指定的回调函数f。也就是说，setTimeout(f, 0)会在下一轮事件循环一开始就执行。")])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("setInterval()")]),s._v("，定时执行无限次。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("setTimeout")]),s._v(" 和 "),a("code",[s._v("setInterval()")]),s._v("，都返回一个整数值，表示计数器编号。将该整数传入clearTimeout和clearInterval函数，就可以取消对应的定时器。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("debounce")]),s._v(" （防抖动）")])])]),s._v(" "),a("h2",{attrs:{id:"dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[s._v("#")]),s._v(" DOM")]),s._v(" "),a("h2",{attrs:{id:"事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[s._v("#")]),s._v(" 事件")]),s._v(" "),a("h2",{attrs:{id:"浏览器模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器模型"}},[s._v("#")]),s._v(" 浏览器模型")]),s._v(" "),a("h2",{attrs:{id:"讨论区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讨论区"}},[s._v("#")]),s._v(" 讨论区")]),s._v(" "),a("blockquote",[a("p",[s._v("由于评论过多会影响页面最下方的导航，故将评论区做默认折叠处理。")])]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("点击查看评论区内容，渴望您的宝贵建议~")]),s._v(" "),a("Vssue",{attrs:{title:s.$title,options:{locale:"zh"}}})],1)])}),[],!1,null,null,null);t.default=e.exports}}]);