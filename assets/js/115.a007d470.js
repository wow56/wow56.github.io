(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{604:function(_,v,e){"use strict";e.r(v);var t=e(48),a=Object(t.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"regex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#regex"}},[_._v("#")]),_._v(" Regex")]),_._v(" "),e("h2",{attrs:{id:"参考文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[_._v("#")]),_._v(" 参考文档")]),_._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://deerchao.cn/tutorials/regex/regex.htm#mission",target:"_blank",rel:"noopener noreferrer"}},[_._v("正则表达式入门"),e("OutboundLink")],1)])]),_._v(" "),e("h2",{attrs:{id:"regex-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#regex-简介"}},[_._v("#")]),_._v(" Regex 简介")]),_._v(" "),e("p",[_._v("Regex，即 Regular expression。")]),_._v(" "),e("h2",{attrs:{id:"元字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[_._v("#")]),_._v(" 元字符")]),_._v(" "),e("ul",[e("li",[e("code",[_._v(".")]),_._v(" 除换行符外的任意字符")]),_._v(" "),e("li",[e("code",[_._v("\\w")]),_._v(" 字母、数字、下划线、汉字")]),_._v(" "),e("li",[e("code",[_._v("\\s")]),_._v(" 任意空白符（包括空格、制表符、换行符、中文全角空格等）")]),_._v(" "),e("li",[e("code",[_._v("\\d")]),_._v(" 数字")]),_._v(" "),e("li",[e("code",[_._v("\\b")]),_._v(" 单词的开始或结束")]),_._v(" "),e("li",[e("code",[_._v("^")]),_._v(" 字符串的开始")]),_._v(" "),e("li",[e("code",[_._v("$")]),_._v(" 字符串的结束")])]),_._v(" "),e("p",[_._v("示例：")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("^\\d{1,3}$")]),_._v(" 标识使整个字符串匹配 "),e("code",[_._v("\\d{1,3}")]),_._v("。")])]),_._v(" "),e("h2",{attrs:{id:"重复-限定符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重复-限定符"}},[_._v("#")]),_._v(" 重复/限定符")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("*")]),_._v(" 0 或 多次")]),_._v(" "),e("li",[e("code",[_._v("+")]),_._v(" 1 或 多次")]),_._v(" "),e("li",[e("code",[_._v("?")]),_._v(" 0 或 1 次")]),_._v(" "),e("li",[e("code",[_._v("{n}")]),_._v(" 重复 n 次")]),_._v(" "),e("li",[e("code",[_._v("{n,}")]),_._v(" 重复 n 或 多次")]),_._v(" "),e("li",[e("code",[_._v("{n,m}")]),_._v(" 重复 n 到 m 次")])]),_._v(" "),e("p",[e("code",[_._v("{...}")]),_._v(" 其实就是指定具体的重复字数，开闭区间。")]),_._v(" "),e("p",[_._v("示例：")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("\\b\\w{6}\\b")]),_._v(" 6 位单词")])]),_._v(" "),e("h2",{attrs:{id:"转义字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#转义字符"}},[_._v("#")]),_._v(" 转义字符")]),_._v(" "),e("p",[e("code",[_._v("\\")]),_._v(" 是转义字符。")]),_._v(" "),e("h2",{attrs:{id:"字符类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符类"}},[_._v("#")]),_._v(" 字符类")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("[任意字符集合]")]),_._v(" 匹配括号中任意一个")]),_._v(" "),e("li",[e("code",[_._v("[^...]")]),_._v(" 取集合的反值")]),_._v(" "),e("li",[e("code",[_._v("[?!.]")]),_._v(" 匹配 ？ ！ .")])]),_._v(" "),e("p",[_._v("在 "),e("code",[_._v("[]")]),_._v(" 中的一些值跟外面的含义是不一样的： 比如 "),e("code",[_._v("^")]),_._v(" 在外面表示开头，"),e("code",[_._v("? ! .")]),_._v(" 在外面可能是表示重复，或者需要转义。")]),_._v(" "),e("h2",{attrs:{id:"分支条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支条件"}},[_._v("#")]),_._v(" 分支条件")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("|")]),_._v("，从左往右测试，短路满足，如果第一个条件满足，就不会再测试第二个了")])]),_._v(" "),e("h2",{attrs:{id:"分组-子表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分组-子表达式"}},[_._v("#")]),_._v(" 分组/子表达式")]),_._v(" "),e("ul",[e("li",[_._v("使用 "),e("code",[_._v("()")]),_._v(" 将表达式包起来，就可以看做为一个 "),e("strong",[_._v("子表达式")]),_._v("，然后就可以指定这个整体的重复次数了")])]),_._v(" "),e("p",[_._v("示例：")]),_._v(" "),e("ul",[e("li",[_._v("匹配 IP: "),e("code",[_._v("((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)")]),_._v(" "),e("ul",[e("li",[_._v("即理解 "),e("code",[_._v("( 2[0-4]\\d | 25[0-5] | [01]?\\d\\d? )")])])])])]),_._v(" "),e("h2",{attrs:{id:"反义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反义"}},[_._v("#")]),_._v(" 反义")]),_._v(" "),e("blockquote",[e("p",[_._v("大写取反")])]),_._v(" "),e("ul",[e("li",[e("code",[_._v("\\W")]),_._v(" 非 字母、数字、下划线、汉字")]),_._v(" "),e("li",[e("code",[_._v("\\S")]),_._v(" 非 任意空白符（包括空格、制表符、换行符、中文全角空格等）")]),_._v(" "),e("li",[e("code",[_._v("\\D")]),_._v(" 非 数字")]),_._v(" "),e("li",[e("code",[_._v("\\B")]),_._v(" 非 单词的开始或结束")]),_._v(" "),e("li",[e("code",[_._v("[^abc]")]),_._v(" 除 abc 以外的")])]),_._v(" "),e("h2",{attrs:{id:"后向引用-捕获"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#后向引用-捕获"}},[_._v("#")]),_._v(" 后向引用/捕获")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("(exp)")]),_._v("，捕获文本到自动命名的组")]),_._v(" "),e("li",[e("code",[_._v("(?<key>exp)")]),_._v(" 或者 "),e("code",[_._v("(?'key'exp)")]),_._v("，捕获文本到名称为 name 的组里")]),_._v(" "),e("li",[e("code",[_._v("(?:exp)")]),_._v("，不捕获匹配的文本，也不给此分组分配组号")])]),_._v(" "),e("h2",{attrs:{id:"零宽断言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#零宽断言"}},[_._v("#")]),_._v(" 零宽断言")]),_._v(" "),e("p",[_._v("使用断言用来查找某些内容（但是又不包括某些内容）之前或者之后的东西，")]),_._v(" "),e("p",[_._v("也就说把它们整体当做 "),e("code",[_._v("\\b")]),_._v("、"),e("code",[_._v("^")]),_._v("、"),e("code",[_._v("$")]),_._v(" 一样的作用，去指定 "),e("strong",[_._v("一个位置")]),_._v("。")]),_._v(" "),e("p",[e("strong",[_._v("注意：")]),_._v(" 这里只匹配一个位置。")]),_._v(" "),e("h3",{attrs:{id:"正向"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正向"}},[_._v("#")]),_._v(" 正向")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("(?=exp)")]),_._v("，"),e("em",[_._v("它断言 自身出现的位置 后面能匹配表达式")]),_._v("，即"),e("code",[_._v("(? = exp)")]),_._v(","),e("code",[_._v("?")]),_._v(" 指的是那个位置，然后 "),e("code",[_._v("?")]),_._v(" 后面是 exp。\n"),e("ul",[e("li",[_._v("也称为 "),e("strong",[_._v("零宽度正预测先行断言")])])])]),_._v(" "),e("li",[e("code",[_._v("(?<=exp)")]),_._v("，"),e("em",[_._v("它断言 自身出现的位置 前面能匹配表达式")]),_._v(" "),e("ul",[e("li",[_._v("也称为 "),e("strong",[_._v("零宽度正回顾后发断言")])])])])]),_._v(" "),e("h3",{attrs:{id:"负向零宽断言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#负向零宽断言"}},[_._v("#")]),_._v(" 负向零宽断言")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("(?!exp)")]),_._v("，"),e("em",[_._v("它断言 这个位置 后面不能匹配表达式")]),_._v(" "),e("ul",[e("li",[_._v("也称为 "),e("strong",[_._v("零宽度负预测先行断言")])])])]),_._v(" "),e("li",[e("code",[_._v("(?<!exp)")]),_._v("，"),e("em",[_._v("它断言 这个位置 前面不能匹配表达式")]),_._v(" "),e("ul",[e("li",[_._v("也称为 "),e("strong",[_._v("零宽度负回顾后发断言")])])])])]),_._v(" "),e("h2",{attrs:{id:"贪婪-非贪婪"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#贪婪-非贪婪"}},[_._v("#")]),_._v(" 贪婪/非贪婪")]),_._v(" "),e("p",[_._v("在数量限定符后面加上 "),e("code",[_._v("?")]),_._v("，可以在匹配成功的前提下使用最少的重复。")]),_._v(" "),e("blockquote",[e("p",[_._v("最少的重复？那为什么不直接使用 "),e("code",[_._v("?")]),_._v(" 就可以了？")])]),_._v(" "),e("p",[_._v("示例：")]),_._v(" "),e("p",[_._v("例如 "),e("code",[_._v("aababab")]),_._v("：")]),_._v(" "),e("ul",[e("li",[_._v("贪婪（默认） "),e("code",[_._v("a.*b")]),_._v(" 会匹配整个字符串")]),_._v(" "),e("li",[_._v("非贪婪 "),e("code",[_._v("a.*?b")]),_._v(" 这里 "),e("code",[_._v("*")]),_._v(" 表示重复 0 次或多次，然后在它后面添加 "),e("code",[_._v("?")]),_._v("，是重复任意次数的前提下，尽可能少的重复。\n"),e("ul",[e("li",[_._v("这里匹配结果是 aab 和 ab 和 ab，")])])])]),_._v(" "),e("h2",{attrs:{id:"注释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[_._v("#")]),_._v(" 注释")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("(?#comment)")])])]),_._v(" "),e("h2",{attrs:{id:"讨论区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#讨论区"}},[_._v("#")]),_._v(" 讨论区")]),_._v(" "),e("blockquote",[e("p",[_._v("由于评论过多会影响页面最下方的导航，故将评论区做默认折叠处理。")])]),_._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[_._v("点击查看评论区内容，渴望您的宝贵建议~")]),_._v(" "),e("Vssue",{attrs:{title:_.$title,options:{locale:"zh"}}})],1)])}),[],!1,null,null,null);v.default=a.exports}}]);