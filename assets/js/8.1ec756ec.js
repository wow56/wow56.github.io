(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{440:function(v,_,t){v.exports=t.p+"assets/img/lsof.e51b142b.png"},441:function(v,_,t){v.exports=t.p+"assets/img/lsof-deleted.d37d1d0c.png"},442:function(v,_,t){v.exports=t.p+"assets/img/lsof-deleted2.7c63567c.png"},443:function(v,_,t){v.exports=t.p+"assets/img/netstat-result.c5fa6e73.png"},541:function(v,_,t){"use strict";t.r(_);var e=t(48),s=Object(e.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"linux-命令行常用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-命令行常用"}},[v._v("#")]),v._v(" Linux 命令行常用")]),v._v(" "),e("h2",{attrs:{id:"参考文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[v._v("#")]),v._v(" 参考文档")]),v._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://billie66.github.io/TLCL/book/index.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("Linux 命令行 Book"),e("OutboundLink")],1)])]),v._v(" "),e("h2",{attrs:{id:"三剑客"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三剑客"}},[v._v("#")]),v._v(" 三剑客")]),v._v(" "),e("p",[e("code",[v._v("grep")]),v._v(" 擅长查找文本，"),e("code",[v._v("sed")]),v._v(" 擅长编辑取到的文本，例如取行和替换，"),e("code",[v._v("awk")]),v._v(" 擅长格式化文本，对文本进行复杂格式运算处理，例如取列。")]),v._v(" "),e("h3",{attrs:{id:"grep"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grep"}},[v._v("#")]),v._v(" grep")]),v._v(" "),e("p",[e("code",[v._v("grep")]),v._v(" 全称是 Global Regular Expression Print，表示全局正则表达式版本。")]),v._v(" "),e("h3",{attrs:{id:"sed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sed"}},[v._v("#")]),v._v(" sed")]),v._v(" "),e("p",[e("code",[v._v("sed")]),v._v(" 命令，即 Stream Editor，是一个文本流编辑器，一次处理一行内容。")]),v._v(" "),e("p",[v._v("sed会依次遍历输入文本流中的每一行，针对每一行，会将当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。然后再处理下一行，这样不断重复，直到文件末尾。原始文本流的内容不会改变。")]),v._v(" "),e("h3",{attrs:{id:"awk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#awk"}},[v._v("#")]),v._v(" awk")]),v._v(" "),e("h2",{attrs:{id:"split"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[v._v("#")]),v._v(" split")]),v._v(" "),e("blockquote",[e("p",[v._v("在 Linux 中，有时某个文件过大，想要操作的时候可能内存不足或者其他问题，这时可以通过文件分割，将文件分割成多个小文件分别处理，处理完再整合成一个总的文件。")])]),v._v(" "),e("p",[e("code",[v._v("split")]),v._v(" 是一个用于分割大文件的命令工具，支持按照"),e("strong",[v._v("行数")]),v._v("和"),e("strong",[v._v("字节数")]),v._v("分割文件，文件分割后为 "),e("code",[v._v("文件前缀+序号（默认字母）")]),v._v("，不指定前缀则只有序号。")]),v._v(" "),e("p",[e("code",[v._v("split [-args] [filename] [分割后文件名前缀]")])]),v._v(" "),e("p",[v._v("参数：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("-a")]),v._v(": 输出文件名的后缀长度(默认为2个:aa,ab...);")]),v._v(" "),e("li",[e("code",[v._v("-d")]),v._v(": 指定输出文件名的后缀用数字代替(从0开始)，默认是aa、ab;")]),v._v(" "),e("li",[e("code",[v._v("-l")]),v._v(": 行数分割模式，lines，(指定每多少行切成一个小文件，默认行数是1000行);")]),v._v(" "),e("li",[e("code",[v._v("-b")]),v._v(": 字节数分割，Bytes，支持单位:K、M、G，例如 "),e("code",[v._v("-b 1M")]),v._v(";")]),v._v(" "),e("li",[e("code",[v._v("-C")]),v._v(": 文件大小分割模式(切割时尽量维持每行的完整性)，指定每行最大字节数；")])]),v._v(" "),e("p",[e("strong",[v._v("注意：")]),v._v(" "),e("em",[v._v("分割后的文件数量不能大于序号能表示的最大值，否则会报错。")])]),v._v(" "),e("ol",[e("li",[e("p",[v._v("按照行数分割")])]),v._v(" "),e("li",[e("p",[v._v("按照字节数分割")])])]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("文件合并")]),v._v(" "),e("p",[v._v("分割后的文件可以使用 "),e("code",[v._v("cat")]),v._v(" 进行合并，例如 a.01、a.02 可以使用 "),e("code",[v._v("cat a.* > a.final")]),v._v("。")])]),v._v(" "),e("h2",{attrs:{id:"lsof"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lsof"}},[v._v("#")]),v._v(" lsof")]),v._v(" "),e("blockquote",[e("p",[v._v("先了解 "),e("RouterLink",{attrs:{to:"/computer-literacy/linux/using_linux.html#proc"}},[e("code",[v._v("/proc")])]),v._v(" 与 "),e("RouterLink",{attrs:{to:"/computer-literacy/linux/using_linux.html#fd文件描述符"}},[e("code",[v._v("/proc/fd")])]),v._v(" 文件描述符概念")],1)]),v._v(" "),e("p",[e("code",[v._v("lsof")]),v._v("，即 list open files，是一个列出当前系统打开文件的工具，用于"),e("strong",[v._v("查看指定进程打开的文件")]),v._v("，是十分方便的系统监视工具。")]),v._v(" "),e("p",[e("img",{attrs:{src:t(440),alt:"lsof"}})]),v._v(" "),e("p",[v._v("各列含义：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("COMMAND")]),v._v("：正在运行该文件的进程名称；")]),v._v(" "),e("li",[e("code",[v._v("PID")]),v._v("：进程 ID；")]),v._v(" "),e("li",[e("code",[v._v("TID")]),v._v(": 线程 ID；")]),v._v(" "),e("li",[e("code",[v._v("USER")]),v._v("：打开文件的进程所有者；")]),v._v(" "),e("li",[e("code",[v._v("FD")]),v._v("：文件描述符，表示文件在进程中的位置；")]),v._v(" "),e("li",[e("code",[v._v("TYPE")]),v._v("：文件类型，如REG（常规文件）、DIR（目录）、CHR（字符设备）、FIFO（管道）、SOCK（套接字）等；")]),v._v(" "),e("li",[e("code",[v._v("DEVICE")]),v._v(": 打开文件所在的设备的编号；")]),v._v(" "),e("li",[e("code",[v._v("SIZE/OFF")]),v._v("：文件大小或文件偏移量；")]),v._v(" "),e("li",[e("code",[v._v("NODE")]),v._v("：打开文件的节点号码，索引节点号，用于唯一标识文件；")]),v._v(" "),e("li",[e("code",[v._v("NAME")]),v._v("：打开的文件名。")])]),v._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[v._v("FD")]),v._v(" "),e("ul",[e("li",[v._v("cwd：表示current work dirctory，即：应用程序的当前工作目录，这是该应用程序启动的目录，除非它本身对这个目录进行更改")]),v._v(" "),e("li",[v._v("txt：该类型的文件是程序代码，如应用程序二进制文件本身或共享库，如上列表中显示的 /sbin/init 程序")]),v._v(" "),e("li",[v._v("lnn：库引用 (AIX);")]),v._v(" "),e("li",[v._v("er：FD信息错误 (see NAME column);")]),v._v(" "),e("li",[v._v("jld：jail directory (FreeBSD);")]),v._v(" "),e("li",[v._v("ltx：shared library text (code and data);")]),v._v(" "),e("li",[v._v("mxx ：hex memory-mapped type number xx.")]),v._v(" "),e("li",[v._v("m86：DOS Merge mapped file;")]),v._v(" "),e("li",[v._v("mem：内存映射文件;")]),v._v(" "),e("li",[v._v("mmap：内存映射设备;")]),v._v(" "),e("li",[v._v("pd：parent directory;")]),v._v(" "),e("li",[v._v("rtd：root directory;")]),v._v(" "),e("li",[v._v("tr：kernel trace file (OpenBSD);")]),v._v(" "),e("li",[v._v("v86 VP/ix mapped file;")]),v._v(" "),e("li",[v._v("0：表示标准输出")]),v._v(" "),e("li",[v._v("1：表示标准输入")]),v._v(" "),e("li",[v._v("2：表示标准错误")])])]),v._v(" "),e("blockquote",[e("p",[v._v("常用参数")])]),v._v(" "),e("ul",[e("li",[e("code",[v._v("lsof")]),v._v(": 列出当前系统所有打开的文件。")]),v._v(" "),e("li",[e("code",[v._v("lsof filename")]),v._v("：显示所有打开指定文件的进程。")]),v._v(" "),e("li",[e("code",[v._v("lsof -p PID")]),v._v("：按照 PID 检索。")]),v._v(" "),e("li",[e("code",[v._v("lsof +d /DIR/")]),v._v("：显示指定目录下被进程打开的文件。")]),v._v(" "),e("li",[e("code",[v._v("lsof +D /DIR/")]),v._v("：同样显示目录下被打开的文件，但会遍历目录下的所有子目录，耗时较长。")]),v._v(" "),e("li",[e("code",[v._v("lsof -c string")]),v._v("：显示 COMMAND 列包含特定字符的进程打开的文件。")]),v._v(" "),e("li",[e("code",[v._v("lsof -u username")]),v._v("：显示特定用户所属进程的文件。")]),v._v(" "),e("li",[e("code",[v._v("lsof -d FD")]),v._v("：显示指定文件描述符的进程。")]),v._v(" "),e("li",[e("code",[v._v("lsof -n")]),v._v("：不将IP转换为hostname，默认情况下不使用此参数。")]),v._v(" "),e("li",[e("code",[v._v("lsof -i")]),v._v("：列出所有网络连接，通过以下参数※：\n"),e("ul",[e("li",[e("code",[v._v("[46]")]),v._v("：IPv4或IPv6，"),e("code",[v._v("lsof -i 4")])]),v._v(" "),e("li",[e("code",[v._v("[protocol]")]),v._v("：TCP或UDP")]),v._v(" "),e("li",[e("code",[v._v("lsof -i :22")]),v._v("，可以查看 22 端口被哪些进程占用。")])])]),v._v(" "),e("li",[e("code",[v._v("lsof [path 可省] | grep deleted")]),v._v(" "),e("strong",[v._v("查找已经被删除，但是未释放进程锁的文件")])])]),v._v(" "),e("p",[e("img",{attrs:{src:t(441),alt:"lsof deleted"}})]),v._v(" "),e("p",[v._v("在 Linux 中，如果一个文件被某个进程占用，就算 "),e("code",[v._v("rm")]),v._v(" 该文件，"),e("code",[v._v("df")]),v._v(" 之后会发现磁盘空间未被释放，因为该文件只有在被引用都解除后才会真正被删除。")]),v._v(" "),e("p",[v._v("可以看到上面的文件已经被删除了，但是还被某个进程占用，这时候想要真正释放改文件，需要找到真正引用的进程和位置。")]),v._v(" "),e("p",[e("img",{attrs:{src:t(442),alt:"lsof deleted"}})]),v._v(" "),e("p",[v._v("找到被引用的进程下的对应句柄 fd "),e("code",[v._v("ll /proc/2195527/fd")]),v._v("，找到被删除文件的引用（fd 为 16、17），因为这个fd实际上就是个软链，它直接指向该文件，所以可以直接通过 "),e("code",[v._v("echo '' > /proc/2195527/16")]),v._v(" 的方式释放该磁盘占用。剩下的空文件不用管，该进程停止后会自动被清理，这里操作目的是先释放磁盘空间。")]),v._v(" "),e("blockquote",[e("p",[v._v("引申一下，在正式环境中，可能某个要清理的大文件被某个进程占用，但是这个进程还不能动，这时候尽量采用 "),e("code",[v._v("echo '' > xxxx")]),v._v(" 的方式重写内容，不要直接 "),e("code",[v._v("rm")]),v._v("，减少风险。")]),v._v(" "),e("p",[v._v("二次补充，大文件可以使用 "),e("code",[v._v("truncate -s 0 [filename]")]),v._v(" 的方式清空文件，效率更高。")]),v._v(" "),e("p",[v._v("建议日志文件配置 logrotate 进行自动清理。")])]),v._v(" "),e("h2",{attrs:{id:"expect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expect"}},[v._v("#")]),v._v(" expect")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("apt install expect")]),v._v(" 或 "),e("code",[v._v("yum -y install expect")])])]),v._v(" "),e("p",[e("code",[v._v("expect")]),v._v(" 主要用于自动化交互操作场景。"),e("code",[v._v("expect")]),v._v(" 是基于 "),e("code",[v._v("TCL")]),v._v(" 的，使用前需要确保已经安装了 "),e("code",[v._v("TCL")]),v._v("。")]),v._v(" "),e("p",[v._v("使用流程（"),e("code",[v._v("spawn 启动指定进程 -> expect 获取指定关键字 -> send 想指定进程发送指定指令 -> 执行完成, 退出")]),v._v("）")]),v._v(" "),e("ol",[e("li",[e("code",[v._v("spawn")]),v._v(" 追踪指令，表示开启一个新的进程追踪。")]),v._v(" "),e("li",[e("code",[v._v("expect")]),v._v(" 捕捉，判断上次输出是否包含指定字符串，如果有则立即返回，否则就等待超时时间后返回，只能捕捉 "),e("code",[v._v("spawn")]),v._v(" 追踪的进程输出。")]),v._v(" "),e("li",[e("code",[v._v("send")]),v._v(" 发送，接收一个字符串参数，并将该参数发送到进程（类似模拟人工输入密码），该命令不能自动回车确认输入，一般在输入后添加 "),e("code",[v._v("\\r \\n")]),v._v(" 来实现。")]),v._v(" "),e("li",[e("code",[v._v("expect eof")]),v._v(" 交互结束，与 "),e("code",[v._v("spawn")]),v._v(" 对应。")]),v._v(" "),e("li",[e("code",[v._v("interact")]),v._v(" 保留在交互状态。")])]),v._v(" "),e("h3",{attrs:{id:"示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[v._v("#")]),v._v(" 示例")]),v._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("# 这里可以把 expect 当成 if 去理解")]),v._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("# 方式一")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("# send 跟 expect 放在同一行，需要将 send 用 {} 引起来")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[v._v("expect")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[v._v('"密码"')]),v._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("send "),e("span",{pre:!0,attrs:{class:"token string"}},[v._v('"123123'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[v._v("\\r")]),v._v('"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("   \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("# 方式二")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("# send 跟 expect 分两行写")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[v._v("expect")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[v._v('"密码"')]),v._v("\nsend "),e("span",{pre:!0,attrs:{class:"token string"}},[v._v('"123123'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[v._v("\\r")]),v._v('"')]),v._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("# 方式三")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("# 只要匹配了其中一个情况，执行相应的 send 语句后退出该 expect 语句")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[v._v("expect")]),v._v("  \n"),e("span",{pre:!0,attrs:{class:"token string"}},[v._v('"密码1"')]),v._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("send "),e("span",{pre:!0,attrs:{class:"token string"}},[v._v('"111111'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[v._v("\\r")]),v._v('"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[v._v('"密码2"')]),v._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("send "),e("span",{pre:!0,attrs:{class:"token string"}},[v._v('"222222'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[v._v("\\r")]),v._v('"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[v._v('"密码3"')]),v._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("send "),e("span",{pre:!0,attrs:{class:"token string"}},[v._v('"333333'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[v._v("\\r")]),v._v('"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br"),e("span",{staticClass:"line-number"},[v._v("3")]),e("br"),e("span",{staticClass:"line-number"},[v._v("4")]),e("br"),e("span",{staticClass:"line-number"},[v._v("5")]),e("br"),e("span",{staticClass:"line-number"},[v._v("6")]),e("br"),e("span",{staticClass:"line-number"},[v._v("7")]),e("br"),e("span",{staticClass:"line-number"},[v._v("8")]),e("br"),e("span",{staticClass:"line-number"},[v._v("9")]),e("br"),e("span",{staticClass:"line-number"},[v._v("10")]),e("br"),e("span",{staticClass:"line-number"},[v._v("11")]),e("br"),e("span",{staticClass:"line-number"},[v._v("12")]),e("br"),e("span",{staticClass:"line-number"},[v._v("13")]),e("br"),e("span",{staticClass:"line-number"},[v._v("14")]),e("br"),e("span",{staticClass:"line-number"},[v._v("15")]),e("br"),e("span",{staticClass:"line-number"},[v._v("16")]),e("br"),e("span",{staticClass:"line-number"},[v._v("17")]),e("br")])]),e("h2",{attrs:{id:"find"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[v._v("#")]),v._v(" find")]),v._v(" "),e("p",[e("code",[v._v("find / -name mysql")]),v._v(" 从 "),e("code",[v._v("/")]),v._v(" 目录下，搜索名字为 mysql 的名字或者目录。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("-name")]),v._v(" 文件名")]),v._v(" "),e("li",[e("code",[v._v("-iname")]),v._v(" 忽略文件名大小写")])]),v._v(" "),e("h2",{attrs:{id:"netstat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netstat"}},[v._v("#")]),v._v(" netstat")]),v._v(" "),e("blockquote",[e("p",[v._v("例如： Local Address 中的 "),e("code",[v._v("0.0.0.0:22")]),v._v(" 和 Foreign Address 的 "),e("code",[v._v("0.0.0.0:22")]),v._v(" 区别在于，本地地址是对本机的 IP 限制，外部地址是对外部地址的限制。")]),v._v(" "),e("p",[e("code",[v._v("0.0.0.0")]),v._v(" 叫"),e("strong",[v._v("任意地址")])]),v._v(" "),e("p",[v._v("[Local Address] 如果一个主机存在多块物理网卡，"),e("code",[v._v("0.0.0.0:22")]),v._v(" 表示只要本地开放了 22 端口，无论从本机哪个网卡发起连接请求都是允许的。 若想限制某服务只允许外部从本机指定网卡入口发起访问，则配置成具体网卡的 IP 地址，如 "),e("code",[v._v("192.168.0.3:22")]),v._v(" 的网卡入口发起。")]),v._v(" "),e("p",[v._v("[Foreign Address] 这里的 "),e("code",[v._v("0.0.0.0")]),v._v(" 表示允许互联网所有 IP 访问。")])]),v._v(" "),e("p",[v._v("结果中状态：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("LISTENING")]),v._v("，端口以开放，监听中待连接。")]),v._v(" "),e("li",[e("code",[v._v("ESTABLISHED")]),v._v("，已经建立的连接，这里本地地址和外部地址都不会再出现 "),e("code",[v._v("0.0.0.0")]),v._v("，因为连接方已确认。")]),v._v(" "),e("li",[e("code",[v._v("TIME_WAIT")]),v._v("，等待超时。")]),v._v(" "),e("li",[v._v("...")])]),v._v(" "),e("p",[e("img",{attrs:{src:t(443),alt:"结果解析"}})]),v._v(" "),e("p",[v._v("常用参数：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("-a")]),v._v(" (all)显示所有选项，默认不显示 LISTEN 相关")]),v._v(" "),e("li",[e("code",[v._v("-n")]),v._v(" 拒绝显示别名，能显示数字的全部转化成数字。")]),v._v(" "),e("li",[e("code",[v._v("-o")]),v._v(" 显示与每个连接相关的所属进程ID")]),v._v(" "),e("li",[e("code",[v._v("-p")]),v._v(" 显示建立相关链接的程序名 & PID")]),v._v(" "),e("li",[e("code",[v._v("-t")]),v._v(" (tcp)仅显示 tcp 相关选项")]),v._v(" "),e("li",[e("code",[v._v("-u")]),v._v(" (udp)仅显示 udp 相关选项")]),v._v(" "),e("li",[e("code",[v._v("-l")]),v._v(" 仅列出有在 Listen (监听) 的服務状态")]),v._v(" "),e("li",[e("code",[v._v("-r")]),v._v(" 显示路由信息，路由表")]),v._v(" "),e("li",[e("code",[v._v("-e")]),v._v(" 显示扩展信息，例如 uid 等")]),v._v(" "),e("li",[e("code",[v._v("-s")]),v._v(" 按各个协议进行统计")]),v._v(" "),e("li",[e("code",[v._v("-c")]),v._v(" 每隔一个固定时间，执行该 netstat 命令。")])]),v._v(" "),e("p",[v._v("提示：LISTEN 和 LISTENING 的状态只有用 "),e("code",[v._v("-a")]),v._v(" 或者 "),e("code",[v._v("-l")]),v._v(" 才能看到。")]),v._v(" "),e("p",[v._v("常用命令："),e("code",[v._v("sudo netstat -anp | grep 8001")])]),v._v(" "),e("h2",{attrs:{id:"ps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ps"}},[v._v("#")]),v._v(" ps")]),v._v(" "),e("p",[v._v("即 process status，查看系统当前的进程状态。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("-a")]),v._v(" 显示所有进程")]),v._v(" "),e("li",[e("code",[v._v("-u")]),v._v(" 向用户格式化")]),v._v(" "),e("li",[e("code",[v._v("-e")]),v._v(" 显示所有进程，环境变量，真正所有的进程")]),v._v(" "),e("li",[e("code",[v._v("-C")]),v._v(" 按程序名称查找")]),v._v(" "),e("li",[e("code",[v._v("-p")]),v._v(" 按 process ID 查找")]),v._v(" "),e("li",[e("code",[v._v("-w")]),v._v(" 增加显示宽度")]),v._v(" "),e("li",[e("code",[v._v("-f")]),v._v(" 全格式")]),v._v(" "),e("li",[e("code",[v._v("-au")]),v._v(" 显示较详细的资讯")]),v._v(" "),e("li",[e("code",[v._v("-aux")]),v._v(" 显示所有包含其他使用者的进程")]),v._v(" "),e("li",[e("code",[v._v("--sort")]),v._v(" 按照某一列排序")])]),v._v(" "),e("p",[v._v("常用：")]),v._v(" "),e("ul",[e("li",[v._v("按照占用内存大小排序："),e("code",[v._v("ps aux --sort -%MEM")])])]),v._v(" "),e("h2",{attrs:{id:"systemctl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#systemctl"}},[v._v("#")]),v._v(" "),e("RouterLink",{attrs:{to:"/computer-literacy/linux/using_linux.html#systemd"}},[v._v("systemctl")])],1),v._v(" "),e("p",[v._v("系统服务控制，systemd control，它提供了一组子命令来管理单个的 unit，其命令格式为：")]),v._v(" "),e("p",[e("code",[v._v("systemctl [command] [unit]")])]),v._v(" "),e("p",[v._v("command 主要有：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("start")]),v._v("：立刻启动后面接的 unit。")]),v._v(" "),e("li",[e("code",[v._v("stop")]),v._v("：立刻关闭后面接的 unit。")]),v._v(" "),e("li",[e("code",[v._v("restart")]),v._v("：立刻关闭后启动后面接的 unit，亦即执行 stop 再 start 的意思。")]),v._v(" "),e("li",[e("code",[v._v("reload")]),v._v("：不关闭 unit 的情况下，重新载入配置文件，让设置生效。")]),v._v(" "),e("li",[e("code",[v._v("enable")]),v._v("：设置下次开机时，后面接的 unit 会被启动。")]),v._v(" "),e("li",[e("code",[v._v("disable")]),v._v("：设置下次开机时，后面接的 unit 不会被启动。")]),v._v(" "),e("li",[e("code",[v._v("status")]),v._v("：目前后面接的这个 unit 的状态，会列出有没有正在执行、开机时是否启动等信息。")]),v._v(" "),e("li",[e("code",[v._v("is-active")]),v._v("：目前有没有正在运行中。")]),v._v(" "),e("li",[e("code",[v._v("is-enable")]),v._v("：开机时有没有默认要启用这个 unit。")]),v._v(" "),e("li",[e("code",[v._v("kill")]),v._v("：不要被 kill 这个名字吓着了，它其实是向运行 unit 的进程发送信号。")]),v._v(" "),e("li",[e("code",[v._v("show")]),v._v("：列出 unit 的配置。")]),v._v(" "),e("li",[e("code",[v._v("mask")]),v._v("：注销 unit，注销后你就无法启动这个 unit 了。")]),v._v(" "),e("li",[e("code",[v._v("unmask")]),v._v("：取消对 unit 的注销。")])]),v._v(" "),e("h2",{attrs:{id:"curl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#curl"}},[v._v("#")]),v._v(" curl")]),v._v(" "),e("p",[e("code",[v._v("CommandLine URL")]),v._v(" 或 "),e("code",[v._v("CommandLine Uniform Resource Locator")]),v._v("，顾名思义，"),e("code",[v._v("curl")]),v._v(" 命令是在命令行方式下工作，利用 "),e("code",[v._v("URL")]),v._v(" 的语法进行数据的传输或者文件的传输。")]),v._v(" "),e("ul",[e("li",[v._v("不带参数，默认发送 GET 请求。\n"),e("ul",[e("li",[e("code",[v._v("curl http://www.baidu.com")])])])])]),v._v(" "),e("h3",{attrs:{id:"常用参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用参数"}},[v._v("#")]),v._v(" 常用参数")]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("-d")]),v._v("，用于发送 POST 请求的数据体。")]),v._v(" "),e("ul",[e("li",[v._v("使用 "),e("code",[v._v("-d")]),v._v(" 参数以后，HTTP 请求会自动加上标头 "),e("code",[v._v("Content-Type : application/x-www-form-urlencoded")]),v._v("。并且会自动将请求转为 POST 方法，因此可以省略 "),e("code",[v._v("-X POST")]),v._v("。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("-H")]),v._v("，添加 HTTP 请求的标头。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("示例：")]),v._v(" "),e("p",[e("code",[v._v('curl -d \'{"login": "emma", "pass": "123"}\' -H \'Content-Type: application/json\' https://google.com/login')])]),v._v(" "),e("p",[v._v("添加 HTTP 请求的标头是 "),e("code",[v._v("Content-Type: application/json")]),v._v("，然后用-d参数发送 JSON 数据。")])])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("-X")]),v._v(" 选项，指定请求方式，包括 "),e("code",[v._v("GET")]),v._v("、"),e("code",[v._v("PUT")]),v._v("、"),e("code",[v._v("POST")]),v._v("、"),e("code",[v._v("DELETE")]),v._v(" 四种方式。")]),v._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[v._v("curl")]),v._v(" -X GET www.baidu.com\n"),e("span",{pre:!0,attrs:{class:"token function"}},[v._v("curl")]),v._v(" -X POST www.baidu.com\n"),e("span",{pre:!0,attrs:{class:"token function"}},[v._v("curl")]),v._v(" -X DELETE www.baidu.com\n"),e("span",{pre:!0,attrs:{class:"token function"}},[v._v("curl")]),v._v(" -X PUT www.baidu.com\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br"),e("span",{staticClass:"line-number"},[v._v("3")]),e("br"),e("span",{staticClass:"line-number"},[v._v("4")]),e("br")])])])]),v._v(" "),e("h3",{attrs:{id:"不常用参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#不常用参数"}},[v._v("#")]),v._v(" 不常用参数")]),v._v(" "),e("p",[v._v("像 "),e("code",[v._v("-A")]),v._v(" 这种参数可以直接用 "),e("code",[v._v("-H")]),v._v(" 代替。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("-A")]),v._v("，即 "),e("code",[v._v("User-Agent")]),v._v("，指定客户端的用户代理标头。")]),v._v(" "),e("li",[e("code",[v._v("-b")]),v._v("，用来向服务器发送 Cookie。\n"),e("ul",[e("li",[e("code",[v._v("curl -b 'foo=bar' https://google.com")])]),v._v(" "),e("li",[v._v("上面的会生成一个标头 "),e("code",[v._v("Cookie： foo=bar")])])])]),v._v(" "),e("li",[e("code",[v._v("-c")]),v._v("，将服务器设置的 Cookie 写入一个文件。")]),v._v(" "),e("li",[v._v("...")])]),v._v(" "),e("h2",{attrs:{id:"chmod"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chmod"}},[v._v("#")]),v._v(" chmod")]),v._v(" "),e("p",[v._v("修改权限，参数有两个，指定哪个用户，指定什么权限。")]),v._v(" "),e("p",[v._v("示例： "),e("code",[v._v("chmod u+x")])]),v._v(" "),e("p",[e("code",[v._v("chmod +x <filename>")]),v._v(" 等同于 "),e("code",[v._v("chmod a+x <filename>")])]),v._v(" "),e("blockquote",[e("p",[v._v("不指定用户默认操作的是 all")])]),v._v(" "),e("h3",{attrs:{id:"执行用户"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行用户"}},[v._v("#")]),v._v(" 执行用户")]),v._v(" "),e("ul",[e("li",[v._v("u,user")]),v._v(" "),e("li",[v._v("g,group")]),v._v(" "),e("li",[v._v("o,other")]),v._v(" "),e("li",[v._v("a,all")])]),v._v(" "),e("h3",{attrs:{id:"权限"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#权限"}},[v._v("#")]),v._v(" 权限")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("r")]),v._v("，读权限 4")]),v._v(" "),e("li",[e("code",[v._v("w")]),v._v("，写权限 2")]),v._v(" "),e("li",[e("code",[v._v("x")]),v._v("，可执行权限 1")])]),v._v(" "),e("h3",{attrs:{id:"操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作"}},[v._v("#")]),v._v(" 操作")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("+")]),v._v("，添加")]),v._v(" "),e("li",[e("code",[v._v("-")]),v._v("，移除")]),v._v(" "),e("li",[e("code",[v._v("=")]),v._v("，赋值")])]),v._v(" "),e("h2",{attrs:{id:"ncdu"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ncdu"}},[v._v("#")]),v._v(" ncdu")]),v._v(" "),e("p",[v._v("ncdu 是一个基于 "),e("code",[v._v("ncurses")]),v._v(" 的交互式图形化的磁盘使用情况分析工具，也就是图形化的 "),e("code",[v._v("du")]),v._v(" 命令，默认按照占用量从大到小排列。")]),v._v(" "),e("p",[e("code",[v._v("ncdu [目录]")]),v._v("，例如 "),e("code",[v._v("ncdu /")]),v._v(" 将检索根目录下每个目录大小。")]),v._v(" "),e("p",[v._v("操作方式：左键返回上一层，右键进入，"),e("code",[v._v("D")]),v._v("键删除。")]),v._v(" "),e("p",[v._v("用来替代常用的 "),e("code",[v._v("du -sh [path]")]),v._v(" 等命令。")]),v._v(" "),e("h2",{attrs:{id:"top"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#top"}},[v._v("#")]),v._v(" top")]),v._v(" "),e("p",[v._v("查看系统的资源占用情况，类似于 Windows 的任务管理器。")]),v._v(" "),e("h2",{attrs:{id:"free"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#free"}},[v._v("#")]),v._v(" free")]),v._v(" "),e("p",[v._v("查看内存的占用情况。")]),v._v(" "),e("h2",{attrs:{id:"子命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子命令"}},[v._v("#")]),v._v(" 子命令")]),v._v(" "),e("p",[v._v("使用 `` 和 "),e("code",[v._v("$()")]),v._v(" 作用一致。")]),v._v(" "),e("h2",{attrs:{id:"执行多个命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行多个命令"}},[v._v("#")]),v._v(" 执行多个命令")]),v._v(" "),e("p",[v._v("执行多个命令时:")]),v._v(" "),e("ul",[e("li",[v._v("使用 "),e("code",[v._v("&&")]),v._v(" 连接，代表前一个命令必须成功，后一个才执行。")]),v._v(" "),e("li",[v._v("使用 "),e("code",[v._v("||")]),v._v(" 连接，代表前一个命令必须失败，后一个才执行。")]),v._v(" "),e("li",[v._v("使用 "),e("code",[v._v(";")]),v._v(" 符号连接多个命令，不管前面是否成功，后面的命令都会执行。")])]),v._v(" "),e("h2",{attrs:{id:"和-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#和-的区别"}},[v._v("#")]),v._v(" -- 和 - 的区别")]),v._v(" "),e("p",[v._v("命令后边跟的中划线有一个有两个，区别是：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("-")]),v._v(" 后边跟的是一个字母（也就是缩写），可以跟多个字母代表多个参数。")]),v._v(" "),e("li",[e("code",[v._v("--")]),v._v(" 后面跟的是一个单词，只是一个参数。")])]),v._v(" "),e("h2",{attrs:{id:"echo-彩色字"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#echo-彩色字"}},[v._v("#")]),v._v(" echo 彩色字")]),v._v(" "),e("p",[e("code",[v._v("echo -e xxx")]),v._v(" 中 "),e("code",[v._v("-e")]),v._v(" 参数是开启转义，就是后面的内容中如果有转义字符，支持转义。")]),v._v(" "),e("p",[v._v("xxx色彩格式为 "),e("code",[v._v("\\033[显示方式;前景色;背景色m")]),v._v("。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("\\033")]),v._v(" 是 ESC 健的八进制。")]),v._v(" "),e("li",[e("code",[v._v("\\033[")]),v._v(" 即告诉终端后面是设置颜色的参数，显示方式、前景色、背景色均是数字，"),e("code",[v._v("m")]),v._v(" 结束。")]),v._v(" "),e("li",[v._v("三个参数（显示方式、前景色、背景色）可以只使用部分。")])]),v._v(" "),e("blockquote",[e("p",[v._v("显示方式 对照表")])]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("code")]),v._v(" "),e("th",[v._v("含义")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("0")]),v._v(" "),e("td",[v._v("终端默认设置")])]),v._v(" "),e("tr",[e("td",[v._v("1")]),v._v(" "),e("td",[v._v("高亮显示")])]),v._v(" "),e("tr",[e("td",[v._v("4")]),v._v(" "),e("td",[v._v("使用下划线")])]),v._v(" "),e("tr",[e("td",[v._v("5")]),v._v(" "),e("td",[v._v("闪烁")])]),v._v(" "),e("tr",[e("td",[v._v("7")]),v._v(" "),e("td",[v._v("反白显示")])]),v._v(" "),e("tr",[e("td",[v._v("8")]),v._v(" "),e("td",[v._v("不可见")])])])]),v._v(" "),e("blockquote",[e("p",[v._v("字体背景色 对照表")])]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("前景色 3x")]),v._v(" "),e("th",[v._v("背景色4x")]),v._v(" "),e("th",[v._v("颜色")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("30")]),v._v(" "),e("td",[v._v("40")]),v._v(" "),e("td",[v._v("黑色")])]),v._v(" "),e("tr",[e("td",[v._v("31")]),v._v(" "),e("td",[v._v("41")]),v._v(" "),e("td",[v._v("红色")])]),v._v(" "),e("tr",[e("td",[v._v("32")]),v._v(" "),e("td",[v._v("42")]),v._v(" "),e("td",[v._v("绿色")])]),v._v(" "),e("tr",[e("td",[v._v("33")]),v._v(" "),e("td",[v._v("43")]),v._v(" "),e("td",[v._v("黃色")])]),v._v(" "),e("tr",[e("td",[v._v("34")]),v._v(" "),e("td",[v._v("44")]),v._v(" "),e("td",[v._v("蓝色")])]),v._v(" "),e("tr",[e("td",[v._v("35")]),v._v(" "),e("td",[v._v("45")]),v._v(" "),e("td",[v._v("紫红色")])]),v._v(" "),e("tr",[e("td",[v._v("36")]),v._v(" "),e("td",[v._v("46")]),v._v(" "),e("td",[v._v("青蓝色")])])])]),v._v(" "),e("h3",{attrs:{id:"示例-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例-2"}},[v._v("#")]),v._v(" 示例")]),v._v(" "),e("p",[e("code",[v._v("echo -e \\033[32m hello")]),v._v(" 输出绿色你好。")]),v._v(" "),e("p",[e("strong",[v._v("注意:")]),v._v(" 输出带颜色的字符后没有恢复终端默认设置，后续的命令输出仍旧会采用之前的颜色，如果是在脚本中设置了颜色而未恢复，则整个脚本的输出都会采用之前的颜色，因此如果不希望影响后面文字的输出，最好是在输出带颜色的文字之后恢复终端默认设置,如下：")]),v._v(" "),e("p",[e("code",[v._v("echo -e \\033[32m hello \\033[0m")]),v._v(" 输出绿色你好，然后回复终端的默认设置 "),e("code",[v._v("\\033[0m")]),v._v("。")]),v._v(" "),e("h2",{attrs:{id:"讨论区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#讨论区"}},[v._v("#")]),v._v(" 讨论区")]),v._v(" "),e("blockquote",[e("p",[v._v("由于评论过多会影响页面最下方的导航，故将评论区做默认折叠处理。")])]),v._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[v._v("点击查看评论区内容，渴望您的宝贵建议~")]),v._v(" "),e("Vssue",{attrs:{title:v.$title,options:{locale:"zh"}}})],1)])}),[],!1,null,null,null);_.default=s.exports}}]);